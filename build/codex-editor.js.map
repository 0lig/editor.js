{"version":3,"sources":["webpack:///webpack/bootstrap e205e19e81db7792f3c8","webpack:///./src/components/dom.js","webpack:///./src/components/util.js","webpack:///./src/components/modules/toolbar/inline.js","webpack:///./src/components/modules/toolbar/settings.js","webpack:///./src/components/modules/toolbar/toolbox.js","webpack:///./src/components/modules/_anchors.js","webpack:///./src/components/modules/_callbacks.js","webpack:///./src/components/modules/_caret.js","webpack:///./src/components/modules/_content.js","webpack:///./src/components/modules/_destroyer.js","webpack:///./src/components/modules/_listeners.js","webpack:///./src/components/modules/_notifications.js","webpack:///./src/components/modules/_parser.js","webpack:///./src/components/modules/_paste.js","webpack:///./src/components/modules/_sanitizer.js","webpack:///./src/components/modules/_saver.js","webpack:///./src/components/modules/_transport.js","webpack:///./src/components/modules/blockManager.js","webpack:///./src/components/modules/events.js","webpack:///./src/components/modules/renderer.js","webpack:///./src/components/modules/toolbar.js","webpack:///./src/components/modules/toolbar/toolbar.js","webpack:///./src/components/modules/tools.js","webpack:///./src/components/modules/ui.js","webpack:///./src/codex.js","webpack:///./src/components/modules ^\\.\\/.*$","webpack:///./node_modules/html-janitor/src/html-janitor.js","webpack:///./src/components/block.js","webpack:///./src/styles/main.css","webpack:///./node_modules/css-loader/lib/css-base.js"],"names":["Dom","tagName","classNames","attributes","el","document","createElement","Array","isArray","classList","add","attrName","parent","elements","forEach","appendChild","selector","querySelector","querySelectorAll","node","nodeType","Node","ELEMENT_NODE","module","exports","chains","success","fallback","Promise","resolve","reduce","previousValue","currentValue","iteration","then","waitNextBlock","length","chainData","function","data","catch","collection","prototype","slice","call","inline","editor","codex","buttonsOpened","actionsOpened","wrappersOffset","storedSelection","show","currentNode","content","tool","dataset","plugin","tools","showInlineToolbar","selectedText","getSelectionText","toolbar","nodes","inlineToolbar","wrapper","move","showButtons","close","remove","getWrappersOffset","coords","getSelectionCoords","defaultOffset","newCoordinateX","newCoordinateY","offsetHeight","x","left","y","window","scrollY","top","style","transform","Math","floor","closeButtons","closeAction","toolClicked","event","type","createLinkAction","defaultToolAction","buttons","childNodes","hightlight","offset","getOffset","_x","_y","isNaN","offsetLeft","offsetTop","clientLeft","clientTop","offsetParent","sel","selection","range","createRange","collapse","boundingLeft","boundingTop","getSelection","rangeCount","getRangeAt","cloneRange","getClientRects","rect","toString","showActions","action","actions","innerHTML","inlineToolbarAnchorInputKeydown_","keyCode","core","keys","ENTER","editable","restoreSelection","setAnchor","value","preventDefault","stopImmediatePropagation","clearRange","isActive","isLinkActive","saveSelection","draw","inputForLink","focus","listeners","dataType","contains","execCommand","url","containerEl","preSelectionRange","start","selectNodeContents","setEnd","startContainer","startOffset","end","savedSel","charIndex","setStart","nodeStack","foundStart","stop","nextCharIndex","pop","i","push","removeAllRanges","addRange","queryCommandState","setButtonHighlighted","removeButtonsHighLight","tag","anchorNode","parentNode","button","icon","settings","opened","setting","open","toolType","makeSettings","settingsBlock","pluginSettings","blockSettings","toggle","makeRemoveBlockButton","removeBlockWrapper","settingButton","actionWrapper","confirmAction","textContent","cancelAction","removeButtonClicked","confirmRemovingRequest","cancelRemovingRequest","hideRemoveActions","showRemoveActions","toolbox","currentBlock","firstLevelBlocksCount","redactor","ui","addInitialBlock","saveInputs","openedOnBlock","plusButton","current","leaf","currentTool","Object","barButtons","toolbarButtons","nextToolIndex","toolToSelect","visibleTool","displayInToolbox","indexOf","UNREPLACEBLE_TOOLS","workingNode","currentInputIndex","caret","inputIndex","newBlockContent","appendCallback","blockData","render","block","stretched","trim","switchBlock","insertBlock","setTimeout","setToBlock","workingNodeChanged","anchors","input","settingsOpened","anchor","anchorChanged","e","newAnchor","target","rusToTranslit","className","BLOCK_WITH_ANCHOR","keyDownOnAnchorInput","stopPropagation","blur","keyUpOnAnchorInput","LEFT","DOWN","string","ru","en","split","join","toLowerCase","replace","callbacks","globalKeydown","enterKeyPressed_","redactorKeyDown","TAB","tabKeyPressedOnRedactorsZone_","enterKeyPressedOnRedactorsZone_","ESC","escapeKeyPressedOnRedactorsZone_","defaultKeyPressedOnRedactorsZone_","globalKeyup","UP","RIGHT","arrowKeyPressed_","isBlockEmpty","editorAreaHightlighted","enterPressedOnBlock_","NEW_BLOCK_TYPE","initialBlockPlugin","contentEditable","saveCurrentInputIndex","getCurrentInputIndex","isEnterPressedOnToolbar","state","inputs","enableLineBreaks","shiftKey","currentSelection","currentSelectedNode","caretAtTheEndOfText","position","atTheEnd","isTextNodeHasParentBetweenContenteditable","callback","enterPressedOnBlock","nodeTypes","TEXT","log","splitBlock","showPlusButton","islastNode","isLastNode","clearMark","redactorClicked","detectWhenClickedOnFirstLevelBlockArea_","firstLevelBlock","indexOfLastInput","getFirstLevelBlock","setToNextBlock","inputIsEmpty","currentNodeType","isInitialType","hidePlusButton","markBlock","flag","isDomNode","body","toolbarButtonClicked","plusButtonClicked","blockKeydown","blockRightOrDownArrowPressed_","BACKSPACE","backspacePressed_","blockLeftOrUpArrowPressed_","focusedNode","focusedNodeHolder","editableElementIndex","caretInLastChild","lastChild","deepestTextnode","getDeepestTextNodeFromPosition","anchorOffset","caretInFirstChild","caretAtTheBeginning","firstChild","setToPreviousBlock","selectionLength","isNativeInput","getRange","endOffset","atStart","mergeBlocks","showSettingsButtonClicked","currentToolType","focusedNodeIndex","set","index","childs","nodeToSet","nextInput","emptyTextElement","createTextNode","targetInput","previousInput","lastChildNode","lengthOfLastChildNode","pluginsRender","isFirstNode","isOffsetZero","insertNode","lastNode","DOCUMENT_FRAGMENT","deleteContents","setStartAfter","config","Editor","CSS","highlighted","_currentNode","_currentIndex","pluginHTML","isStretched","make","blockContent","toolId","isNode","newBlock","composeBlock_","insertAdjacentElement","destroyer","removeNodes","notifications","destroyPlugins","destroy","destroyScripts","scripts","getElementsByTagName","id","scriptPrefix","removeAll","plugins","allListeners","search","byElement","element","context","listenersOnElement","listener","byType","eventType","listenersWithType","byHandler","handler","listenersWithHandler","one","result","all","isCapture","addEventListener","alreadyAddedListener","removeEventListener","existingListeners","splice","map","get","queue","addToQueue","createHolder","holder","errorThrown","errorMsg","notification","message","constructorSettings","cancel","confirm","inputField","confirmHandler","cancelHandler","create","time","okBtn","cancelBtn","okMsg","cancelMsg","send","clear","parser","insertPastedContent","blockType","text","isFirstLevelBlock","TAG","BLOCK_CLASSNAME","paste","patterns","prepare","renderOnPastePatterns","pattern","pasted","clipBoardData","clipboardData","getData","analize","execArray","regex","exec","match","pasteToNewBlock_","blockPasteCallback","needsToHandlePasteEvent","htmlData","plainData","paragraphs","cleanData","wrappedData","sanitizer","clean","wrapTextWithParagraphs","emulateUserAgentBehaviour","insertPastedParagraphs","editableParent","getEditableParent","paragraph","newNode","childElementCount","createDocumentFragment","cloneNode","janitor","require","isEmpty","Config","CUSTOM","BASIC","tags","p","a","href","rel","init_","userCustomConfig","configuration","dirtyString","customConfig","janitorInstance","saver","save","html","jsonOutput","saveBlocks","blocks","getBlockData","makeOutput","saveBlockData","validateBlockData","pluginName","pluginsContent","inputPosition","available","items","validate","savedData","filter","Date","version","transport","currentRequest","arguments","fileSelected","clearInput","files","formData","FormData","multiple","append","name","ajax","beforeSend","error","progress","selectAndUpload","args","setAttribute","accept","click","abort","BlockManager","_blocks","_currentBlockIndex","Blocks","UI","Proxy","toolName","toolInstance","Tools","construct","array","workingArea","previousBlock","nextBlock","targetBlock","insert","children","instance","Number","Events","subscribers","eventName","previousData","currentHandler","newData","Renderer","makeBlock","sequence","item","Toolbar","settingsToggler","removeBlockButton","defaultSettings","makeBlockSettingsPanel","defaultToolbarHeight","hideToolbar","showSettingsButton","newYCoordinate","util","toolsAvailable","toolsUnavailable","iconClassName","toolClasses","hasOwnProperty","reject","sequenceData","getListOfPrepareFunctions","toolPreparationList","toolClass","toolInstances","toolsConfig","editorWrapper","editorZone","getElementById","holderId","Error","loadStyles","console","styles","head","modules","editorModules","moduleInstances","init","constructModules","configureModules","Module","displayName","getModulesDiff","diff","moduleName","prepareDecorator","placeholder","b","Block","_html","compose"],"mappings":"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","file":"codex-editor.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 24);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap e205e19e81db7792f3c8","/**\n * DOM manupulations helper\n */\nexport default class Dom {\n\n    /**\n     * Helper for making Elements with classname and attributes\n     *\n     * @param  {string} tagName           - new Element tag name\n     * @param  {array|string} classNames  - list or name of CSS classname(s)\n     * @param  {Object} attributes        - any attributes\n     * @return {Element}\n     */\n    static make(tagName, classNames = null, attributes = {}) {\n\n        var el = document.createElement(tagName);\n\n        if ( Array.isArray(classNames) ) {\n\n            el.classList.add(...classNames);\n\n        } else if( classNames ) {\n\n            el.classList.add(classNames);\n\n        }\n\n        for (let attrName in attributes) {\n\n            el[attrName] = attributes[attrName];\n\n        }\n\n        return el;\n\n    }\n\n    /**\n     * Append one or several elements to the parent\n     *\n     * @param  {Element} parent    - where to append\n     * @param  {Element|Element[]} - element ore elements list\n     */\n    static append(parent, elements) {\n\n        if ( Array.isArray(elements) ) {\n\n            elements.forEach( el => parent.appendChild(el) );\n\n        } else {\n\n            parent.appendChild(elements);\n\n        }\n\n    }\n\n    /**\n     * Selector Decorator\n     *\n     * Returns first match\n     *\n     * @param {Element} el - element we searching inside. Default - DOM Document\n     * @param {String} selector - searching string\n     *\n     * @returns {Element}\n     */\n    static find(el = document, selector) {\n\n        return el.querySelector(selector);\n\n    }\n\n    /**\n     * Selector Decorator.\n     *\n     * Returns all matches\n     *\n     * @param {Element} el - element we searching inside. Default - DOM Document\n     * @param {String} selector - searching string\n     * @returns {NodeList}\n     */\n    static findAll(el = document, selector) {\n\n        return el.querySelectorAll(selector);\n\n    }\n\n    static isNode(node) {\n\n        return node && typeof node === 'object' && node.nodeType && node.nodeType === Node.ELEMENT_NODE;\n\n    }\n\n};\n\n\n// WEBPACK FOOTER //\n// ./src/components/dom.js","/**\n * Codex Editor Util\n */\nmodule.exports = class Util {\n\n    /**\n     * @typedef {Object} ChainData\n     * @property {Object} data - data that will be passed to the success or fallback\n     * @property {Function} function - function's that must be called asynchronically\n     */\n\n    /**\n     * Fires a promise sequence asyncronically\n     *\n     * @param {Object[]} chains - list or ChainData's\n     * @param {Function} success - success callback\n     * @param {Function} fallback - callback that fires in case of errors\n     *\n     * @return {Promise}\n     */\n    static sequence(chains, success = () => {}, fallback = () => {}) {\n\n        return new Promise(function (resolve) {\n\n            /**\n             * pluck each element from queue\n             * First, send resolved Promise as previous value\n             * Each plugins \"prepare\" method returns a Promise, that's why\n             * reduce current element will not be able to continue while can't get\n             * a resolved Promise\n             */\n            chains.reduce(function (previousValue, currentValue, iteration) {\n\n                return previousValue\n                    .then(() => waitNextBlock(currentValue, success, fallback))\n                    .then(() => {\n\n                        // finished\n                        if (iteration == chains.length - 1) {\n\n                            resolve();\n\n                        }\n\n                    });\n\n            }, Promise.resolve());\n\n        });\n\n        /**\n         * Decorator\n         *\n         * @param {ChainData} chainData\n         *\n         * @param {Function} success\n         * @param {Function} fallback\n         *\n         * @return {Promise}\n         */\n        function waitNextBlock(chainData, success, fallback) {\n\n            return new Promise(function (resolve) {\n\n                chainData.function()\n                    .then(() => {\n\n                        success(chainData.data);\n\n                    })\n                    .then(resolve)\n                    .catch(function () {\n\n                        fallback(chainData.data);\n\n                        // anyway, go ahead even it falls\n                        resolve();\n\n                    });\n\n            });\n\n        }\n\n    }\n\n    /**\n     * Make array from array-like collection\n     *\n     * @param {*} collection\n     *\n     * @return {Array}\n     */\n    static array(collection) {\n\n        return Array.prototype.slice.call(collection);\n\n    }\n\n};\n\n\n// WEBPACK FOOTER //\n// ./src/components/util.js","/**\n * Inline toolbar\n *\n * Contains from tools:\n * Bold, Italic, Underline and Anchor\n *\n * @author Codex Team\n * @version 1.0\n */\n\nmodule.exports = (function (inline) {\n\n    let editor = codex.editor;\n\n    inline.buttonsOpened = null;\n    inline.actionsOpened = null;\n    inline.wrappersOffset = null;\n\n    /**\n     * saving selection that need for execCommand for styling\n     *\n     */\n    inline.storedSelection = null;\n\n    /**\n     * @protected\n     *\n     * Open inline toobar\n     */\n    inline.show = function () {\n\n        var currentNode = editor.content.currentNode,\n            tool = currentNode.dataset.tool,\n            plugin;\n\n        /**\n         * tool allowed to open inline toolbar\n         */\n        plugin = editor.tools[tool];\n\n        if (!plugin.showInlineToolbar)\n            return;\n\n        var selectedText = inline.getSelectionText(),\n            toolbar      = editor.nodes.inlineToolbar.wrapper;\n\n        if (selectedText.length > 0) {\n\n            /** Move toolbar and open */\n            editor.toolbar.inline.move();\n\n            /** Open inline toolbar */\n            toolbar.classList.add('opened');\n\n            /** show buttons of inline toolbar */\n            editor.toolbar.inline.showButtons();\n\n        }\n\n    };\n\n    /**\n     * @protected\n     *\n     * Closes inline toolbar\n     */\n    inline.close = function () {\n\n        var toolbar = editor.nodes.inlineToolbar.wrapper;\n\n        toolbar.classList.remove('opened');\n\n    };\n\n    /**\n     * @private\n     *\n     * Moving toolbar\n     */\n    inline.move = function () {\n\n        if (!this.wrappersOffset) {\n\n            this.wrappersOffset = this.getWrappersOffset();\n\n        }\n\n        var coords          = this.getSelectionCoords(),\n            defaultOffset   = 0,\n            toolbar         = editor.nodes.inlineToolbar.wrapper,\n            newCoordinateX,\n            newCoordinateY;\n\n        if (toolbar.offsetHeight === 0) {\n\n            defaultOffset = 40;\n\n        }\n\n        newCoordinateX = coords.x - this.wrappersOffset.left;\n        newCoordinateY = coords.y + window.scrollY - this.wrappersOffset.top - defaultOffset - toolbar.offsetHeight;\n\n        toolbar.style.transform = `translate3D(${Math.floor(newCoordinateX)}px, ${Math.floor(newCoordinateY)}px, 0)`;\n\n        /** Close everything */\n        editor.toolbar.inline.closeButtons();\n        editor.toolbar.inline.closeAction();\n\n    };\n\n    /**\n     * @private\n     *\n     * Tool Clicked\n     */\n\n    inline.toolClicked = function (event, type) {\n\n        /**\n         * For simple tools we use default browser function\n         * For more complicated tools, we should write our own behavior\n         */\n        switch (type) {\n\n            case 'createLink' : editor.toolbar.inline.createLinkAction(event, type); break;\n            default           : editor.toolbar.inline.defaultToolAction(type); break;\n\n        }\n\n        /**\n         * highlight buttons\n         * after making some action\n         */\n        editor.nodes.inlineToolbar.buttons.childNodes.forEach(editor.toolbar.inline.hightlight);\n\n    };\n\n    /**\n     * @private\n     *\n     * Saving wrappers offset in DOM\n     */\n    inline.getWrappersOffset = function () {\n\n        var wrapper = editor.nodes.wrapper,\n            offset  = this.getOffset(wrapper);\n\n        this.wrappersOffset = offset;\n        return offset;\n\n    };\n\n    /**\n     * @private\n     *\n     * Calculates offset of DOM element\n     *\n     * @param el\n     * @returns {{top: number, left: number}}\n     */\n    inline.getOffset = function ( el ) {\n\n        var _x = 0;\n        var _y = 0;\n\n        while( el && !isNaN( el.offsetLeft ) && !isNaN( el.offsetTop ) ) {\n\n            _x += (el.offsetLeft + el.clientLeft);\n            _y += (el.offsetTop + el.clientTop);\n            el = el.offsetParent;\n\n        }\n        return { top: _y, left: _x };\n\n    };\n\n    /**\n     * @private\n     *\n     * Calculates position of selected text\n     * @returns {{x: number, y: number}}\n     */\n    inline.getSelectionCoords = function () {\n\n        var sel = document.selection, range;\n        var x = 0, y = 0;\n\n        if (sel) {\n\n            if (sel.type != 'Control') {\n\n                range = sel.createRange();\n                range.collapse(true);\n                x = range.boundingLeft;\n                y = range.boundingTop;\n\n            }\n\n        } else if (window.getSelection) {\n\n            sel = window.getSelection();\n\n            if (sel.rangeCount) {\n\n                range = sel.getRangeAt(0).cloneRange();\n                if (range.getClientRects) {\n\n                    range.collapse(true);\n                    var rect = range.getClientRects()[0];\n\n                    if (!rect) {\n\n                        return;\n\n                    }\n\n                    x = rect.left;\n                    y = rect.top;\n\n                }\n\n            }\n\n        }\n        return { x: x, y: y };\n\n    };\n\n    /**\n     * @private\n     *\n     * Returns selected text as String\n     * @returns {string}\n     */\n    inline.getSelectionText = function () {\n\n        var selectedText = '';\n\n        // all modern browsers and IE9+\n        if (window.getSelection) {\n\n            selectedText = window.getSelection().toString();\n\n        }\n\n        return selectedText;\n\n    };\n\n    /** Opens buttons block */\n    inline.showButtons = function () {\n\n        var buttons = editor.nodes.inlineToolbar.buttons;\n\n        buttons.classList.add('opened');\n\n        editor.toolbar.inline.buttonsOpened = true;\n\n        /** highlight buttons */\n        editor.nodes.inlineToolbar.buttons.childNodes.forEach(editor.toolbar.inline.hightlight);\n\n    };\n\n    /** Makes buttons disappear */\n    inline.closeButtons = function () {\n\n        var buttons = editor.nodes.inlineToolbar.buttons;\n\n        buttons.classList.remove('opened');\n\n        editor.toolbar.inline.buttonsOpened = false;\n\n    };\n\n    /** Open buttons defined action if exist */\n    inline.showActions = function () {\n\n        var action = editor.nodes.inlineToolbar.actions;\n\n        action.classList.add('opened');\n\n        editor.toolbar.inline.actionsOpened = true;\n\n    };\n\n    /** Close actions block */\n    inline.closeAction = function () {\n\n        var action = editor.nodes.inlineToolbar.actions;\n\n        action.innerHTML = '';\n        action.classList.remove('opened');\n        editor.toolbar.inline.actionsOpened = false;\n\n    };\n\n\n    /**\n    * Callback for keydowns in inline toolbar \"Insert link...\" input\n    */\n    let inlineToolbarAnchorInputKeydown_ = function (event) {\n\n        if (event.keyCode != editor.core.keys.ENTER) {\n\n            return;\n\n        }\n\n        let editable        = editor.content.currentNode,\n            storedSelection = editor.toolbar.inline.storedSelection;\n\n        editor.toolbar.inline.restoreSelection(editable, storedSelection);\n        editor.toolbar.inline.setAnchor(this.value);\n\n        /**\n         * Preventing events that will be able to happen\n         */\n        event.preventDefault();\n        event.stopImmediatePropagation();\n\n        editor.toolbar.inline.clearRange();\n\n    };\n\n    /** Action for link creation or for setting anchor */\n    inline.createLinkAction = function (event) {\n\n        var isActive = this.isLinkActive();\n\n        var editable        = editor.content.currentNode,\n            storedSelection = editor.toolbar.inline.saveSelection(editable);\n\n        /** Save globally selection */\n        editor.toolbar.inline.storedSelection = storedSelection;\n\n        if (isActive) {\n\n\n            /**\n             * Changing stored selection. if we want to remove anchor from word\n             * we should remove anchor from whole word, not only selected part.\n             * The solution is than we get the length of current link\n             * Change start position to - end of selection minus length of anchor\n             */\n            editor.toolbar.inline.restoreSelection(editable, storedSelection);\n\n            editor.toolbar.inline.defaultToolAction('unlink');\n\n        } else {\n\n            /** Create input and close buttons */\n            var action = editor.draw.inputForLink();\n\n            editor.nodes.inlineToolbar.actions.appendChild(action);\n\n            editor.toolbar.inline.closeButtons();\n            editor.toolbar.inline.showActions();\n\n            /**\n             * focus to input\n             * Solution: https://developer.mozilla.org/ru/docs/Web/API/HTMLElement/focus\n             * Prevents event after showing input and when we need to focus an input which is in unexisted form\n             */\n            action.focus();\n            event.preventDefault();\n\n            /** Callback to link action */\n            editor.listeners.add(action, 'keydown', inlineToolbarAnchorInputKeydown_, false);\n\n        }\n\n    };\n\n    inline.isLinkActive = function () {\n\n        var isActive = false;\n\n        editor.nodes.inlineToolbar.buttons.childNodes.forEach(function (tool) {\n\n            var dataType = tool.dataset.type;\n\n            if (dataType == 'link' && tool.classList.contains('hightlighted')) {\n\n                isActive = true;\n\n            }\n\n        });\n\n        return isActive;\n\n    };\n\n    /** default action behavior of tool */\n    inline.defaultToolAction = function (type) {\n\n        document.execCommand(type, false, null);\n\n    };\n\n    /**\n     * @private\n     *\n     * Sets URL\n     *\n     * @param {String} url - URL\n     */\n    inline.setAnchor = function (url) {\n\n        document.execCommand('createLink', false, url);\n\n        /** Close after URL inserting */\n        editor.toolbar.inline.closeAction();\n\n    };\n\n    /**\n     * @private\n     *\n     * Saves selection\n     */\n    inline.saveSelection = function (containerEl) {\n\n        var range = window.getSelection().getRangeAt(0),\n            preSelectionRange = range.cloneRange(),\n            start;\n\n        preSelectionRange.selectNodeContents(containerEl);\n        preSelectionRange.setEnd(range.startContainer, range.startOffset);\n\n        start = preSelectionRange.toString().length;\n\n        return {\n            start: start,\n            end: start + range.toString().length\n        };\n\n    };\n\n    /**\n     * @private\n     *\n     * Sets to previous selection (Range)\n     *\n     * @param {Element} containerEl - editable element where we restore range\n     * @param {Object} savedSel - range basic information to restore\n     */\n    inline.restoreSelection = function (containerEl, savedSel) {\n\n        var range     = document.createRange(),\n            charIndex = 0;\n\n        range.setStart(containerEl, 0);\n        range.collapse(true);\n\n        var nodeStack = [ containerEl ],\n            node,\n            foundStart = false,\n            stop = false,\n            nextCharIndex;\n\n        while (!stop && (node = nodeStack.pop())) {\n\n            if (node.nodeType == 3) {\n\n                nextCharIndex = charIndex + node.length;\n\n                if (!foundStart && savedSel.start >= charIndex && savedSel.start <= nextCharIndex) {\n\n                    range.setStart(node, savedSel.start - charIndex);\n                    foundStart = true;\n\n                }\n                if (foundStart && savedSel.end >= charIndex && savedSel.end <= nextCharIndex) {\n\n                    range.setEnd(node, savedSel.end - charIndex);\n                    stop = true;\n\n                }\n                charIndex = nextCharIndex;\n\n            } else {\n\n                var i = node.childNodes.length;\n\n                while (i--) {\n\n                    nodeStack.push(node.childNodes[i]);\n\n                }\n\n            }\n\n        }\n\n        var sel = window.getSelection();\n\n        sel.removeAllRanges();\n        sel.addRange(range);\n\n    };\n\n    /**\n     * @private\n     *\n     * Removes all ranges from window selection\n     */\n    inline.clearRange = function () {\n\n        var selection = window.getSelection();\n\n        selection.removeAllRanges();\n\n    };\n\n    /**\n     * @private\n     *\n     * sets or removes hightlight\n     */\n    inline.hightlight = function (tool) {\n\n        var dataType = tool.dataset.type;\n\n        if (document.queryCommandState(dataType)) {\n\n            editor.toolbar.inline.setButtonHighlighted(tool);\n\n        } else {\n\n            editor.toolbar.inline.removeButtonsHighLight(tool);\n\n        }\n\n        /**\n         *\n         * hightlight for anchors\n         */\n        var selection = window.getSelection(),\n            tag = selection.anchorNode.parentNode;\n\n        if (tag.tagName == 'A' && dataType == 'link') {\n\n            editor.toolbar.inline.setButtonHighlighted(tool);\n\n        }\n\n    };\n\n    /**\n     * @private\n     *\n     * Mark button if text is already executed\n     */\n    inline.setButtonHighlighted = function (button) {\n\n        button.classList.add('hightlighted');\n\n        /** At link tool we also change icon */\n        if (button.dataset.type == 'link') {\n\n            var icon = button.childNodes[0];\n\n            icon.classList.remove('ce-icon-link');\n            icon.classList.add('ce-icon-unlink');\n\n        }\n\n    };\n\n    /**\n     * @private\n     *\n     * Removes hightlight\n     */\n    inline.removeButtonsHighLight = function (button) {\n\n        button.classList.remove('hightlighted');\n\n        /** At link tool we also change icon */\n        if (button.dataset.type == 'link') {\n\n            var icon = button.childNodes[0];\n\n            icon.classList.remove('ce-icon-unlink');\n            icon.classList.add('ce-icon-link');\n\n        }\n\n    };\n\n\n    return inline;\n\n})({});\n\n\n// WEBPACK FOOTER //\n// ./src/components/modules/toolbar/inline.js","/**\n * Toolbar settings\n *\n * @version 1.0.5\n */\n\nmodule.exports = (function (settings) {\n\n    let editor = codex.editor;\n\n    settings.opened = false;\n\n    settings.setting = null;\n    settings.actions = null;\n\n    /**\n     * Append and open settings\n     */\n    settings.open = function (toolType) {\n\n        /**\n         * Append settings content\n         * It's stored in tool.settings\n         */\n        if ( !editor.tools[toolType] || !editor.tools[toolType].makeSettings ) {\n\n            return;\n\n        }\n\n        /**\n         * Draw settings block\n         */\n        var settingsBlock = editor.tools[toolType].makeSettings();\n\n        editor.nodes.pluginSettings.appendChild(settingsBlock);\n\n\n        /** Open settings block */\n        editor.nodes.blockSettings.classList.add('opened');\n        this.opened = true;\n\n    };\n\n    /**\n     * Close and clear settings\n     */\n    settings.close = function () {\n\n        editor.nodes.blockSettings.classList.remove('opened');\n        editor.nodes.pluginSettings.innerHTML = '';\n\n        this.opened = false;\n\n    };\n\n    /**\n     * @param {string} toolType - plugin type\n     */\n    settings.toggle = function ( toolType ) {\n\n        if ( !this.opened ) {\n\n            this.open(toolType);\n\n        } else {\n\n            this.close();\n\n        }\n\n    };\n\n    /**\n     * Here we will draw buttons and add listeners to components\n     */\n    settings.makeRemoveBlockButton = function () {\n\n        var removeBlockWrapper  = editor.draw.node('SPAN', 'ce-toolbar__remove-btn', {}),\n            settingButton = editor.draw.node('SPAN', 'ce-toolbar__remove-setting', { innerHTML : '<i class=\"ce-icon-trash\"></i>' }),\n            actionWrapper = editor.draw.node('DIV', 'ce-toolbar__remove-confirmation', {}),\n            confirmAction = editor.draw.node('DIV', 'ce-toolbar__remove-confirm', { textContent : 'Удалить блок' }),\n            cancelAction  = editor.draw.node('DIV', 'ce-toolbar__remove-cancel', { textContent : 'Отмена' });\n\n        editor.listeners.add(settingButton, 'click', editor.toolbar.settings.removeButtonClicked, false);\n\n        editor.listeners.add(confirmAction, 'click', editor.toolbar.settings.confirmRemovingRequest, false);\n\n        editor.listeners.add(cancelAction, 'click', editor.toolbar.settings.cancelRemovingRequest, false);\n\n        actionWrapper.appendChild(confirmAction);\n        actionWrapper.appendChild(cancelAction);\n\n        removeBlockWrapper.appendChild(settingButton);\n        removeBlockWrapper.appendChild(actionWrapper);\n\n        /** Save setting */\n        editor.toolbar.settings.setting = settingButton;\n        editor.toolbar.settings.actions = actionWrapper;\n\n        return removeBlockWrapper;\n\n    };\n\n    settings.removeButtonClicked = function () {\n\n        var action = editor.toolbar.settings.actions;\n\n        if (action.classList.contains('opened')) {\n\n            editor.toolbar.settings.hideRemoveActions();\n\n        } else {\n\n            editor.toolbar.settings.showRemoveActions();\n\n        }\n\n        editor.toolbar.toolbox.close();\n        editor.toolbar.settings.close();\n\n    };\n\n    settings.cancelRemovingRequest = function () {\n\n        editor.toolbar.settings.actions.classList.remove('opened');\n\n    };\n\n    settings.confirmRemovingRequest = function () {\n\n        var currentBlock = editor.content.currentNode,\n            firstLevelBlocksCount;\n\n        currentBlock.remove();\n\n        firstLevelBlocksCount = editor.nodes.redactor.childNodes.length;\n\n        /**\n         * If all blocks are removed\n         */\n        if (firstLevelBlocksCount === 0) {\n\n            /** update currentNode variable */\n            editor.content.currentNode = null;\n\n            /** Inserting new empty initial block */\n            editor.ui.addInitialBlock();\n\n        }\n\n        editor.ui.saveInputs();\n\n        editor.toolbar.close();\n\n    };\n\n    settings.showRemoveActions = function () {\n\n        editor.toolbar.settings.actions.classList.add('opened');\n\n    };\n\n    settings.hideRemoveActions = function () {\n\n        editor.toolbar.settings.actions.classList.remove('opened');\n\n    };\n\n    return settings;\n\n})({});\n\n\n\n// WEBPACK FOOTER //\n// ./src/components/modules/toolbar/settings.js","/**\n * Codex Editor toolbox\n *\n * All tools be able to appended here\n *\n * @author Codex Team\n * @version 1.0\n */\n\nmodule.exports = (function (toolbox) {\n\n    let editor = codex.editor;\n\n    toolbox.opened = false;\n    toolbox.openedOnBlock = null;\n\n    /** Shows toolbox */\n    toolbox.open = function () {\n\n        /** Close setting if toolbox is opened */\n        if (editor.toolbar.settings.opened) {\n\n            editor.toolbar.settings.close();\n\n        }\n\n        /** Add 'toolbar-opened' class for current block **/\n        toolbox.openedOnBlock = editor.content.currentNode;\n        toolbox.openedOnBlock.classList.add('toolbar-opened');\n\n        /** display toolbox */\n        editor.nodes.toolbox.classList.add('opened');\n\n        /** Animate plus button */\n        editor.nodes.plusButton.classList.add('clicked');\n\n        /** toolbox state */\n        editor.toolbar.toolbox.opened = true;\n\n    };\n\n    /** Closes toolbox */\n    toolbox.close = function () {\n\n        /** Remove 'toolbar-opened' class from current block **/\n        if (toolbox.openedOnBlock) toolbox.openedOnBlock.classList.remove('toolbar-opened');\n        toolbox.openedOnBlock = null;\n\n        /** Makes toolbox disappear */\n        editor.nodes.toolbox.classList.remove('opened');\n\n        /** Rotate plus button */\n        editor.nodes.plusButton.classList.remove('clicked');\n\n        /** toolbox state */\n        editor.toolbar.toolbox.opened = false;\n\n        editor.toolbar.current = null;\n\n    };\n\n    toolbox.leaf = function () {\n\n        let currentTool = editor.toolbar.current,\n            tools       = Object.keys(editor.tools),\n            barButtons  = editor.nodes.toolbarButtons,\n            nextToolIndex = 0,\n            toolToSelect,\n            visibleTool,\n            tool;\n\n        if ( !currentTool ) {\n\n            /** Get first tool from object*/\n            for(tool in editor.tools) {\n\n                if (editor.tools[tool].displayInToolbox) {\n\n                    break;\n\n                }\n\n                nextToolIndex ++;\n\n            }\n\n        } else {\n\n            nextToolIndex = (tools.indexOf(currentTool) + 1) % tools.length;\n            visibleTool = tools[nextToolIndex];\n\n            while (!editor.tools[visibleTool].displayInToolbox) {\n\n                nextToolIndex = (nextToolIndex + 1) % tools.length;\n                visibleTool = tools[nextToolIndex];\n\n            }\n\n        }\n\n        toolToSelect = tools[nextToolIndex];\n\n        for ( var button in barButtons ) {\n\n            barButtons[button].classList.remove('selected');\n\n        }\n\n        barButtons[toolToSelect].classList.add('selected');\n        editor.toolbar.current = toolToSelect;\n\n    };\n\n    /**\n     * Transforming selected node type into selected toolbar element type\n     * @param {event} event\n     */\n    toolbox.toolClicked = function (event) {\n\n        /**\n         * UNREPLACEBLE_TOOLS this types of tools are forbidden to replace even they are empty\n         */\n        var UNREPLACEBLE_TOOLS = ['image', 'link', 'list', 'instagram', 'twitter', 'embed'],\n            tool               = editor.tools[editor.toolbar.current],\n            workingNode        = editor.content.currentNode,\n            currentInputIndex  = editor.caret.inputIndex,\n            newBlockContent,\n            appendCallback,\n            blockData;\n\n        /** Make block from plugin */\n        newBlockContent = tool.render();\n\n        /** information about block */\n        blockData = {\n            block     : newBlockContent,\n            type      : tool.type,\n            stretched : false\n        };\n\n        if (\n            workingNode &&\n            UNREPLACEBLE_TOOLS.indexOf(workingNode.dataset.tool) === -1 &&\n            workingNode.textContent.trim() === ''\n        ) {\n\n            /** Replace current block */\n            editor.content.switchBlock(workingNode, newBlockContent, tool.type);\n\n        } else {\n\n            /** Insert new Block from plugin */\n            editor.content.insertBlock(blockData);\n\n            /** increase input index */\n            currentInputIndex++;\n\n        }\n\n        /** Fire tool append callback  */\n        appendCallback = tool.appendCallback;\n\n        if (appendCallback && typeof appendCallback == 'function') {\n\n            appendCallback.call(event);\n\n        }\n\n        window.setTimeout(function () {\n\n            /** Set caret to current block */\n            editor.caret.setToBlock(currentInputIndex);\n\n        }, 10);\n\n\n        /**\n         * Changing current Node\n         */\n        editor.content.workingNodeChanged();\n\n        /**\n         * Move toolbar when node is changed\n         */\n        editor.toolbar.move();\n\n    };\n\n    return toolbox;\n\n})({});\n\n\n// WEBPACK FOOTER //\n// ./src/components/modules/toolbar/toolbox.js","/**\n * Codex Editor Anchors module\n *\n * @author Codex Team\n * @version 1.0\n */\n\nmodule.exports = function (anchors) {\n\n    let editor = codex.editor;\n\n    anchors.input       = null;\n    anchors.currentNode = null;\n\n    anchors.settingsOpened = function (currentBlock) {\n\n        anchors.currentNode = currentBlock;\n        anchors.input.value = anchors.currentNode.dataset.anchor || '';\n\n    };\n\n    anchors.anchorChanged = function (e) {\n\n        var newAnchor = e.target.value = anchors.rusToTranslit(e.target.value);\n\n        anchors.currentNode.dataset.anchor = newAnchor;\n\n        if (newAnchor.trim() !== '') {\n\n            anchors.currentNode.classList.add(editor.ui.className.BLOCK_WITH_ANCHOR);\n\n        } else {\n\n            anchors.currentNode.classList.remove(editor.ui.className.BLOCK_WITH_ANCHOR);\n\n        }\n\n    };\n\n    anchors.keyDownOnAnchorInput = function (e) {\n\n        if (e.keyCode == editor.core.keys.ENTER) {\n\n            e.preventDefault();\n            e.stopPropagation();\n\n            e.target.blur();\n            editor.toolbar.settings.close();\n\n        }\n\n    };\n\n    anchors.keyUpOnAnchorInput = function (e) {\n\n        if (e.keyCode >= editor.core.keys.LEFT && e.keyCode <= editor.core.keys.DOWN) {\n\n            e.stopPropagation();\n\n        }\n\n    };\n\n    anchors.rusToTranslit = function (string) {\n\n        var ru = [\n                'А', 'Б', 'В', 'Г', 'Д', 'Е', 'Ё', 'Ж', 'З', 'И', 'Й',\n                'К', 'Л', 'М', 'Н', 'О', 'П', 'Р', 'С', 'Т', 'У', 'Ф',\n                'Х', 'Ц', 'Ч', 'Ш', 'Щ', 'Ь', 'Ы', 'Ь', 'Э', 'Ю', 'Я'\n            ],\n            en = [\n                'A', 'B', 'V', 'G', 'D', 'E', 'E', 'Zh', 'Z', 'I', 'Y',\n                'K', 'L', 'M', 'N', 'O', 'P', 'R', 'S', 'T', 'U', 'F',\n                'H', 'C', 'Ch', 'Sh', 'Sch', '', 'Y', '', 'E', 'Yu', 'Ya'\n            ];\n\n        for (var i = 0; i < ru.length; i++) {\n\n            string = string.split(ru[i]).join(en[i]);\n            string = string.split(ru[i].toLowerCase()).join(en[i].toLowerCase());\n\n        }\n\n        string = string.replace(/[^0-9a-zA-Z_]+/g, '-');\n\n        return string;\n\n    };\n\n    return anchors;\n\n}({});\n\n\n// WEBPACK FOOTER //\n// ./src/components/modules/_anchors.js","/**\n * @module Codex Editor Callbacks module\n * @description Module works with editor added Elements\n *\n * @author Codex Team\n * @version 1.4.0\n */\n\nmodule.exports = (function (callbacks) {\n\n    let editor = codex.editor;\n\n    /**\n     * used by UI module\n     * @description Routes all keydowns on document\n     * @param {Object} event\n     */\n    callbacks.globalKeydown = function (event) {\n\n        switch (event.keyCode) {\n\n            case editor.core.keys.ENTER : enterKeyPressed_(event);     break;\n\n        }\n\n    };\n\n    /**\n     * used by UI module\n     * @description Routes all keydowns on redactors area\n     * @param {Object} event\n     */\n    callbacks.redactorKeyDown = function (event) {\n\n        switch (event.keyCode) {\n\n            case editor.core.keys.TAB   : tabKeyPressedOnRedactorsZone_(event);                     break;\n            case editor.core.keys.ENTER : enterKeyPressedOnRedactorsZone_(event);                   break;\n            case editor.core.keys.ESC   : escapeKeyPressedOnRedactorsZone_(event);                  break;\n            default                     : defaultKeyPressedOnRedactorsZone_(event);                 break;\n\n        }\n\n    };\n\n    /**\n     * used by UI module\n     * @description Routes all keyup events\n     * @param {Object} event\n     */\n    callbacks.globalKeyup = function (event) {\n\n        switch (event.keyCode) {\n\n            case editor.core.keys.UP    :\n            case editor.core.keys.LEFT  :\n            case editor.core.keys.RIGHT :\n            case editor.core.keys.DOWN  : arrowKeyPressed_(event); break;\n\n        }\n\n    };\n\n    /**\n     * @param {Object} event\n     * @private\n     *\n     * Handles behaviour when tab pressed\n     * @description if Content is empty show toolbox (if it is closed) or leaf tools\n     * uses Toolbars toolbox module to handle the situation\n     */\n    var tabKeyPressedOnRedactorsZone_ = function (event) {\n\n        /**\n         * Wait for solution. Would like to know the behaviour\n         * @todo Add spaces\n         */\n        event.preventDefault();\n\n\n        if (!editor.core.isBlockEmpty(editor.content.currentNode)) {\n\n            return;\n\n        }\n\n        if ( !editor.toolbar.opened  ) {\n\n            editor.toolbar.open();\n\n        }\n\n        if (editor.toolbar.opened && !editor.toolbar.toolbox.opened) {\n\n            editor.toolbar.toolbox.open();\n\n        } else {\n\n            editor.toolbar.toolbox.leaf();\n\n        }\n\n    };\n\n    /**\n     * Handles global EnterKey Press\n     * @see enterPressedOnBlock_\n     * @param {Object} event\n     */\n    var enterKeyPressed_ = function () {\n\n        if (editor.content.editorAreaHightlighted) {\n\n            /**\n             * it means that we lose input index, saved index before is not correct\n             * therefore we need to set caret when we insert new block\n             */\n            editor.caret.inputIndex = -1;\n\n            enterPressedOnBlock_();\n\n        }\n\n    };\n\n    /**\n     * Callback for enter key pressing in first-level block area\n     *\n     * @param {Event} event\n     * @private\n     *\n     * @description Inserts new block with initial type from settings\n     */\n    var enterPressedOnBlock_ = function () {\n\n        var NEW_BLOCK_TYPE  = editor.settings.initialBlockPlugin;\n\n        editor.content.insertBlock({\n            type  : NEW_BLOCK_TYPE,\n            block : editor.tools[NEW_BLOCK_TYPE].render()\n        }, true );\n\n        editor.toolbar.move();\n        editor.toolbar.open();\n\n    };\n\n\n    /**\n     * ENTER key handler\n     *\n     * @param {Object} event\n     * @private\n     *\n     * @description Makes new block with initial type from settings\n     */\n    var enterKeyPressedOnRedactorsZone_ = function (event) {\n\n        if (event.target.contentEditable == 'true') {\n\n            /** Update input index */\n            editor.caret.saveCurrentInputIndex();\n\n        }\n\n        var currentInputIndex       = editor.caret.getCurrentInputIndex() || 0,\n            workingNode             = editor.content.currentNode,\n            tool                    = workingNode.dataset.tool,\n            isEnterPressedOnToolbar = editor.toolbar.opened &&\n                                        editor.toolbar.current &&\n                                        event.target == editor.state.inputs[currentInputIndex];\n\n        /** The list of tools which needs the default browser behaviour */\n        var enableLineBreaks = editor.tools[tool].enableLineBreaks;\n\n        /** This type of block creates when enter is pressed */\n        var NEW_BLOCK_TYPE = editor.settings.initialBlockPlugin;\n\n        /**\n         * When toolbar is opened, select tool instead of making new paragraph\n         */\n        if ( isEnterPressedOnToolbar ) {\n\n            event.preventDefault();\n\n            editor.toolbar.toolbox.toolClicked(event);\n\n            editor.toolbar.close();\n\n            /**\n             * Stop other listeners callback executions\n             */\n            event.stopPropagation();\n            event.stopImmediatePropagation();\n\n            return;\n\n        }\n\n        /**\n         * Allow paragraph lineBreaks with shift enter\n         * Or if shiftkey pressed and enter and enabledLineBreaks, the let new block creation\n         */\n        if ( event.shiftKey || enableLineBreaks ) {\n\n            event.stopPropagation();\n            event.stopImmediatePropagation();\n            return;\n\n        }\n\n        var currentSelection = window.getSelection(),\n            currentSelectedNode = currentSelection.anchorNode,\n            caretAtTheEndOfText = editor.caret.position.atTheEnd(),\n            isTextNodeHasParentBetweenContenteditable = false;\n\n        /**\n         * Allow making new <p> in same block by SHIFT+ENTER and forbids to prevent default browser behaviour\n         */\n        if ( event.shiftKey && !enableLineBreaks ) {\n\n            editor.callback.enterPressedOnBlock(editor.content.currentBlock, event);\n            event.preventDefault();\n            return;\n\n        }\n\n        /**\n         * Workaround situation when caret at the Text node that has some wrapper Elements\n         * Split block cant handle this.\n         * We need to save default behavior\n         */\n        isTextNodeHasParentBetweenContenteditable = currentSelectedNode && currentSelectedNode.parentNode.contentEditable != 'true';\n\n        /**\n         * Split blocks when input has several nodes and caret placed in textNode\n         */\n        if (\n            currentSelectedNode.nodeType == editor.core.nodeTypes.TEXT &&\n            !isTextNodeHasParentBetweenContenteditable &&\n            !caretAtTheEndOfText\n        ) {\n\n            event.preventDefault();\n\n            editor.core.log('Splitting Text node...');\n\n            editor.content.splitBlock(currentInputIndex);\n\n            /** Show plus button when next input after split is empty*/\n            if (!editor.state.inputs[currentInputIndex + 1].textContent.trim()) {\n\n                editor.toolbar.showPlusButton();\n\n            }\n\n        } else {\n\n            var islastNode = editor.content.isLastNode(currentSelectedNode);\n\n            if ( islastNode && caretAtTheEndOfText ) {\n\n                event.preventDefault();\n                event.stopPropagation();\n                event.stopImmediatePropagation();\n\n                editor.core.log('ENTER clicked in last textNode. Create new BLOCK');\n\n                editor.content.insertBlock({\n                    type: NEW_BLOCK_TYPE,\n                    block: editor.tools[NEW_BLOCK_TYPE].render()\n                }, true);\n\n                editor.toolbar.move();\n                editor.toolbar.open();\n\n                /** Show plus button with empty block */\n                editor.toolbar.showPlusButton();\n\n            }\n\n        }\n\n        /** get all inputs after new appending block */\n        editor.ui.saveInputs();\n\n    };\n\n    /**\n     * Escape behaviour\n     * @param event\n     * @private\n     *\n     * @description Closes toolbox and toolbar. Prevents default behaviour\n     */\n    var escapeKeyPressedOnRedactorsZone_ = function (event) {\n\n        /** Close all toolbar */\n        editor.toolbar.close();\n\n        /** Close toolbox */\n        editor.toolbar.toolbox.close();\n\n        event.preventDefault();\n\n    };\n\n    /**\n     * @param {Event} event\n     * @private\n     *\n     * closes and moves toolbar\n     */\n    var arrowKeyPressed_ = function (event) {\n\n        editor.content.workingNodeChanged();\n\n        /* Closing toolbar */\n        editor.toolbar.close();\n        editor.toolbar.move();\n\n    };\n\n    /**\n     * @private\n     * @param {Event} event\n     *\n     * @description Closes all opened bars from toolbar.\n     * If block is mark, clears highlightning\n     */\n    var defaultKeyPressedOnRedactorsZone_ = function () {\n\n        editor.toolbar.close();\n\n        if (!editor.toolbar.inline.actionsOpened) {\n\n            editor.toolbar.inline.close();\n            editor.content.clearMark();\n\n        }\n\n    };\n\n    /**\n     * Handler when clicked on redactors area\n     *\n     * @protected\n     * @param event\n     *\n     * @description Detects clicked area. If it is first-level block area, marks as detected and\n     * on next enter press will be inserted new block\n     * Otherwise, save carets position (input index) and put caret to the editable zone.\n     *\n     * @see detectWhenClickedOnFirstLevelBlockArea_\n     *\n     */\n    callbacks.redactorClicked = function (event) {\n\n        detectWhenClickedOnFirstLevelBlockArea_();\n\n        editor.content.workingNodeChanged(event.target);\n        editor.ui.saveInputs();\n\n        var selectedText = editor.toolbar.inline.getSelectionText(),\n            firstLevelBlock;\n\n        /** If selection range took off, then we hide inline toolbar */\n        if (selectedText.length === 0) {\n\n            editor.toolbar.inline.close();\n\n        }\n\n        /** Update current input index in memory when caret focused into existed input */\n        if (event.target.contentEditable == 'true') {\n\n            editor.caret.saveCurrentInputIndex();\n\n        }\n\n        if (editor.content.currentNode === null) {\n\n            /**\n             * If inputs in redactor does not exits, then we put input index 0 not -1\n             */\n            var indexOfLastInput = editor.state.inputs.length > 0 ? editor.state.inputs.length - 1 : 0;\n\n            /** If we have any inputs */\n            if (editor.state.inputs.length) {\n\n                /** getting firstlevel parent of input */\n                firstLevelBlock = editor.content.getFirstLevelBlock(editor.state.inputs[indexOfLastInput]);\n\n            }\n\n            /** If input is empty, then we set caret to the last input */\n            if (editor.state.inputs.length && editor.state.inputs[indexOfLastInput].textContent === '' && firstLevelBlock.dataset.tool == editor.settings.initialBlockPlugin) {\n\n                editor.caret.setToBlock(indexOfLastInput);\n\n            } else {\n\n                /** Create new input when caret clicked in redactors area */\n                var NEW_BLOCK_TYPE = editor.settings.initialBlockPlugin;\n\n                editor.content.insertBlock({\n                    type  : NEW_BLOCK_TYPE,\n                    block : editor.tools[NEW_BLOCK_TYPE].render()\n                });\n\n                /** If there is no inputs except inserted */\n                if (editor.state.inputs.length === 1) {\n\n                    editor.caret.setToBlock(indexOfLastInput);\n\n                } else {\n\n                    /** Set caret to this appended input */\n                    editor.caret.setToNextBlock(indexOfLastInput);\n\n                }\n\n            }\n\n        } else {\n\n            /** Close all panels */\n            editor.toolbar.settings.close();\n            editor.toolbar.toolbox.close();\n\n        }\n\n        /**\n         * Move toolbar and open\n         */\n        editor.toolbar.move();\n        editor.toolbar.open();\n\n        var inputIsEmpty = !editor.content.currentNode.textContent.trim(),\n            currentNodeType = editor.content.currentNode.dataset.tool,\n            isInitialType = currentNodeType == editor.settings.initialBlockPlugin;\n\n\n        /** Hide plus buttons */\n        editor.toolbar.hidePlusButton();\n\n        if (!inputIsEmpty) {\n\n            /** Mark current block */\n            editor.content.markBlock();\n\n        }\n\n        if ( isInitialType && inputIsEmpty ) {\n\n            /** Show plus button */\n            editor.toolbar.showPlusButton();\n\n        }\n\n\n    };\n\n    /**\n     * This method allows to define, is caret in contenteditable element or not.\n     *\n     * @private\n     *\n     * @description Otherwise, if we get TEXT node from range container, that will means we have input index.\n     * In this case we use default browsers behaviour (if plugin allows that) or overwritten action.\n     * Therefore, to be sure that we've clicked first-level block area, we should have currentNode, which always\n     * specifies to the first-level block. Other cases we just ignore.\n     */\n    var detectWhenClickedOnFirstLevelBlockArea_ = function () {\n\n        var selection  = window.getSelection(),\n            anchorNode = selection.anchorNode,\n            flag = false;\n\n        if (selection.rangeCount === 0) {\n\n            editor.content.editorAreaHightlighted = true;\n\n        } else {\n\n            if (!editor.core.isDomNode(anchorNode)) {\n\n                anchorNode = anchorNode.parentNode;\n\n            }\n\n            /** Already founded, without loop */\n            if (anchorNode.contentEditable == 'true') {\n\n                flag = true;\n\n            }\n\n            while (anchorNode.contentEditable != 'true') {\n\n                anchorNode = anchorNode.parentNode;\n\n                if (anchorNode.contentEditable == 'true') {\n\n                    flag = true;\n\n                }\n\n                if (anchorNode == document.body) {\n\n                    break;\n\n                }\n\n            }\n\n            /** If editable element founded, flag is \"TRUE\", Therefore we return \"FALSE\" */\n            editor.content.editorAreaHightlighted = !flag;\n\n        }\n\n    };\n\n    /**\n     * Toolbar button click handler\n     *\n     * @param {Object} event - cursor to the button\n     * @protected\n     *\n     * @description gets current tool and calls render method\n     */\n    callbacks.toolbarButtonClicked = function (event) {\n\n        var button = this;\n\n        editor.toolbar.current = button.dataset.type;\n\n        editor.toolbar.toolbox.toolClicked(event);\n        editor.toolbar.close();\n\n    };\n\n    /**\n     * Show or Hide toolbox when plus button is clicked\n     */\n    callbacks.plusButtonClicked = function () {\n\n        if (!editor.nodes.toolbox.classList.contains('opened')) {\n\n            editor.toolbar.toolbox.open();\n\n        } else {\n\n            editor.toolbar.toolbox.close();\n\n        }\n\n    };\n\n    /**\n     * Block handlers for KeyDown events\n     *\n     * @protected\n     * @param {Object} event\n     *\n     * Handles keydowns on block\n     * @see blockRightOrDownArrowPressed_\n     * @see backspacePressed_\n     * @see blockLeftOrUpArrowPressed_\n     */\n    callbacks.blockKeydown = function (event) {\n\n        let block = event.target; // event.target is input\n\n        switch (event.keyCode) {\n\n            case editor.core.keys.DOWN:\n            case editor.core.keys.RIGHT:\n                blockRightOrDownArrowPressed_(event);\n                break;\n\n            case editor.core.keys.BACKSPACE:\n                backspacePressed_(block, event);\n                break;\n\n            case editor.core.keys.UP:\n            case editor.core.keys.LEFT:\n                blockLeftOrUpArrowPressed_(event);\n                break;\n\n        }\n\n    };\n\n    /**\n     * RIGHT or DOWN keydowns on block\n     *\n     * @param {Object} event\n     * @private\n     *\n     * @description watches the selection and gets closest editable element.\n     * Uses method getDeepestTextNodeFromPosition to get the last node of next block\n     * Sets caret if it is contenteditable\n     */\n    var blockRightOrDownArrowPressed_ = function (event) {\n\n        var selection   = window.getSelection(),\n            inputs      = editor.state.inputs,\n            focusedNode = selection.anchorNode,\n            focusedNodeHolder;\n\n        /** Check for caret existance */\n        if (!focusedNode) {\n\n            return false;\n\n        }\n\n        /** Looking for closest (parent) contentEditable element of focused node */\n        while (focusedNode.contentEditable != 'true') {\n\n            focusedNodeHolder = focusedNode.parentNode;\n            focusedNode       = focusedNodeHolder;\n\n        }\n\n        /** Input index in DOM level */\n        var editableElementIndex = 0;\n\n        while (focusedNode != inputs[editableElementIndex]) {\n\n            editableElementIndex ++;\n\n        }\n\n        /**\n         * Founded contentEditable element doesn't have childs\n         * Or maybe New created block\n         */\n        if (!focusedNode.textContent) {\n\n            editor.caret.setToNextBlock(editableElementIndex);\n            return;\n\n        }\n\n        /**\n         * Do nothing when caret doesn not reaches the end of last child\n         */\n        var caretInLastChild    = false,\n            caretAtTheEndOfText = false;\n\n        var lastChild,\n            deepestTextnode;\n\n        lastChild = focusedNode.childNodes[focusedNode.childNodes.length - 1 ];\n\n        if (editor.core.isDomNode(lastChild)) {\n\n            deepestTextnode = editor.content.getDeepestTextNodeFromPosition(lastChild, lastChild.childNodes.length);\n\n        } else {\n\n            deepestTextnode = lastChild;\n\n        }\n\n        caretInLastChild = selection.anchorNode == deepestTextnode;\n        caretAtTheEndOfText = deepestTextnode.length == selection.anchorOffset;\n\n        if ( !caretInLastChild  || !caretAtTheEndOfText ) {\n\n            editor.core.log('arrow [down|right] : caret does not reached the end');\n            return false;\n\n        }\n\n        editor.caret.setToNextBlock(editableElementIndex);\n\n    };\n\n    /**\n     * LEFT or UP keydowns on block\n     *\n     * @param {Object} event\n     * @private\n     *\n     * watches the selection and gets closest editable element.\n     * Uses method getDeepestTextNodeFromPosition to get the last node of previous block\n     * Sets caret if it is contenteditable\n     *\n     */\n    var blockLeftOrUpArrowPressed_ = function (event) {\n\n        var selection   = window.getSelection(),\n            inputs      = editor.state.inputs,\n            focusedNode = selection.anchorNode,\n            focusedNodeHolder;\n\n        /** Check for caret existance */\n        if (!focusedNode) {\n\n            return false;\n\n        }\n\n        /**\n         * LEFT or UP not at the beginning\n         */\n        if ( selection.anchorOffset !== 0) {\n\n            return false;\n\n        }\n\n        /** Looking for parent contentEditable block */\n        while (focusedNode.contentEditable != 'true') {\n\n            focusedNodeHolder = focusedNode.parentNode;\n            focusedNode       = focusedNodeHolder;\n\n        }\n\n        /** Input index in DOM level */\n        var editableElementIndex = 0;\n\n        while (focusedNode != inputs[editableElementIndex]) {\n\n            editableElementIndex ++;\n\n        }\n\n        /**\n         * Do nothing if caret is not at the beginning of first child\n         */\n        var caretInFirstChild   = false,\n            caretAtTheBeginning = false;\n\n        var firstChild,\n            deepestTextnode;\n\n        /**\n         * Founded contentEditable element doesn't have childs\n         * Or maybe New created block\n         */\n        if (!focusedNode.textContent) {\n\n            editor.caret.setToPreviousBlock(editableElementIndex);\n            return;\n\n        }\n\n        firstChild = focusedNode.childNodes[0];\n\n        if (editor.core.isDomNode(firstChild)) {\n\n            deepestTextnode = editor.content.getDeepestTextNodeFromPosition(firstChild, 0);\n\n        } else {\n\n            deepestTextnode = firstChild;\n\n        }\n\n        caretInFirstChild   = selection.anchorNode == deepestTextnode;\n        caretAtTheBeginning = selection.anchorOffset === 0;\n\n        if ( caretInFirstChild && caretAtTheBeginning ) {\n\n            editor.caret.setToPreviousBlock(editableElementIndex);\n\n        }\n\n    };\n\n    /**\n     * Handles backspace keydown\n     *\n     * @param {Element} block\n     * @param {Object} event\n     * @private\n     *\n     * @description if block is empty, delete the block and set caret to the previous block\n     * If block is not empty, try to merge two blocks - current and previous\n     * But it we try'n to remove first block, then we should set caret to the next block, not previous.\n     * If we removed the last block, create new one\n     */\n    var backspacePressed_ = function (block, event) {\n\n        var currentInputIndex = editor.caret.getCurrentInputIndex(),\n            range,\n            selectionLength,\n            firstLevelBlocksCount;\n\n        if (editor.core.isNativeInput(event.target)) {\n\n            /** If input value is empty - remove block */\n            if (event.target.value.trim() == '') {\n\n                block.remove();\n\n            } else {\n\n                return;\n\n            }\n\n        }\n\n        if (block.textContent.trim()) {\n\n            range           = editor.content.getRange();\n            selectionLength = range.endOffset - range.startOffset;\n\n            if (editor.caret.position.atStart() && !selectionLength && editor.state.inputs[currentInputIndex - 1]) {\n\n                editor.content.mergeBlocks(currentInputIndex);\n\n            } else {\n\n                return;\n\n            }\n\n        }\n\n        if (!selectionLength) {\n\n            block.remove();\n\n        }\n\n\n        firstLevelBlocksCount = editor.nodes.redactor.childNodes.length;\n\n        /**\n         * If all blocks are removed\n         */\n        if (firstLevelBlocksCount === 0) {\n\n            /** update currentNode variable */\n            editor.content.currentNode = null;\n\n            /** Inserting new empty initial block */\n            editor.ui.addInitialBlock();\n\n            /** Updating inputs state after deleting last block */\n            editor.ui.saveInputs();\n\n            /** Set to current appended block */\n            window.setTimeout(function () {\n\n                editor.caret.setToPreviousBlock(1);\n\n            }, 10);\n\n        } else {\n\n            if (editor.caret.inputIndex !== 0) {\n\n                /** Target block is not first */\n                editor.caret.setToPreviousBlock(editor.caret.inputIndex);\n\n            } else {\n\n                /** If we try to delete first block */\n                editor.caret.setToNextBlock(editor.caret.inputIndex);\n\n            }\n\n        }\n\n        editor.toolbar.move();\n\n        if (!editor.toolbar.opened) {\n\n            editor.toolbar.open();\n\n        }\n\n        /** Updating inputs state */\n        editor.ui.saveInputs();\n\n        /** Prevent default browser behaviour */\n        event.preventDefault();\n\n    };\n\n    /**\n     * used by UI module\n     * Clicks on block settings button\n     *\n     * @param {Object} event\n     * @protected\n     * @description Opens toolbar settings\n     */\n    callbacks.showSettingsButtonClicked = function (event) {\n\n        /**\n         * Get type of current block\n         * It uses to append settings from tool.settings property.\n         * ...\n         * Type is stored in data-type attribute on block\n         */\n        var currentToolType = editor.content.currentNode.dataset.tool;\n\n        editor.toolbar.settings.toggle(currentToolType);\n\n        /** Close toolbox when settings button is active */\n        editor.toolbar.toolbox.close();\n        editor.toolbar.settings.hideRemoveActions();\n\n    };\n\n    return callbacks;\n\n})({});\n\n\n// WEBPACK FOOTER //\n// ./src/components/modules/_callbacks.js","/**\n * Codex Editor Caret Module\n *\n * @author Codex Team\n * @version 1.0\n */\n\nmodule.exports = (function (caret) {\n\n    let editor = codex.editor;\n\n    /**\n     * @var {int} InputIndex - editable element in DOM\n     */\n    caret.inputIndex = null;\n\n    /**\n     * @var {int} offset - caret position in a text node.\n     */\n    caret.offset = null;\n\n    /**\n     * @var {int} focusedNodeIndex - we get index of child node from first-level block\n     */\n    caret.focusedNodeIndex = null;\n\n    /**\n     * Creates Document Range and sets caret to the element.\n     * @protected\n     * @uses caret.save — if you need to save caret position\n     * @param {Element} el - Changed Node.\n     */\n    caret.set = function ( el, index, offset) {\n\n        offset = offset || caret.offset || 0;\n        index  = index  || caret.focusedNodeIndex || 0;\n\n        var childs = el.childNodes,\n            nodeToSet;\n\n        if ( childs.length === 0 ) {\n\n            nodeToSet = el;\n\n        } else {\n\n            nodeToSet = childs[index];\n\n        }\n\n        /** If Element is INPUT */\n        if (el.contentEditable != 'true') {\n\n            el.focus();\n            return;\n\n        }\n\n        if (editor.core.isDomNode(nodeToSet)) {\n\n            nodeToSet = editor.content.getDeepestTextNodeFromPosition(nodeToSet, nodeToSet.childNodes.length);\n\n        }\n\n        var range     = document.createRange(),\n            selection = window.getSelection();\n\n        window.setTimeout(function () {\n\n            range.setStart(nodeToSet, offset);\n            range.setEnd(nodeToSet, offset);\n\n            selection.removeAllRanges();\n            selection.addRange(range);\n\n            editor.caret.saveCurrentInputIndex();\n\n        }, 20);\n\n    };\n\n    /**\n     * @protected\n     * Updates index of input and saves it in caret object\n     */\n    caret.saveCurrentInputIndex = function () {\n\n        /** Index of Input that we paste sanitized content */\n        var selection   = window.getSelection(),\n            inputs      = editor.state.inputs,\n            focusedNode = selection.anchorNode,\n            focusedNodeHolder;\n\n        if (!focusedNode) {\n\n            return;\n\n        }\n\n        /** Looking for parent contentEditable block */\n        while (focusedNode.contentEditable != 'true') {\n\n            focusedNodeHolder = focusedNode.parentNode;\n            focusedNode       = focusedNodeHolder;\n\n        }\n\n        /** Input index in DOM level */\n        var editableElementIndex = 0;\n\n        while (focusedNode != inputs[editableElementIndex]) {\n\n            editableElementIndex ++;\n\n        }\n\n        caret.inputIndex = editableElementIndex;\n\n    };\n\n    /**\n     * Returns current input index (caret object)\n     */\n    caret.getCurrentInputIndex = function () {\n\n        return caret.inputIndex;\n\n    };\n\n    /**\n     * @param {int} index - index of first-level block after that we set caret into next input\n     */\n    caret.setToNextBlock = function (index) {\n\n        var inputs = editor.state.inputs,\n            nextInput = inputs[index + 1];\n\n        if (!nextInput) {\n\n            editor.core.log('We are reached the end');\n            return;\n\n        }\n\n        /**\n         * When new Block created or deleted content of input\n         * We should add some text node to set caret\n         */\n        if (!nextInput.childNodes.length) {\n\n            var emptyTextElement = document.createTextNode('');\n\n            nextInput.appendChild(emptyTextElement);\n\n        }\n\n        editor.caret.inputIndex = index + 1;\n        editor.caret.set(nextInput, 0, 0);\n        editor.content.workingNodeChanged(nextInput);\n\n    };\n\n    /**\n     * @param {int} index - index of target input.\n     * Sets caret to input with this index\n     */\n    caret.setToBlock = function (index) {\n\n        var inputs = editor.state.inputs,\n            targetInput = inputs[index];\n\n        if ( !targetInput ) {\n\n            return;\n\n        }\n\n        /**\n         * When new Block created or deleted content of input\n         * We should add some text node to set caret\n         */\n        if (!targetInput.childNodes.length) {\n\n            var emptyTextElement = document.createTextNode('');\n\n            targetInput.appendChild(emptyTextElement);\n\n        }\n\n        editor.caret.inputIndex = index;\n        editor.caret.set(targetInput, 0, 0);\n        editor.content.workingNodeChanged(targetInput);\n\n    };\n\n    /**\n     * @param {int} index - index of input\n     */\n    caret.setToPreviousBlock = function (index) {\n\n        index = index || 0;\n\n        var inputs = editor.state.inputs,\n            previousInput = inputs[index - 1],\n            lastChildNode,\n            lengthOfLastChildNode,\n            emptyTextElement;\n\n\n        if (!previousInput) {\n\n            editor.core.log('We are reached first node');\n            return;\n\n        }\n\n        lastChildNode = editor.content.getDeepestTextNodeFromPosition(previousInput, previousInput.childNodes.length);\n        lengthOfLastChildNode = lastChildNode.length;\n\n        /**\n         * When new Block created or deleted content of input\n         * We should add some text node to set caret\n         */\n        if (!previousInput.childNodes.length) {\n\n            emptyTextElement = document.createTextNode('');\n            previousInput.appendChild(emptyTextElement);\n\n        }\n        editor.caret.inputIndex = index - 1;\n        editor.caret.set(previousInput, previousInput.childNodes.length - 1, lengthOfLastChildNode);\n        editor.content.workingNodeChanged(inputs[index - 1]);\n\n    };\n\n    caret.position = {\n\n        atStart : function () {\n\n            var selection       = window.getSelection(),\n                anchorOffset    = selection.anchorOffset,\n                anchorNode      = selection.anchorNode,\n                firstLevelBlock = editor.content.getFirstLevelBlock(anchorNode),\n                pluginsRender   = firstLevelBlock.childNodes[0];\n\n            if (!editor.core.isDomNode(anchorNode)) {\n\n                anchorNode = anchorNode.parentNode;\n\n            }\n\n            var isFirstNode  = anchorNode === pluginsRender.childNodes[0],\n                isOffsetZero = anchorOffset === 0;\n\n            return isFirstNode && isOffsetZero;\n\n        },\n\n        atTheEnd : function () {\n\n            var selection    = window.getSelection(),\n                anchorOffset = selection.anchorOffset,\n                anchorNode   = selection.anchorNode;\n\n            /** Caret is at the end of input */\n            return !anchorNode || !anchorNode.length || anchorOffset === anchorNode.length;\n\n        }\n    };\n\n\n    /**\n     * Inserts node at the caret location\n     * @param {HTMLElement|DocumentFragment} node\n     */\n    caret.insertNode = function (node) {\n\n        var selection, range,\n            lastNode = node;\n\n        if (node.nodeType == editor.core.nodeTypes.DOCUMENT_FRAGMENT) {\n\n            lastNode = node.lastChild;\n\n        }\n\n        selection = window.getSelection();\n\n        range = selection.getRangeAt(0);\n        range.deleteContents();\n\n        range.insertNode(node);\n\n        range.setStartAfter(lastNode);\n        range.collapse(true);\n\n        selection.removeAllRanges();\n        selection.addRange(range);\n\n\n    };\n\n    return caret;\n\n})({});\n\n\n// WEBPACK FOOTER //\n// ./src/components/modules/_caret.js","/**\n * Codex Editor Content Module\n * Works with DOM\n *\n * @class Content\n * @classdesc Class works provides COdex Editor appearance logic\n *\n * @author Codex Team\n * @version 2.0.0\n */\n\nimport $ from '../dom';\n\nmodule.exports = class Content {\n\n    /**\n     * Module key name\n     * @returns {string}\n     */\n    static get name() {\n\n        return 'Content';\n\n    }\n\n    /**\n     * @constructor\n     *\n     * @param {EditorConfig} config\n     */\n    constructor(config) {\n\n        this.config = config;\n        this.Editor = null;\n\n        this.CSS = {\n            block: 'ce-block',\n            content: 'ce-block__content',\n            stretched: 'ce-block--stretched',\n            highlighted: 'ce-block--highlighted',\n        };\n\n        this._currentNode = null;\n        this._currentIndex = 0;\n\n    }\n\n    /**\n     * Editor modules setter\n     * @param {object} Editor\n     */\n    set state(Editor) {\n\n        this.Editor = Editor;\n\n    }\n\n    /**\n     * Get current working node\n     *\n     * @returns {null|HTMLElement}\n     */\n    get currentNode() {\n\n        return this._currentNode;\n\n    }\n\n    /**\n     * Set working node. Working node should be first level block, so we find it before set one to _currentNode property\n     *\n     * @param {HTMLElement} node\n     */\n    set currentNode(node) {\n\n        let firstLevelBlock = this.getFirstLevelBlock(node);\n\n        this._currentNode = firstLevelBlock;\n\n    }\n\n\n    /**\n     * @private\n     * @param pluginHTML\n     * @param {Boolean} isStretched - make stretched block or not\n     *\n     * @description adds necessary information to wrap new created block by first-level holder\n     */\n    composeBlock_(pluginHTML, isStretched = false) {\n\n        let block     = $.make('DIV', this.CSS.block),\n            blockContent = $.make('DIV', this.CSS.content);\n\n        blockContent.appendChild(pluginHTML);\n        block.appendChild(blockContent);\n\n        if (isStretched) {\n\n            blockContent.classList.add(this.CSS.stretched);\n\n        }\n\n        block.dataset.toolId = this._currentIndex++;\n\n        return block;\n\n    };\n\n    /**\n     * Finds first-level block\n     * @description looks for first-level block.\n     * gets parent while node is not first-level\n     *\n     * @param {Element} node - selected or clicked in redactors area node\n     * @protected\n     *\n     */\n    getFirstLevelBlock(node) {\n\n        if (!$.isNode(node)) {\n\n            node = node.parentNode;\n\n        }\n\n        if (node === this.Editor.ui.nodes.redactor || node === document.body) {\n\n            return null;\n\n        } else {\n\n            while(node.classList && !node.classList.contains(this.CSS.block)) {\n\n                node = node.parentNode;\n\n            }\n\n            return node;\n\n        }\n\n    };\n\n    /**\n     * Insert new block to working area\n     *\n     * @param {HTMLElement} tool\n     *\n     * @returns {Number} tool index\n     *\n     */\n    insertBlock(tool) {\n\n        let newBlock = this.composeBlock_(tool);\n\n        if (this.currentNode) {\n\n            this.currentNode.insertAdjacentElement('afterend', newBlock);\n\n        } else {\n\n            /**\n             * If redactor is empty, append as first child\n             */\n            this.Editor.ui.nodes.redactor.appendChild(newBlock);\n\n        }\n\n        /**\n         * Set new node as current\n         */\n        this.currentNode = newBlock;\n\n        return newBlock.dataset.toolId;\n\n    }\n\n};\n\n// module.exports = (function (content) {\n//\n//     let editor = codex.editor;\n//\n//     /**\n//      * Links to current active block\n//      * @type {null | Element}\n//      */\n//     content.currentNode = null;\n//\n//     /**\n//      * clicked in redactor area\n//      * @type {null | Boolean}\n//      */\n//     content.editorAreaHightlighted = null;\n//\n//     /**\n//      * @deprecated\n//      * Synchronizes redactor with original textarea\n//      */\n//     content.sync = function () {\n//\n//         editor.core.log('syncing...');\n//\n//         /**\n//          * Save redactor content to editor.state\n//          */\n//         editor.state.html = editor.nodes.redactor.innerHTML;\n//\n//     };\n//\n//     /**\n//      * Appends background to the block\n//      *\n//      * @description add CSS class to highlight visually first-level block area\n//      */\n//     content.markBlock = function () {\n//\n//         editor.content.currentNode.classList.add(editor.ui.className.BLOCK_HIGHLIGHTED);\n//\n//     };\n//\n//     /**\n//      * Clear background\n//      *\n//      * @description clears styles that highlights block\n//      */\n//     content.clearMark = function () {\n//\n//         if (editor.content.currentNode) {\n//\n//             editor.content.currentNode.classList.remove(editor.ui.className.BLOCK_HIGHLIGHTED);\n//\n//         }\n//\n//     };\n//\n//     /**\n//      * Finds first-level block\n//      *\n//      * @param {Element} node - selected or clicked in redactors area node\n//      * @protected\n//      *\n//      * @description looks for first-level block.\n//      * gets parent while node is not first-level\n//      */\n//     content.getFirstLevelBlock = function (node) {\n//\n//         if (!editor.core.isDomNode(node)) {\n//\n//             node = node.parentNode;\n//\n//         }\n//\n//         if (node === editor.nodes.redactor || node === document.body) {\n//\n//             return null;\n//\n//         } else {\n//\n//             while(!node.classList.contains(editor.ui.className.BLOCK_CLASSNAME)) {\n//\n//                 node = node.parentNode;\n//\n//             }\n//\n//             return node;\n//\n//         }\n//\n//     };\n//\n//     /**\n//      * Trigger this event when working node changed\n//      * @param {Element} targetNode - first-level of this node will be current\n//      * @protected\n//      *\n//      * @description If targetNode is first-level then we set it as current else we look for parents to find first-level\n//      */\n//     content.workingNodeChanged = function (targetNode) {\n//\n//         /** Clear background from previous marked block before we change */\n//         editor.content.clearMark();\n//\n//         if (!targetNode) {\n//\n//             return;\n//\n//         }\n//\n//         content.currentNode = content.getFirstLevelBlock(targetNode);\n//\n//     };\n//\n//     /**\n//      * Replaces one redactor block with another\n//      * @protected\n//      * @param {Element} targetBlock - block to replace. Mostly currentNode.\n//      * @param {Element} newBlock\n//      * @param {string} newBlockType - type of new block; we need to store it to data-attribute\n//      *\n//      * [!] Function does not saves old block content.\n//      *     You can get it manually and pass with newBlock.innerHTML\n//      */\n//     content.replaceBlock = function (targetBlock, newBlock) {\n//\n//         if (!targetBlock || !newBlock) {\n//\n//             editor.core.log('replaceBlock: missed params');\n//             return;\n//\n//         }\n//\n//         /** If target-block is not a frist-level block, then we iterate parents to find it */\n//         while(!targetBlock.classList.contains(editor.ui.className.BLOCK_CLASSNAME)) {\n//\n//             targetBlock = targetBlock.parentNode;\n//\n//         }\n//\n//         /** Replacing */\n//         editor.nodes.redactor.replaceChild(newBlock, targetBlock);\n//\n//         /**\n//          * Set new node as current\n//          */\n//         editor.content.workingNodeChanged(newBlock);\n//\n//         /**\n//          * Add block handlers\n//          */\n//         editor.ui.addBlockHandlers(newBlock);\n//\n//         /**\n//          * Save changes\n//          */\n//         editor.ui.saveInputs();\n//\n//     };\n//\n//     /**\n//      * @protected\n//      *\n//      * Inserts new block to redactor\n//      * Wrapps block into a DIV with BLOCK_CLASSNAME class\n//      *\n//      * @param blockData          {object}\n//      * @param blockData.block    {Element}   element with block content\n//      * @param blockData.type     {string}    block plugin\n//      * @param needPlaceCaret     {bool}      pass true to set caret in new block\n//      *\n//      */\n//     content.insertBlock = function ( blockData, needPlaceCaret ) {\n//\n//         var workingBlock    = editor.content.currentNode,\n//             newBlockContent = blockData.block,\n//             blockType       = blockData.type,\n//             isStretched     = blockData.stretched;\n//\n//         var newBlock = composeNewBlock_(newBlockContent, blockType, isStretched);\n//\n//         if (workingBlock) {\n//\n//             editor.core.insertAfter(workingBlock, newBlock);\n//\n//         } else {\n//\n//             /**\n//              * If redactor is empty, append as first child\n//              */\n//             editor.nodes.redactor.appendChild(newBlock);\n//\n//         }\n//\n//         /**\n//          * Block handler\n//          */\n//         editor.ui.addBlockHandlers(newBlock);\n//\n//         /**\n//          * Set new node as current\n//          */\n//         editor.content.workingNodeChanged(newBlock);\n//\n//         /**\n//          * Save changes\n//          */\n//         editor.ui.saveInputs();\n//\n//\n//         if ( needPlaceCaret ) {\n//\n//             /**\n//              * If we don't know input index then we set default value -1\n//              */\n//             var currentInputIndex = editor.caret.getCurrentInputIndex() || -1;\n//\n//\n//             if (currentInputIndex == -1) {\n//\n//\n//                 var editableElement = newBlock.querySelector('[contenteditable]'),\n//                     emptyText       = document.createTextNode('');\n//\n//                 editableElement.appendChild(emptyText);\n//                 editor.caret.set(editableElement, 0, 0);\n//\n//                 editor.toolbar.move();\n//                 editor.toolbar.showPlusButton();\n//\n//\n//             } else {\n//\n//                 if (currentInputIndex === editor.state.inputs.length - 1)\n//                     return;\n//\n//                 /** Timeout for browsers execution */\n//                 window.setTimeout(function () {\n//\n//                     /** Setting to the new input */\n//                     editor.caret.setToNextBlock(currentInputIndex);\n//                     editor.toolbar.move();\n//                     editor.toolbar.open();\n//\n//                 }, 10);\n//\n//             }\n//\n//         }\n//\n//         /**\n//          * Block is inserted, wait for new click that defined focusing on editors area\n//          * @type {boolean}\n//          */\n//         content.editorAreaHightlighted = false;\n//\n//     };\n//\n//     /**\n//      * Replaces blocks with saving content\n//      * @protected\n//      * @param {Element} noteToReplace\n//      * @param {Element} newNode\n//      * @param {Element} blockType\n//      */\n//     content.switchBlock = function (blockToReplace, newBlock, tool) {\n//\n//         tool = tool || editor.content.currentNode.dataset.tool;\n//         var newBlockComposed = composeNewBlock_(newBlock, tool);\n//\n//         /** Replacing */\n//         editor.content.replaceBlock(blockToReplace, newBlockComposed);\n//\n//         /** Save new Inputs when block is changed */\n//         editor.ui.saveInputs();\n//\n//     };\n//\n//     /**\n//      * Iterates between child noted and looking for #text node on deepest level\n//      * @protected\n//      *\n//      * @param {Element} block - node where find\n//      * @param {int} postiton - starting postion\n//      *      Example: childNodex.length to find from the end\n//      *               or 0 to find from the start\n//      * @return {Text} block\n//      * @uses DFS\n//      */\n//     content.getDeepestTextNodeFromPosition = function (block, position) {\n//\n//         /**\n//          * Clear Block from empty and useless spaces with trim.\n//          * Such nodes we should remove\n//          */\n//         var blockChilds = block.childNodes,\n//             index,\n//             node,\n//             text;\n//\n//         for(index = 0; index < blockChilds.length; index++) {\n//\n//             node = blockChilds[index];\n//\n//             if (node.nodeType == editor.core.nodeTypes.TEXT) {\n//\n//                 text = node.textContent.trim();\n//\n//                 /** Text is empty. We should remove this child from node before we start DFS\n//                  * decrease the quantity of childs.\n//                  */\n//                 if (text === '') {\n//\n//                     block.removeChild(node);\n//                     position--;\n//\n//                 }\n//\n//             }\n//\n//         }\n//\n//         if (block.childNodes.length === 0) {\n//\n//             return document.createTextNode('');\n//\n//         }\n//\n//         /** Setting default position when we deleted all empty nodes */\n//         if ( position < 0 )\n//             position = 1;\n//\n//         var lookingFromStart = false;\n//\n//         /** For looking from START */\n//         if (position === 0) {\n//\n//             lookingFromStart = true;\n//             position = 1;\n//\n//         }\n//\n//         while ( position ) {\n//\n//             /** initial verticle of node. */\n//             if ( lookingFromStart ) {\n//\n//                 block = block.childNodes[0];\n//\n//             } else {\n//\n//                 block = block.childNodes[position - 1];\n//\n//             }\n//\n//             if ( block.nodeType == editor.core.nodeTypes.TAG ) {\n//\n//                 position = block.childNodes.length;\n//\n//             } else if (block.nodeType == editor.core.nodeTypes.TEXT ) {\n//\n//                 position = 0;\n//\n//             }\n//\n//         }\n//\n//         return block;\n//\n//     };\n//\n//     /**\n//      * @private\n//      * @param {Element} block - current plugins render\n//      * @param {String} tool - plugins name\n//      * @param {Boolean} isStretched - make stretched block or not\n//      *\n//      * @description adds necessary information to wrap new created block by first-level holder\n//      */\n//     var composeNewBlock_ = function (block, tool, isStretched) {\n//\n//         var newBlock     = editor.draw.node('DIV', editor.ui.className.BLOCK_CLASSNAME, {}),\n//             blockContent = editor.draw.node('DIV', editor.ui.className.BLOCK_CONTENT, {});\n//\n//         blockContent.appendChild(block);\n//         newBlock.appendChild(blockContent);\n//\n//         if (isStretched) {\n//\n//             blockContent.classList.add(editor.ui.className.BLOCK_STRETCHED);\n//\n//         }\n//\n//         newBlock.dataset.tool   = tool;\n//         return newBlock;\n//\n//     };\n//\n//     /**\n//      * Returns Range object of current selection\n//      * @protected\n//      */\n//     content.getRange = function () {\n//\n//         var selection = window.getSelection().getRangeAt(0);\n//\n//         return selection;\n//\n//     };\n//\n//     /**\n//      * Divides block in two blocks (after and before caret)\n//      *\n//      * @protected\n//      * @param {int} inputIndex - target input index\n//      *\n//      * @description splits current input content to the separate blocks\n//      * When enter is pressed among the words, that text will be splited.\n//      */\n//     content.splitBlock = function (inputIndex) {\n//\n//         var selection      = window.getSelection(),\n//             anchorNode     = selection.anchorNode,\n//             anchorNodeText = anchorNode.textContent,\n//             caretOffset    = selection.anchorOffset,\n//             textBeforeCaret,\n//             textNodeBeforeCaret,\n//             textAfterCaret,\n//             textNodeAfterCaret;\n//\n//         var currentBlock = editor.content.currentNode.querySelector('[contentEditable]');\n//\n//\n//         textBeforeCaret     = anchorNodeText.substring(0, caretOffset);\n//         textAfterCaret      = anchorNodeText.substring(caretOffset);\n//\n//         textNodeBeforeCaret = document.createTextNode(textBeforeCaret);\n//\n//         if (textAfterCaret) {\n//\n//             textNodeAfterCaret  = document.createTextNode(textAfterCaret);\n//\n//         }\n//\n//         var previousChilds = [],\n//             nextChilds     = [],\n//             reachedCurrent = false;\n//\n//         if (textNodeAfterCaret) {\n//\n//             nextChilds.push(textNodeAfterCaret);\n//\n//         }\n//\n//         for ( var i = 0, child; !!(child = currentBlock.childNodes[i]); i++) {\n//\n//             if ( child != anchorNode ) {\n//\n//                 if ( !reachedCurrent ) {\n//\n//                     previousChilds.push(child);\n//\n//                 } else {\n//\n//                     nextChilds.push(child);\n//\n//                 }\n//\n//             } else {\n//\n//                 reachedCurrent = true;\n//\n//             }\n//\n//         }\n//\n//         /** Clear current input */\n//         editor.state.inputs[inputIndex].innerHTML = '';\n//\n//         /**\n//          * Append all childs founded before anchorNode\n//          */\n//         var previousChildsLength = previousChilds.length;\n//\n//         for(i = 0; i < previousChildsLength; i++) {\n//\n//             editor.state.inputs[inputIndex].appendChild(previousChilds[i]);\n//\n//         }\n//\n//         editor.state.inputs[inputIndex].appendChild(textNodeBeforeCaret);\n//\n//         /**\n//          * Append text node which is after caret\n//          */\n//         var nextChildsLength = nextChilds.length,\n//             newNode          = document.createElement('div');\n//\n//         for(i = 0; i < nextChildsLength; i++) {\n//\n//             newNode.appendChild(nextChilds[i]);\n//\n//         }\n//\n//         newNode = newNode.innerHTML;\n//\n//         /** This type of block creates when enter is pressed */\n//         var NEW_BLOCK_TYPE = editor.settings.initialBlockPlugin;\n//\n//         /**\n//          * Make new paragraph with text after caret\n//          */\n//         editor.content.insertBlock({\n//             type  : NEW_BLOCK_TYPE,\n//             block : editor.tools[NEW_BLOCK_TYPE].render({\n//                 text : newNode\n//             })\n//         }, true );\n//\n//     };\n//\n//     /**\n//      * Merges two blocks — current and target\n//      * If target index is not exist, then previous will be as target\n//      *\n//      * @protected\n//      * @param {int} currentInputIndex\n//      * @param {int} targetInputIndex\n//      *\n//      * @description gets two inputs indexes and merges into one\n//      */\n//     content.mergeBlocks = function (currentInputIndex, targetInputIndex) {\n//\n//         /** If current input index is zero, then prevent method execution */\n//         if (currentInputIndex === 0) {\n//\n//             return;\n//\n//         }\n//\n//         var targetInput,\n//             currentInputContent = editor.state.inputs[currentInputIndex].innerHTML;\n//\n//         if (!targetInputIndex) {\n//\n//             targetInput = editor.state.inputs[currentInputIndex - 1];\n//\n//         } else {\n//\n//             targetInput = editor.state.inputs[targetInputIndex];\n//\n//         }\n//\n//         targetInput.innerHTML += currentInputContent;\n//\n//     };\n//\n//     /**\n//      * Iterates all right siblings and parents, which has right siblings\n//      * while it does not reached the first-level block\n//      *\n//      * @param {Element} node\n//      * @return {boolean}\n//      */\n//     content.isLastNode = function (node) {\n//\n//         // console.log('погнали перебор родителей');\n//\n//         var allChecked = false;\n//\n//         while ( !allChecked ) {\n//\n//             // console.log('Смотрим на %o', node);\n//             // console.log('Проверим, пустые ли соседи справа');\n//\n//             if ( !allSiblingsEmpty_(node) ) {\n//\n//                 // console.log('Есть непустые соседи. Узел не последний. Выходим.');\n//                 return false;\n//\n//             }\n//\n//             node = node.parentNode;\n//\n//             /**\n//              * Проверяем родителей до тех пор, пока не найдем блок первого уровня\n//              */\n//             if ( node.classList.contains(editor.ui.className.BLOCK_CONTENT) ) {\n//\n//                 allChecked = true;\n//\n//             }\n//\n//         }\n//\n//         return true;\n//\n//     };\n//\n//     /**\n//      * Checks if all element right siblings is empty\n//      * @param node\n//      */\n//     var allSiblingsEmpty_ = function (node) {\n//\n//         /**\n//          * Нужно убедиться, что после пустого соседа ничего нет\n//          */\n//         var sibling = node.nextSibling;\n//\n//         while ( sibling ) {\n//\n//             if (sibling.textContent.length) {\n//\n//                 return false;\n//\n//             }\n//\n//             sibling = sibling.nextSibling;\n//\n//         }\n//\n//         return true;\n//\n//     };\n//\n//     /**\n//      * @public\n//      *\n//      * @param {string} htmlData - html content as string\n//      * @param {string} plainData - plain text\n//      * @return {string} - html content as string\n//      */\n//     content.wrapTextWithParagraphs = function (htmlData, plainData) {\n//\n//         if (!htmlData.trim()) {\n//\n//             return wrapPlainTextWithParagraphs(plainData);\n//\n//         }\n//\n//         var wrapper = document.createElement('DIV'),\n//             newWrapper = document.createElement('DIV'),\n//             i,\n//             paragraph,\n//             firstLevelBlocks = ['DIV', 'P'],\n//             blockTyped,\n//             node;\n//\n//         /**\n//          * Make HTML Element to Wrap Text\n//          * It allows us to work with input data as HTML content\n//          */\n//         wrapper.innerHTML = htmlData;\n//         paragraph = document.createElement('P');\n//\n//         for (i = 0; i < wrapper.childNodes.length; i++) {\n//\n//             node = wrapper.childNodes[i];\n//\n//             blockTyped = firstLevelBlocks.indexOf(node.tagName) != -1;\n//\n//             /**\n//              * If node is first-levet\n//              * we add this node to our new wrapper\n//              */\n//             if ( blockTyped ) {\n//\n//                 /**\n//                  * If we had splitted inline nodes to paragraph before\n//                  */\n//                 if ( paragraph.childNodes.length ) {\n//\n//                     newWrapper.appendChild(paragraph.cloneNode(true));\n//\n//                     /** empty paragraph */\n//                     paragraph = null;\n//                     paragraph = document.createElement('P');\n//\n//                 }\n//\n//                 newWrapper.appendChild(node.cloneNode(true));\n//\n//             } else {\n//\n//                 /** Collect all inline nodes to one as paragraph */\n//                 paragraph.appendChild(node.cloneNode(true));\n//\n//                 /** if node is last we should append this node to paragraph and paragraph to new wrapper */\n//                 if ( i == wrapper.childNodes.length - 1 ) {\n//\n//                     newWrapper.appendChild(paragraph.cloneNode(true));\n//\n//                 }\n//\n//             }\n//\n//         }\n//\n//         return newWrapper.innerHTML;\n//\n//     };\n//\n//     /**\n//      * Splits strings on new line and wraps paragraphs with <p> tag\n//      * @param plainText\n//      * @returns {string}\n//      */\n//     var wrapPlainTextWithParagraphs = function (plainText) {\n//\n//         if (!plainText) return '';\n//\n//         return '<p>' + plainText.split('\\n\\n').join('</p><p>') + '</p>';\n//\n//     };\n//\n//     /**\n//     * Finds closest Contenteditable parent from Element\n//     * @param {Element} node     element looking from\n//     * @return {Element} node    contenteditable\n//     */\n//     content.getEditableParent = function (node) {\n//\n//         while (node && node.contentEditable != 'true') {\n//\n//             node = node.parentNode;\n//\n//         }\n//\n//         return node;\n//\n//     };\n//\n//     /**\n//     * Clear editors content\n//      *\n//      * @param {Boolean} all — if true, delete all article data (content, id, etc.)\n//     */\n//     content.clear = function (all) {\n//\n//         editor.nodes.redactor.innerHTML = '';\n//         editor.content.sync();\n//         editor.ui.saveInputs();\n//         if (all) {\n//\n//             editor.state.blocks = {};\n//\n//         } else if (editor.state.blocks) {\n//\n//             editor.state.blocks.items = [];\n//\n//         }\n//\n//         editor.content.currentNode = null;\n//\n//     };\n//\n//     /**\n//     *\n//      * Load new data to editor\n//      * If editor is not empty, just append articleData.items\n//      *\n//     * @param articleData.items\n//     */\n//     content.load = function (articleData) {\n//\n//         var currentContent = Object.assign({}, editor.state.blocks);\n//\n//         editor.content.clear();\n//\n//         if (!Object.keys(currentContent).length) {\n//\n//             editor.state.blocks = articleData;\n//\n//         } else if (!currentContent.items) {\n//\n//             currentContent.items = articleData.items;\n//             editor.state.blocks = currentContent;\n//\n//         } else {\n//\n//             currentContent.items = currentContent.items.concat(articleData.items);\n//             editor.state.blocks = currentContent;\n//\n//         }\n//\n//         editor.renderer.makeBlocksFromData();\n//\n//     };\n//\n//     return content;\n//\n// })({});\n\n\n// WEBPACK FOOTER //\n// ./src/components/modules/_content.js","/**\n * Codex Editor Destroyer module\n *\n * @auhor Codex Team\n * @version 1.0\n */\n\nmodule.exports = function (destroyer) {\n\n    let editor = codex.editor;\n\n    destroyer.removeNodes = function () {\n\n        editor.nodes.wrapper.remove();\n        editor.nodes.notifications.remove();\n\n    };\n\n    destroyer.destroyPlugins = function () {\n\n        for (var tool in editor.tools) {\n\n            if (typeof editor.tools[tool].destroy === 'function') {\n\n                editor.tools[tool].destroy();\n\n            }\n\n        }\n\n    };\n\n    destroyer.destroyScripts = function () {\n\n        var scripts = document.getElementsByTagName('SCRIPT');\n\n        for (var i = 0; i < scripts.length; i++) {\n\n            if (scripts[i].id.indexOf(editor.scriptPrefix) + 1) {\n\n                scripts[i].remove();\n                i--;\n\n            }\n\n        }\n\n    };\n\n\n    /**\n     * Delete editor data from webpage.\n     * You should send settings argument with boolean flags:\n     * @param settings.ui- remove redactor event listeners and DOM nodes\n     * @param settings.scripts - remove redactor scripts from DOM\n     * @param settings.plugins - remove plugin's objects\n     * @param settings.core - remove editor core. You can remove core only if UI and scripts flags is true\n     * }\n     *\n     */\n    destroyer.destroy = function (settings) {\n\n        if (!settings || typeof settings !== 'object') {\n\n            return;\n\n        }\n\n        if (settings.ui) {\n\n            destroyer.removeNodes();\n            editor.listeners.removeAll();\n\n        }\n\n        if (settings.scripts) {\n\n            destroyer.destroyScripts();\n\n        }\n\n        if (settings.plugins) {\n\n            destroyer.destroyPlugins();\n\n        }\n\n        if (settings.ui && settings.scripts && settings.core) {\n\n            delete codex.editor;\n\n        }\n\n    };\n\n    return destroyer;\n\n}({});\n\n\n// WEBPACK FOOTER //\n// ./src/components/modules/_destroyer.js","/**\n * Codex Editor Listeners module\n *\n * @author Codex Team\n * @version 1.0\n */\n\n/**\n * Module-decorator for event listeners assignment\n */\nmodule.exports = function (listeners) {\n\n    var allListeners = [];\n\n    /**\n     * Search methods\n     *\n     * byElement, byType and byHandler returns array of suitable listeners\n     * one and all takes element, eventType, and handler and returns first (all) suitable listener\n     *\n     */\n    listeners.search = function () {\n\n        var byElement = function (element, context) {\n\n            var listenersOnElement = [];\n\n            context = context || allListeners;\n\n            for (var i = 0; i < context.length; i++) {\n\n                var listener = context[i];\n\n                if (listener.element === element) {\n\n                    listenersOnElement.push(listener);\n\n                }\n\n            }\n\n            return listenersOnElement;\n\n        };\n\n        var byType = function (eventType, context) {\n\n            var listenersWithType = [];\n\n            context = context || allListeners;\n\n            for (var i = 0; i < context.length; i++) {\n\n                var listener = context[i];\n\n                if (listener.type === eventType) {\n\n                    listenersWithType.push(listener);\n\n                }\n\n            }\n\n            return listenersWithType;\n\n        };\n\n        var byHandler = function (handler, context) {\n\n            var listenersWithHandler = [];\n\n            context = context || allListeners;\n\n            for (var i = 0; i < context.length; i++) {\n\n                var listener = context[i];\n\n                if (listener.handler === handler) {\n\n                    listenersWithHandler.push(listener);\n\n                }\n\n            }\n\n            return listenersWithHandler;\n\n        };\n\n        var one = function (element, eventType, handler) {\n\n            var result = allListeners;\n\n            if (element)\n                result = byElement(element, result);\n\n            if (eventType)\n                result = byType(eventType, result);\n\n            if (handler)\n                result = byHandler(handler, result);\n\n            return result[0];\n\n        };\n\n        var all = function (element, eventType, handler) {\n\n            var result = allListeners;\n\n            if (element)\n                result = byElement(element, result);\n\n            if (eventType)\n                result = byType(eventType, result);\n\n            if (handler)\n                result = byHandler(handler, result);\n\n            return result;\n\n        };\n\n        return {\n            byElement   : byElement,\n            byType      : byType,\n            byHandler   : byHandler,\n            one         : one,\n            all         : all\n        };\n\n    }();\n\n    listeners.add = function (element, eventType, handler, isCapture) {\n\n        element.addEventListener(eventType, handler, isCapture);\n\n        var data = {\n            element: element,\n            type: eventType,\n            handler: handler\n        };\n\n        var alreadyAddedListener = listeners.search.one(element, eventType, handler);\n\n        if (!alreadyAddedListener) {\n\n            allListeners.push(data);\n\n        }\n\n    };\n\n    listeners.remove = function (element, eventType, handler) {\n\n        element.removeEventListener(eventType, handler);\n\n        var existingListeners = listeners.search.all(element, eventType, handler);\n\n        for (var i = 0; i < existingListeners.length; i++) {\n\n            var index = allListeners.indexOf(existingListeners[i]);\n\n            if (index > 0) {\n\n                allListeners.splice(index, 1);\n\n            }\n\n        }\n\n    };\n\n    listeners.removeAll = function () {\n\n        allListeners.map(function (current) {\n\n            listeners.remove(current.element, current.type, current.handler);\n\n        });\n\n    };\n\n    listeners.get = function (element, eventType, handler) {\n\n        return listeners.search.all(element, eventType, handler);\n\n    };\n\n    return listeners;\n\n}({});\n\n\n// WEBPACK FOOTER //\n// ./src/components/modules/_listeners.js","/**\n * Codex Editor Notification Module\n *\n * @author Codex Team\n * @version 1.0\n */\n\nmodule.exports = (function (notifications) {\n\n    let editor = codex.editor;\n\n    var queue = [];\n\n    var addToQueue = function (settings) {\n\n        queue.push(settings);\n\n        var index = 0;\n\n        while ( index < queue.length && queue.length > 5) {\n\n            if (queue[index].type == 'confirm' || queue[index].type == 'prompt') {\n\n                index++;\n                continue;\n\n            }\n\n            queue[index].close();\n            queue.splice(index, 1);\n\n        }\n\n    };\n\n    notifications.createHolder = function () {\n\n        var holder = editor.draw.node('DIV', 'cdx-notifications-block');\n\n        editor.nodes.notifications = document.body.appendChild(holder);\n\n        return holder;\n\n    };\n\n\n    /**\n     * Error notificator. Shows block with message\n     * @protected\n     */\n    notifications.errorThrown = function (errorMsg, event) {\n\n        editor.notifications.notification({message: 'This action is not available currently', type: event.type});\n\n    };\n\n    /**\n     *\n     * Appends notification\n     *\n     *  settings = {\n     *      type        - notification type (reserved types: alert, confirm, prompt). Just add class 'cdx-notification-'+type\n     *      message     - notification message\n     *      okMsg       - confirm button text (default - 'Ok')\n     *      cancelBtn   - cancel button text (default - 'Cancel'). Only for confirm and prompt types\n     *      confirm     - function-handler for ok button click\n     *      cancel      - function-handler for cancel button click. Only for confirm and prompt types\n     *      time        - time (in seconds) after which notification will close (default - 10s)\n     *  }\n     *\n     * @param settings\n     */\n    notifications.notification = function (constructorSettings) {\n\n        /** Private vars and methods */\n        var notification = null,\n            cancel       = null,\n            type         = null,\n            confirm      = null,\n            inputField   = null;\n\n        var confirmHandler = function () {\n\n            close();\n\n            if (typeof confirm !== 'function' ) {\n\n                return;\n\n            }\n\n            if (type == 'prompt') {\n\n                confirm(inputField.value);\n                return;\n\n            }\n\n            confirm();\n\n        };\n\n        var cancelHandler = function () {\n\n            close();\n\n            if (typeof cancel !== 'function' ) {\n\n                return;\n\n            }\n\n            cancel();\n\n        };\n\n\n        /** Public methods */\n        function create(settings) {\n\n            if (!(settings && settings.message)) {\n\n                editor.core.log('Can\\'t create notification. Message is missed');\n                return;\n\n            }\n\n            settings.type = settings.type || 'alert';\n            settings.time = settings.time*1000 || 10000;\n\n            var wrapper = editor.draw.node('DIV', 'cdx-notification'),\n                message = editor.draw.node('DIV', 'cdx-notification__message'),\n                input = editor.draw.node('INPUT', 'cdx-notification__input'),\n                okBtn = editor.draw.node('SPAN', 'cdx-notification__ok-btn'),\n                cancelBtn = editor.draw.node('SPAN', 'cdx-notification__cancel-btn');\n\n            message.textContent = settings.message;\n            okBtn.textContent = settings.okMsg || 'ОК';\n            cancelBtn.textContent = settings.cancelMsg || 'Отмена';\n\n            editor.listeners.add(okBtn, 'click', confirmHandler);\n            editor.listeners.add(cancelBtn, 'click', cancelHandler);\n\n            wrapper.appendChild(message);\n\n            if (settings.type == 'prompt') {\n\n                wrapper.appendChild(input);\n\n            }\n\n            wrapper.appendChild(okBtn);\n\n            if (settings.type == 'prompt' || settings.type == 'confirm') {\n\n                wrapper.appendChild(cancelBtn);\n\n            }\n\n            wrapper.classList.add('cdx-notification-' + settings.type);\n            wrapper.dataset.type = settings.type;\n\n            notification = wrapper;\n            type         = settings.type;\n            confirm      = settings.confirm;\n            cancel       = settings.cancel;\n            inputField   = input;\n\n            if (settings.type != 'prompt' && settings.type != 'confirm') {\n\n                window.setTimeout(close, settings.time);\n\n            }\n\n        };\n\n        /**\n        * Show notification block\n        */\n        function send() {\n\n            editor.nodes.notifications.appendChild(notification);\n            inputField.focus();\n\n            editor.nodes.notifications.classList.add('cdx-notification__notification-appending');\n\n            window.setTimeout(function () {\n\n                editor.nodes.notifications.classList.remove('cdx-notification__notification-appending');\n\n            }, 100);\n\n            addToQueue({type: type, close: close});\n\n        };\n\n        /**\n        *  Remove notification block\n        */\n        function close() {\n\n            notification.remove();\n\n        };\n\n\n        if (constructorSettings) {\n\n            create(constructorSettings);\n            send();\n\n        }\n\n        return {\n            create: create,\n            send: send,\n            close: close\n        };\n\n    };\n\n    notifications.clear = function () {\n\n        editor.nodes.notifications.innerHTML = '';\n        queue = [];\n\n    };\n\n    return notifications;\n\n})({});\n\n\n// WEBPACK FOOTER //\n// ./src/components/modules/_notifications.js","/**\n * Codex Editor Parser Module\n *\n * @author Codex Team\n * @version 1.1\n */\n\nmodule.exports = (function (parser) {\n\n    let editor = codex.editor;\n\n    /** inserting text */\n    parser.insertPastedContent = function (blockType, tag) {\n\n        editor.content.insertBlock({\n            type :  blockType.type,\n            block : blockType.render({\n                text : tag.innerHTML\n            })\n        });\n\n    };\n\n    /**\n     * Check DOM node for display style: separated block or child-view\n     */\n    parser.isFirstLevelBlock = function (node) {\n\n        return node.nodeType == editor.core.nodeTypes.TAG &&\n            node.classList.contains(editor.ui.className.BLOCK_CLASSNAME);\n\n    };\n\n    return parser;\n\n})({});\n\n\n\n// WEBPACK FOOTER //\n// ./src/components/modules/_parser.js","/**\n * Codex Editor Paste module\n *\n * @author Codex Team\n * @version 1.1.1\n */\n\nmodule.exports = function (paste) {\n\n    let editor = codex.editor;\n\n    var patterns = [];\n\n    paste.prepare = function () {\n\n        var tools = editor.tools;\n\n        for (var tool in tools) {\n\n            if (!tools[tool].renderOnPastePatterns || !Array.isArray(tools[tool].renderOnPastePatterns)) {\n\n                continue;\n\n            }\n\n            tools[tool].renderOnPastePatterns.map(function (pattern) {\n\n\n                patterns.push(pattern);\n\n            });\n\n        }\n\n        return Promise.resolve();\n\n    };\n\n    /**\n     * Saves data\n     * @param event\n     */\n    paste.pasted = function (event) {\n\n        var clipBoardData = event.clipboardData || window.clipboardData,\n            content = clipBoardData.getData('Text');\n\n        var result = analize(content);\n\n        if (result) {\n\n            event.preventDefault();\n            event.stopImmediatePropagation();\n\n        }\n\n        return result;\n\n    };\n\n    /**\n     * Analizes pated string and calls necessary method\n     */\n\n    var analize = function (string) {\n\n        var result  = false,\n            content = editor.content.currentNode,\n            plugin  = content.dataset.tool;\n\n        patterns.map( function (pattern) {\n\n            var execArray = pattern.regex.exec(string),\n                match     = execArray && execArray[0];\n\n            if ( match && match === string.trim()) {\n\n                /** current block is not empty */\n                if ( content.textContent.trim() && plugin == editor.settings.initialBlockPlugin ) {\n\n                    pasteToNewBlock_();\n\n                }\n\n                pattern.callback(string, pattern);\n                result = true;\n\n            }\n\n        });\n\n        return result;\n\n    };\n\n    var pasteToNewBlock_ = function () {\n\n        /** Create new initial block */\n        editor.content.insertBlock({\n\n            type : editor.settings.initialBlockPlugin,\n            block : editor.tools[editor.settings.initialBlockPlugin].render({\n                text : ''\n            })\n\n        }, false);\n\n    };\n\n    /**\n     * This method prevents default behaviour.\n     *\n     * @param {Object} event\n     * @protected\n     *\n     * @description We get from clipboard pasted data, sanitize, make a fragment that contains of this sanitized nodes.\n     * Firstly, we need to memorize the caret position. We can do that by getting the range of selection.\n     * After all, we insert clear fragment into caret placed position. Then, we should move the caret to the last node\n     */\n    paste.blockPasteCallback = function (event) {\n\n\n        if (!needsToHandlePasteEvent(event.target)) {\n\n            return;\n\n        }\n\n        /** Prevent default behaviour */\n        event.preventDefault();\n\n        /** get html pasted data - dirty data */\n        var htmlData  = event.clipboardData.getData('text/html'),\n            plainData = event.clipboardData.getData('text/plain');\n\n        /** Temporary DIV that is used to work with text's paragraphs as DOM-elements*/\n        var paragraphs = editor.draw.node('DIV', '', {}),\n            cleanData,\n            wrappedData;\n\n        /** Create fragment, that we paste to range after proccesing */\n        cleanData = editor.sanitizer.clean(htmlData);\n\n        /**\n         * We wrap pasted text with <p> tags to split it logically\n         * @type {string}\n         */\n        wrappedData = editor.content.wrapTextWithParagraphs(cleanData, plainData);\n        paragraphs.innerHTML = wrappedData;\n\n        /**\n         * If there only one paragraph, just insert in at the caret location\n         */\n        if (paragraphs.childNodes.length == 1) {\n\n            emulateUserAgentBehaviour(paragraphs.firstChild);\n            return;\n\n        }\n\n        insertPastedParagraphs(paragraphs.childNodes);\n\n    };\n\n    /**\n     * Checks if we should handle paste event on block\n     * @param block\n     *\n     * @return {boolean}\n     */\n    var needsToHandlePasteEvent = function (block) {\n\n        /** If area is input or textarea then allow default behaviour */\n        if ( editor.core.isNativeInput(block) ) {\n\n            return false;\n\n        }\n\n        var editableParent = editor.content.getEditableParent(block);\n\n        /** Allow paste when event target placed in Editable element */\n        if (!editableParent) {\n\n            return false;\n\n        }\n\n        return true;\n\n    };\n\n    /**\n     * Inserts new initial plugin blocks with data in paragraphs\n     *\n     * @param {Array} paragraphs - array of paragraphs (<p></p>) whit content, that should be inserted\n     */\n    var insertPastedParagraphs = function (paragraphs) {\n\n        var NEW_BLOCK_TYPE = editor.settings.initialBlockPlugin,\n            currentNode = editor.content.currentNode;\n\n\n        paragraphs.forEach(function (paragraph) {\n\n            /** Don't allow empty paragraphs */\n            if (editor.core.isBlockEmpty(paragraph)) {\n\n                return;\n\n            }\n\n            editor.content.insertBlock({\n                type  : NEW_BLOCK_TYPE,\n                block : editor.tools[NEW_BLOCK_TYPE].render({\n                    text : paragraph.innerHTML\n                })\n            });\n\n            editor.caret.inputIndex++;\n\n        });\n\n        editor.caret.setToPreviousBlock(editor.caret.getCurrentInputIndex() + 1);\n\n\n        /**\n         * If there was no data in working node, remove it\n         */\n        if (editor.core.isBlockEmpty(currentNode)) {\n\n            currentNode.remove();\n            editor.ui.saveInputs();\n\n        }\n\n\n    };\n\n    /**\n     * Inserts node content at the caret position\n     *\n     * @param {Node} node - DOM node (could be DocumentFragment), that should be inserted at the caret location\n     */\n    var emulateUserAgentBehaviour = function (node) {\n\n        var newNode;\n\n        if (node.childElementCount) {\n\n            newNode = document.createDocumentFragment();\n\n            node.childNodes.forEach(function (current) {\n\n                if (!editor.core.isDomNode(current) && current.data.trim() === '') {\n\n                    return;\n\n                }\n\n                newNode.appendChild(current.cloneNode(true));\n\n            });\n\n        } else {\n\n            newNode = document.createTextNode(node.textContent);\n\n        }\n\n        editor.caret.insertNode(newNode);\n\n    };\n\n\n    return paste;\n\n}({});\n\n\n// WEBPACK FOOTER //\n// ./src/components/modules/_paste.js","/**\n * Codex Sanitizer\n */\n\nmodule.exports = (function (sanitizer) {\n\n    /** HTML Janitor library */\n    let janitor = require('html-janitor');\n\n    /** Codex Editor */\n    let editor  = codex.editor;\n\n    sanitizer.prepare = function () {\n\n        if (editor.settings.sanitizer && !editor.core.isEmpty(editor.settings.sanitizer)) {\n\n            Config.CUSTOM = editor.settings.sanitizer;\n\n        }\n\n    };\n\n    /**\n     * Basic config\n     */\n    var Config = {\n\n        /** User configuration */\n        CUSTOM : null,\n\n        BASIC : {\n\n            tags: {\n                p: {},\n                a: {\n                    href: true,\n                    target: '_blank',\n                    rel: 'nofollow'\n                }\n            }\n        }\n    };\n\n    sanitizer.Config = Config;\n\n    /**\n     *\n     * @param userCustomConfig\n     * @returns {*}\n     * @private\n     *\n     * @description If developer uses editor's API, then he can customize sane restrictions.\n     * Or, sane config can be defined globally in editors initialization. That config will be used everywhere\n     * At least, if there is no config overrides, that API uses BASIC Default configation\n     */\n    let init_ = function (userCustomConfig) {\n\n        let configuration = userCustomConfig || Config.CUSTOM || Config.BASIC;\n\n        return new janitor(configuration);\n\n    };\n\n    /**\n     * Cleans string from unwanted tags\n     * @protected\n     * @param {String} dirtyString - taint string\n     * @param {Object} customConfig - allowed tags\n     */\n    sanitizer.clean = function (dirtyString, customConfig) {\n\n        let janitorInstance = init_(customConfig);\n\n        return janitorInstance.clean(dirtyString);\n\n    };\n\n    return sanitizer;\n\n})({});\n\n\n// WEBPACK FOOTER //\n// ./src/components/modules/_sanitizer.js","/**\n * Codex Editor Saver\n *\n * @author Codex Team\n * @version 1.1.0\n */\n\nmodule.exports = (function (saver) {\n\n    let editor = codex.editor;\n\n    /**\n     * @public\n     * Save blocks\n     */\n    saver.save = function () {\n\n        /** Save html content of redactor to memory */\n        editor.state.html = editor.nodes.redactor.innerHTML;\n\n        /** Clean jsonOutput state */\n        editor.state.jsonOutput = [];\n\n        return saveBlocks(editor.nodes.redactor.childNodes);\n\n    };\n\n    /**\n     * @private\n     * Save each block data\n     *\n     * @param blocks\n     * @returns {Promise.<TResult>}\n     */\n    let saveBlocks = function (blocks) {\n\n        let data = [];\n\n        for(let index = 0; index < blocks.length; index++) {\n\n            data.push(getBlockData(blocks[index]));\n\n        }\n\n        return Promise.all(data)\n            .then(makeOutput)\n            .catch(editor.core.log);\n\n    };\n\n    /** Save and validate block data */\n    let getBlockData = function (block) {\n\n        return saveBlockData(block)\n            .then(validateBlockData)\n            .catch(editor.core.log);\n\n    };\n\n    /**\n    * @private\n    * Call block`s plugin save method and return saved data\n    *\n    * @param block\n    * @returns {Object}\n    */\n    let saveBlockData = function (block) {\n\n        let pluginName = block.dataset.tool;\n\n        /** Check for plugin existence */\n        if (!editor.tools[pluginName]) {\n\n            editor.core.log(`Plugin «${pluginName}» not found`, 'error');\n            return {data: null, pluginName: null};\n\n        }\n\n        /** Check for plugin having save method */\n        if (typeof editor.tools[pluginName].save !== 'function') {\n\n            editor.core.log(`Plugin «${pluginName}» must have save method`, 'error');\n            return {data: null, pluginName: null};\n\n        }\n\n        /** Result saver */\n        let blockContent   = block.childNodes[0],\n            pluginsContent = blockContent.childNodes[0],\n            position = pluginsContent.dataset.inputPosition;\n\n        /** If plugin wasn't available then return data from cache */\n        if ( editor.tools[pluginName].available === false ) {\n\n            return Promise.resolve({data: codex.editor.state.blocks.items[position].data, pluginName});\n\n        }\n\n        return Promise.resolve(pluginsContent)\n            .then(editor.tools[pluginName].save)\n            .then(data => Object({data, pluginName}));\n\n    };\n\n    /**\n    * Call plugin`s validate method. Return false if validation failed\n    *\n    * @param data\n    * @param pluginName\n    * @returns {Object|Boolean}\n    */\n    let validateBlockData = function ({data, pluginName}) {\n\n        if (!data || !pluginName) {\n\n            return false;\n\n        }\n\n        if (editor.tools[pluginName].validate) {\n\n            let result = editor.tools[pluginName].validate(data);\n\n            /**\n             * Do not allow invalid data\n             */\n            if (!result) {\n\n                return false;\n\n            }\n\n        }\n\n        return {data, pluginName};\n\n\n    };\n\n    /**\n    * Compile article output\n    *\n    * @param savedData\n    * @returns {{time: number, version, items: (*|Array)}}\n    */\n    let makeOutput = function (savedData) {\n\n        savedData = savedData.filter(blockData => blockData);\n\n        let items = savedData.map(blockData => Object({type: blockData.pluginName, data: blockData.data}));\n\n        editor.state.jsonOutput = items;\n\n        return {\n            id: editor.state.blocks.id || null,\n            time: +new Date(),\n            version: editor.version,\n            items\n        };\n\n    };\n\n    return saver;\n\n})({});\n\n\n\n// WEBPACK FOOTER //\n// ./src/components/modules/_saver.js","/**\n *\n * Codex.Editor Transport Module\n *\n * @copyright 2017 Codex-Team\n * @version 1.2.0\n */\n\nmodule.exports = (function (transport) {\n\n    let editor = codex.editor;\n\n\n    /**\n     * @private {Object} current XmlHttpRequest instance\n     */\n    var currentRequest = null;\n\n\n    /**\n     * @type {null} | {DOMElement} input - keeps input element in memory\n     */\n    transport.input = null;\n\n    /**\n     * @property {Object} arguments - keep plugin settings and defined callbacks\n     */\n    transport.arguments = null;\n\n    /**\n     * Prepares input element where will be files\n     */\n    transport.prepare = function () {\n\n        let input = editor.draw.node( 'INPUT', '', { type : 'file' } );\n\n        editor.listeners.add(input, 'change', editor.transport.fileSelected);\n        editor.transport.input = input;\n\n    };\n\n    /** Clear input when files is uploaded */\n    transport.clearInput = function () {\n\n        /** Remove old input */\n        transport.input = null;\n\n        /** Prepare new one */\n        transport.prepare();\n\n    };\n\n    /**\n     * Callback for file selection\n     * @param {Event} event\n     */\n    transport.fileSelected = function () {\n\n        var input       = this,\n            i,\n            files       = input.files,\n            formData   = new FormData();\n\n        if (editor.transport.arguments.multiple === true) {\n\n            for ( i = 0; i < files.length; i++) {\n\n                formData.append('files[]', files[i], files[i].name);\n\n            }\n\n        } else {\n\n            formData.append('files', files[0], files[0].name);\n\n        }\n\n        currentRequest = editor.core.ajax({\n            type : 'POST',\n            data : formData,\n            url        : editor.transport.arguments.url,\n            beforeSend : editor.transport.arguments.beforeSend,\n            success    : editor.transport.arguments.success,\n            error      : editor.transport.arguments.error,\n            progress   : editor.transport.arguments.progress\n        });\n\n        /** Clear input */\n        transport.clearInput();\n\n    };\n\n    /**\n     * Use plugin callbacks\n     * @protected\n     *\n     * @param {Object} args - can have :\n     * @param {String} args.url - fetch URL\n     * @param {Function} args.beforeSend - function calls before sending ajax\n     * @param {Function} args.success - success callback\n     * @param {Function} args.error - on error handler\n     * @param {Function} args.progress - xhr onprogress handler\n     * @param {Boolean} args.multiple - allow select several files\n     * @param {String} args.accept - adds accept attribute\n     */\n    transport.selectAndUpload = function (args) {\n\n        transport.arguments = args;\n\n        if ( args.multiple === true) {\n\n            transport.input.setAttribute('multiple', 'multiple');\n\n        }\n\n        if ( args.accept ) {\n\n            transport.input.setAttribute('accept', args.accept);\n\n        }\n\n        transport.input.click();\n\n    };\n\n    transport.abort = function () {\n\n        currentRequest.abort();\n\n        currentRequest = null;\n\n    };\n\n    return transport;\n\n})({});\n\n\n// WEBPACK FOOTER //\n// ./src/components/modules/_transport.js","/**\n * @class BlockManager\n * @classdesc Manage editor`s blocks storage and appearance\n */\n\nimport Block from '../block';\nimport Util from '../util';\n\nclass BlockManager {\n\n    /**\n     * @constructor\n     *\n     * @param {EditorConfig} config\n     */\n    constructor({ config }) {\n\n        this.config = config;\n        this.Editor = null;\n        this._blocks = null;\n        this._currentBlockIndex = -1;\n\n    }\n\n    /**\n     * Editor modules setting\n     *\n     * @param Editor\n     */\n    set state(Editor) {\n\n        this.Editor = Editor;\n\n    }\n\n    /**\n     * Should be called after Editor.UI preparation\n     * Define this._blocks property\n     *\n     * @returns {Promise}\n     */\n    prepare() {\n\n        return new Promise(resolve => {\n\n            let blocks = new Blocks(this.Editor.UI.nodes.redactor);\n\n            /**\n             * We need to use Proxy to overload set/get [] operator.\n             * So we can use array-like syntax to access blocks\n             *\n             * @example\n             * this._blocks[0] = new Block(...);\n             *\n             * block = this._blocks[0];\n             *\n             * @todo proxy the enumerate method\n             *\n             * @type {Proxy}\n             * @private\n             */\n            this._blocks = new Proxy(blocks, {\n                set: Blocks.set,\n                get: Blocks.get\n            });\n\n            resolve();\n\n        });\n\n    }\n\n    /**\n     * Insert new block into _blocks\n     *\n     * @param {String} toolName — plugin name\n     * @param {Object} data — plugin data\n     */\n    insert(toolName, data) {\n\n        let toolInstance = this.Editor.Tools.construct(toolName, data),\n            block = new Block(toolInstance);\n\n        this._blocks[++this._currentBlockIndex] = block;\n\n    }\n\n    /**\n     * Get Block instance by html element\n     *\n     * @todo get first level block before searching\n     *\n     * @param {HTMLElement} element\n     * @returns {Block}\n     */\n    getBlock(element) {\n\n        let nodes = this._blocks.nodes,\n            index = nodes.indexOf(element);\n\n        if (index >= 0) {\n\n            return this._blocks[index];\n\n        }\n\n    }\n\n    /**\n     * Get current Block instance\n     *\n     * @return {Block}\n     */\n    get currentBlock() {\n\n        return this._blocks[this._currentBlockIndex];\n\n    }\n\n    /**\n     * Get working html element\n     *\n     * @return {HTMLElement}\n     */\n    get currentNode() {\n\n        return this._blocks.nodes[this._currentBlockIndex];\n\n    }\n\n    /**\n     * Set _currentBlockIndex to passed block\n     *\n     * @todo get first level block before searching\n     *\n     * @param {HTMLElement} element\n     */\n    set currentNode(element) {\n\n        let nodes = this._blocks.nodes;\n\n        this._currentBlockIndex = nodes.indexOf(element);\n\n    }\n\n    /**\n     * Get array of Block instances\n     *\n     * @returns {Block[]} {@link Blocks#array}\n     */\n    get blocks() {\n\n        return this._blocks.array;\n\n    }\n\n};\n\n/**\n * @class Blocks\n * @classdesc Class to work with Block instances array\n *\n * @private\n *\n * @property {HTMLElement} workingArea — editor`s working node\n *\n */\nclass Blocks {\n\n    /**\n     * @constructor\n     *\n     * @param {HTMLElement} workingArea — editor`s working node\n     */\n    constructor(workingArea) {\n\n        this._blocks = [];\n        this.workingArea = workingArea;\n\n    }\n\n    /**\n     * Push back new Block\n     *\n     * @param {Block} block\n     */\n    push(block) {\n\n        this._blocks.push(block);\n        this.workingArea.appendChild(block.html);\n\n    }\n\n    /**\n     * Insert new Block at passed index\n     *\n     * @param {Number} index — index to insert Block\n     * @param {Block} block — Block to insert\n     */\n    insert(index, block) {\n\n        if (!this.length) {\n\n            this.push(block);\n            return;\n\n        }\n\n        if (index > this.length) {\n\n            // @todo decide how to handle this case\n            return;\n\n        }\n\n        this._blocks[index] = block;\n\n        if (index > 0) {\n\n            let previousBlock = this._blocks[index - 1];\n\n            previousBlock.html.insertAdjacentElement('afterend', block.html);\n\n        } else {\n\n            let nextBlock = this._blocks[index + 1];\n\n            nextBlock.html.insertAdjacentElement('beforebegin', block.html);\n\n        }\n\n    }\n\n    /**\n     * Insert Block after passed target\n     *\n     * @todo decide if this method is necessary\n     *\n     * @param {Block} targetBlock — target after wich Block should be inserted\n     * @param {Block} newBlock — Block to insert\n     */\n    insertAfter(targetBlock, newBlock) {\n\n        let index = this._blocks.indexOf(targetBlock);\n\n        this.insert(index + 1, newBlock);\n\n    }\n\n    /**\n     * Get Block by index\n     *\n     * @param {Number} index — Block index\n     * @returns {Block}\n     */\n    get(index) {\n\n        return this._blocks[index];\n\n    }\n\n    /**\n     * Return index of passed Block\n     *\n     * @param {Block} block\n     * @returns {Number}\n     */\n    indexOf(block) {\n\n        return this._blocks.indexOf(block);\n\n    }\n\n    /**\n     * Get length of Block instances array\n     *\n     * @returns {Number}\n     */\n    get length() {\n\n        return this._blocks.length;\n\n    }\n\n    /**\n     * Get Block instances array\n     *\n     * @returns {Block[]}\n     */\n    get array() {\n\n        return this._blocks;\n\n    }\n\n    /**\n     * Get blocks html elements array\n     *\n     * @returns {HTMLElement[]}\n     */\n    get nodes() {\n\n        return Util.array(this.workingArea.children);\n\n    }\n\n    /**\n     * Proxy trap to implement array-like setter\n     *\n     * @example\n     * blocks[0] = new Block(...)\n     *\n     * @param {Blocks} instance — Blocks instance\n     * @param {Number|String} index — block index\n     * @param {Block} block — Block to set\n     * @returns {Boolean}\n     */\n    static set(instance, index, block) {\n\n        if (isNaN(Number(index))) {\n\n            return false;\n\n        }\n\n        instance.insert(index, block);\n\n        return true;\n\n    }\n\n    /**\n     * Proxy trap to implement array-like getter\n     *\n     * @param {Blocks} instance — Blocks instance\n     * @param {Number|String} index — Block index\n     * @returns {Block|*}\n     */\n    static get(instance, index) {\n\n        if (isNaN(Number(index))) {\n\n            return instance[index];\n\n        }\n\n        return instance.get(index);\n\n    }\n\n}\n\nmodule.exports = BlockManager;\n\n\n// WEBPACK FOOTER //\n// ./src/components/modules/blockManager.js","/**\n * @module eventDispatcher\n *\n * Has two important methods:\n *    - {Function} on - appends subscriber to the event. If event doesn't exist - creates new one\n *    - {Function} emit - fires all subscribers with data\n *\n * @version 1.0.0\n */\nclass Events {\n\n    /**\n     * @param Editor\n     * @param Editor.modules {@link CodexEditor#moduleInstances}\n     * @param Editor.config {@link CodexEditor#configuration}\n     */\n    set state(Editor) {\n\n        this.Editor = Editor;\n\n    }\n\n    /**\n     * @constructor\n     *\n     * @property {Object} subscribers - all subscribers grouped by event name\n     */\n    constructor() {\n\n        this.subscribers = {};\n        this.Editor = null;\n\n    }\n\n    /**\n     * @param {String} eventName - event name\n     * @param {Function} callback - subscriber\n     */\n    on(eventName, callback) {\n\n        if (!(eventName in this.subscribers)) {\n\n            this.subscribers[eventName] = [];\n\n        }\n\n        // group by events\n        this.subscribers[eventName].push(callback);\n\n    }\n\n    /**\n     * @param {String} eventName - event name\n     * @param {Object} data - subscribers get this data when they were fired\n     */\n    emit(eventName, data) {\n\n        this.subscribers[eventName].reduce(function (previousData, currentHandler) {\n\n            let newData = currentHandler(previousData);\n\n            return newData ? newData : previousData;\n\n        }, data);\n\n    }\n\n    /**\n     * Destroyer\n     */\n    destroy() {\n\n        this.Editor = null;\n        this.subscribers = null;\n\n    }\n\n}\n\nmodule.exports = Events;\n\n\n\n// WEBPACK FOOTER //\n// ./src/components/modules/events.js","/**\n * Codex Editor Renderer Module\n *\n * @author Codex Team\n * @version 1.0\n */\n\nimport Util from '../util';\n\nclass Renderer {\n\n    /**\n     * @constructor\n     *\n     * @param {EditorConfig} config\n     */\n    constructor(config) {\n\n        this.config = config;\n        this.Editor = null;\n\n    }\n\n    /**\n     * Editor modules setter\n     *\n     * @param {Object} Editor\n     */\n    set state(Editor) {\n\n        this.Editor = Editor;\n\n    }\n\n    /**\n     *\n     * Make plugin blocks from array of plugin`s data\n     *\n     * @param {Object[]} items\n     */\n    render(items) {\n\n        let chainData = [];\n\n        for (let i = 0; i < items.length; i++) {\n\n            chainData.push({\n                function: () => this.makeBlock(items[i])\n            });\n\n        }\n\n        Util.sequence(chainData);\n\n    }\n\n    /**\n     * Get plugin instance\n     * Add plugin instance to BlockManager\n     * Insert block to working zone\n     *\n     * @param {Object} item\n     * @returns {Promise.<T>}\n     * @private\n     */\n    makeBlock(item) {\n\n        let tool = item.type,\n            data = item.data;\n\n        this.Editor.BlockManager.insert(tool, data);\n\n        return Promise.resolve();\n\n    }\n\n}\n\nmodule.exports = Renderer;\n\n// module.exports = (function (renderer) {\n//\n//     let editor = codex.editor;\n//\n//     /**\n//      * Asyncronously parses input JSON to redactor blocks\n//      */\n//     renderer.makeBlocksFromData = function () {\n//\n//         /**\n//          * If redactor is empty, add first paragraph to start writing\n//          */\n//         if (editor.core.isEmpty(editor.state.blocks) || !editor.state.blocks.items.length) {\n//\n//             editor.ui.addInitialBlock();\n//             return;\n//\n//         }\n//\n//         Promise.resolve()\n//\n//         /** First, get JSON from state */\n//             .then(function () {\n//\n//                 return editor.state.blocks;\n//\n//             })\n//\n//             /** Then, start to iterate they */\n//             .then(editor.renderer.appendBlocks)\n//\n//             /** Write log if something goes wrong */\n//             .catch(function (error) {\n//\n//                 editor.core.log('Error while parsing JSON: %o', 'error', error);\n//\n//             });\n//\n//     };\n//\n//     /**\n//      * Parses JSON to blocks\n//      * @param {object} data\n//      * @return Promise -> nodeList\n//      */\n//     renderer.appendBlocks = function (data) {\n//\n//         var blocks = data.items;\n//\n//         /**\n//          * Sequence of one-by-one blocks appending\n//          * Uses to save blocks order after async-handler\n//          */\n//         var nodeSequence = Promise.resolve();\n//\n//         for (var index = 0; index < blocks.length ; index++ ) {\n//\n//             /** Add node to sequence at specified index */\n//             editor.renderer.appendNodeAtIndex(nodeSequence, blocks, index);\n//\n//         }\n//\n//     };\n//\n//     /**\n//      * Append node at specified index\n//      */\n//     renderer.appendNodeAtIndex = function (nodeSequence, blocks, index) {\n//\n//         /** We need to append node to sequence */\n//         nodeSequence\n//\n//         /** first, get node async-aware */\n//             .then(function () {\n//\n//                 return editor.renderer.getNodeAsync(blocks, index);\n//\n//             })\n//\n//             /**\n//              * second, compose editor-block from JSON object\n//              */\n//             .then(editor.renderer.createBlockFromData)\n//\n//             /**\n//              * now insert block to redactor\n//              */\n//             .then(function (blockData) {\n//\n//                 /**\n//                  * blockData has 'block', 'type' and 'stretched' information\n//                  */\n//                 editor.content.insertBlock(blockData);\n//\n//                 /** Pass created block to next step */\n//                 return blockData.block;\n//\n//             })\n//\n//             /** Log if something wrong with node */\n//             .catch(function (error) {\n//\n//                 editor.core.log('Node skipped while parsing because %o', 'error', error);\n//\n//             });\n//\n//     };\n//\n//     /**\n//      * Asynchronously returns block data from blocksList by index\n//      * @return Promise to node\n//      */\n//     renderer.getNodeAsync = function (blocksList, index) {\n//\n//         return Promise.resolve().then(function () {\n//\n//             return {\n//                 tool : blocksList[index],\n//                 position : index\n//             };\n//\n//         });\n//\n//     };\n//\n//     /**\n//      * Creates editor block by JSON-data\n//      *\n//      * @uses render method of each plugin\n//      *\n//      * @param {Object} toolData.tool\n//      *                              { header : {\n//      *                                                text: '',\n//      *                                                type: 'H3', ...\n//      *                                            }\n//      *                               }\n//      * @param {Number} toolData.position - index in input-blocks array\n//      * @return {Object} with type and Element\n//      */\n//     renderer.createBlockFromData = function ( toolData ) {\n//\n//         /** New parser */\n//         var block,\n//             tool = toolData.tool,\n//             pluginName = tool.type;\n//\n//         /** Get first key of object that stores plugin name */\n//         // for (var pluginName in blockData) break;\n//\n//         /** Check for plugin existance */\n//         if (!editor.tools[pluginName]) {\n//\n//             throw Error(`Plugin «${pluginName}» not found`);\n//\n//         }\n//\n//         /** Check for plugin having render method */\n//         if (typeof editor.tools[pluginName].render != 'function') {\n//\n//             throw Error(`Plugin «${pluginName}» must have «render» method`);\n//\n//         }\n//\n//         if ( editor.tools[pluginName].available === false ) {\n//\n//             block = editor.draw.unavailableBlock();\n//\n//             block.innerHTML = editor.tools[pluginName].loadingMessage;\n//\n//             /**\n//             * Saver will extract data from initial block data by position in array\n//             */\n//             block.dataset.inputPosition = toolData.position;\n//\n//         } else {\n//\n//             /** New Parser */\n//             block = editor.tools[pluginName].render(tool.data);\n//\n//         }\n//\n//         /** is first-level block stretched */\n//         var stretched = editor.tools[pluginName].isStretched || false;\n//\n//         /** Retrun type and block */\n//         return {\n//             type      : pluginName,\n//             block     : block,\n//             stretched : stretched\n//         };\n//\n//     };\n//\n//     return renderer;\n//\n// })({});\n\n\n// WEBPACK FOOTER //\n// ./src/components/modules/renderer.js","/**\n * DOM manipulations\n */\nimport $ from '../dom';\n\n/**\n *\n * «Toolbar» is the node that moves up/down over current block\n *\n *  ______________________________________ Toolbar ____________________________________________\n * |                                                                                           |\n * |  ..................... Content ....................   ......... Block Actions ..........  |\n * |  .                                                .   .                                .  |\n * |  .                                                .   . [Open Settings] [Remove Block] .  |\n * |  .  [Plus Button]  [Toolbox: {Tool1}, {Tool2}]    .   .                                .  |\n * |  .                                                .   .        [Settings Panel]        .  |\n * |  ..................................................   ..................................  |\n * |                                                                                           |\n * |___________________________________________________________________________________________|\n *\n *\n * Toolbox — its an Element contains tools buttons. Can be shown by Plus Button.\n *\n *  _______________ Toolbox _______________\n * |                                       |\n * | [Header] [Image] [List] [Quote] ...   |\n * |_______________________________________|\n *\n *\n * Settings Panel — is an Element with block settings:\n *\n *   ____ Settings Panel ____\n *  | ...................... |\n *  | .   Tool Settings    . |\n *  | ...................... |\n *  | .  Default Settings  . |\n *  | ...................... |\n *  |________________________|\n *\n *\n * @class\n * @classdesc Toolbar module\n *\n * @property {Object} nodes\n * @property {Element} nodes.wrapper        - Toolbar main element\n * @property {Element} nodes.content        - Zone with Plus button and toolbox.\n * @property {Element} nodes.actions        - Zone with Block Settings and Remove Button\n * @property {Element} nodes.plusButton     - Button that opens or closes Toolbox\n * @property {Element} nodes.toolbox        - Container for tools\n * @property {Element} nodes.settingsToggler - open/close Settings Panel button\n * @property {Element} nodes.removeBlockButton - Remove Block button\n * @property {Element} nodes.settings          - Settings Panel\n * @property {Element} nodes.pluginSettings    - Plugin Settings section of Settings Panel\n * @property {Element} nodes.defaultSettings   - Default Settings section of Settings Panel\n */\nclass Toolbar {\n\n    /**\n     * @constructor\n     */\n    constructor() {\n\n        this.Editor = null;\n\n        this.nodes = {\n            wrapper : null,\n            content : null,\n            actions : null,\n\n            // Content Zone\n            plusButton : null,\n            toolbox : null,\n\n            // Actions Zone\n            settingsToggler : null,\n            removeBlockButton: null,\n            settings: null,\n\n            // Settings Zone: Plugin Settings and Default Settings\n            pluginSettings: null,\n            defaultSettings: null,\n        };\n\n        this.CSS = {\n            toolbar: 'ce-toolbar',\n            content: 'ce-toolbar__content',\n            actions: 'ce-toolbar__actions',\n\n            // Content Zone\n            toolbox: 'ce-toolbar__toolbox',\n            plusButton: 'ce-toolbar__plus',\n\n            // Actions Zone\n            settingsToggler: 'ce-toolbar__settings-btn',\n            removeBlockButton: 'ce-toolbar__remove-btn',\n\n            // Settings Panel\n            settings: 'ce-settings',\n            defaultSettings: 'ce-settings_default',\n            pluginSettings: 'ce-settings_plugin',\n        };\n\n    }\n\n    /**\n     * Editor modules setter\n     * @param {object} Editor - available editor modules\n     */\n    set state(Editor) {\n\n        this.Editor = Editor;\n\n    }\n\n    /**\n     * Makes toolbar\n     */\n    make() {\n\n        this.nodes.wrapper = $.make('div', this.CSS.toolbar);\n\n        /**\n         * Make Content Zone and Actions Zone\n         */\n        ['content',  'actions'].forEach( el => {\n\n            this.nodes[el] = $.make('div', this.CSS[el]);\n            $.append(this.nodes.wrapper, this.nodes[el]);\n\n        });\n\n\n        /**\n         * Fill Content Zone:\n         *  - Plus Button\n         *  - Toolbox\n         */\n        ['plusButton', 'toolbox'].forEach( el => {\n\n            this.nodes[el] = $.make('div', this.CSS[el]);\n            $.append(this.nodes.content, this.nodes[el]);\n\n        });\n\n        /**\n         * Fill Actions Zone:\n         *  - Settings Toggler\n         *  - Remove Block Button\n         *  - Settings Panel\n         */\n        this.nodes.settingsToggler  = $.make('span', this.CSS.settingsToggler);\n        this.nodes.removeBlockButton = this.makeRemoveBlockButton();\n\n        $.append(this.nodes.actions, [this.nodes.settingsToggler, this.nodes.removeBlockButton]);\n\n        /**\n         * Make and append Settings Panel\n         */\n        this.makeBlockSettingsPanel();\n\n        /**\n         * Append toolbar to the Editor\n         */\n        $.append(this.Editor.UI.nodes.wrapper, this.nodes.wrapper);\n\n    }\n\n    /**\n     * Panel with block settings with 2 sections:\n     *\n     * @return {Element}\n     */\n    makeBlockSettingsPanel() {\n\n        this.nodes.settings = $.make('div', this.CSS.settings);\n\n        this.nodes.pluginSettings = $.make('div', this.CSS.pluginSettings);\n        this.nodes.defaultSettings = $.make('div', this.CSS.defaultSettings);\n\n        $.append(this.nodes.settings, [this.nodes.pluginSettings, this.nodes.defaultSettings]);\n        $.append(this.nodes.actions, this.nodes.settings);\n\n    }\n\n    /**\n     * Makes Remove Block button, and confirmation panel\n     * @return {Element} wrapper with button and panel\n     */\n    makeRemoveBlockButton() {\n\n        /**\n         * @todo  add confirmation panel and handlers\n         * @see  {@link settings#makeRemoveBlockButton}\n         */\n        return $.make('span', this.CSS.removeBlockButton);\n\n    }\n\n}\n\nmodule.exports = Toolbar;\n\n\n// WEBPACK FOOTER //\n// ./src/components/modules/toolbar.js","/**\n * Codex Editor toolbar module\n *\n * Contains:\n *  - Inline toolbox\n *  - Toolbox within plus button\n *  - Settings section\n *\n * @author Codex Team\n * @version 1.0\n */\n\nmodule.exports = (function (toolbar) {\n\n    let editor = codex.editor;\n\n    toolbar.settings = require('./settings');\n    toolbar.inline   = require('./inline');\n    toolbar.toolbox  = require('./toolbox');\n\n    /**\n     * Margin between focused node and toolbar\n     */\n    toolbar.defaultToolbarHeight = 49;\n\n    toolbar.defaultOffset = 34;\n\n    toolbar.opened = false;\n\n    toolbar.current = null;\n\n    /**\n     * @protected\n     */\n    toolbar.open = function () {\n\n        if (editor.hideToolbar) {\n\n            return;\n\n        }\n\n        let toolType = editor.content.currentNode.dataset.tool;\n\n        if (!editor.tools[toolType] || !editor.tools[toolType].makeSettings ) {\n\n            editor.nodes.showSettingsButton.classList.add('hide');\n\n        } else {\n\n            editor.nodes.showSettingsButton.classList.remove('hide');\n\n        }\n\n        editor.nodes.toolbar.classList.add('opened');\n        this.opened = true;\n\n    };\n\n    /**\n     * @protected\n     */\n    toolbar.close = function () {\n\n        editor.nodes.toolbar.classList.remove('opened');\n\n        toolbar.opened  = false;\n        toolbar.current = null;\n\n        for (var button in editor.nodes.toolbarButtons) {\n\n            editor.nodes.toolbarButtons[button].classList.remove('selected');\n\n        }\n\n        /** Close toolbox when toolbar is not displayed */\n        editor.toolbar.toolbox.close();\n        editor.toolbar.settings.close();\n\n    };\n\n    toolbar.toggle = function () {\n\n        if ( !this.opened ) {\n\n            this.open();\n\n        } else {\n\n            this.close();\n\n        }\n\n    };\n\n    toolbar.hidePlusButton = function () {\n\n        editor.nodes.plusButton.classList.add('hide');\n\n    };\n\n    toolbar.showPlusButton = function () {\n\n        editor.nodes.plusButton.classList.remove('hide');\n\n    };\n\n    /**\n     * Moving toolbar to the specified node\n     */\n    toolbar.move = function () {\n\n        /** Close Toolbox when we move toolbar */\n        editor.toolbar.toolbox.close();\n\n        if (!editor.content.currentNode) {\n\n            return;\n\n        }\n\n        var newYCoordinate = editor.content.currentNode.offsetTop - (editor.toolbar.defaultToolbarHeight / 2) + editor.toolbar.defaultOffset;\n\n        editor.nodes.toolbar.style.transform = `translate3D(0, ${Math.floor(newYCoordinate)}px, 0)`;\n\n        /** Close trash actions */\n        editor.toolbar.settings.hideRemoveActions();\n\n    };\n\n    return toolbar;\n\n})({});\n\n\n\n// WEBPACK FOOTER //\n// ./src/components/modules/toolbar/toolbar.js","/**\n * @module Codex Editor Tools Submodule\n *\n * Creates Instances from Plugins and binds external config to the instances\n */\n\n/**\n * Load user defined tools\n * Tools must contain the following important objects:\n *\n * @typedef {Object} ToolsConfig\n * @property {String} iconClassname - this a icon in toolbar\n * @property {Boolean} displayInToolbox - will be displayed in toolbox. Default value is TRUE\n * @property {Boolean} enableLineBreaks - inserts new block or break lines. Default value is FALSE\n */\n\n/**\n * @todo update according to current API\n *\n * @typedef {Object} Tool\n * @property render\n * @property save\n * @property settings\n * @property validate\n */\n\n/**\n * Class properties:\n *\n * @property {String} name - name of this module\n * @property {Object[]} toolInstances - list of tool instances\n * @property {Tools[]} available - available Tools\n * @property {Tools[]} unavailable - unavailable Tools\n * @property {Object} toolsClasses - all classes\n * @property {EditorConfig} config - Editor config\n */\nlet util = require('../util');\n\nclass Tools {\n\n    /**\n     * Returns available Tools\n     * @return {Tool[]}\n     */\n    get available() {\n\n        return this.toolsAvailable;\n\n    }\n\n    /**\n     * Returns unavailable Tools\n     * @return {Tool[]}\n     */\n    get unavailable() {\n\n        return this.toolsUnavailable;\n\n    }\n\n    /**\n     * @param Editor\n     * @param Editor.modules {@link CodexEditor#moduleInstances}\n     * @param Editor.config {@link CodexEditor#configuration}\n     */\n    set state(Editor) {\n\n        this.Editor = Editor;\n\n    }\n\n    /**\n     * If config wasn't passed by user\n     * @return {ToolsConfig}\n     */\n    get defaultConfig() {\n\n        return {\n            iconClassName : 'default-icon',\n            displayInToolbox : false,\n            enableLineBreaks : false\n        };\n\n    }\n\n    /**\n     * @constructor\n     *\n     * @param {ToolsConfig} config\n     */\n    constructor({ config }) {\n\n        this.config = config;\n\n        this.toolClasses = {};\n        this.toolsAvailable = {};\n        this.toolsUnavailable = {};\n\n    }\n\n    /**\n     * Creates instances via passed or default configuration\n     * @return {boolean}\n     */\n    prepare() {\n\n        if (!this.config.hasOwnProperty('tools')) {\n\n            return Promise.reject(\"Can't start without tools\");\n\n        }\n\n        for(let toolName in this.config.tools) {\n\n            this.toolClasses[toolName] = this.config.tools[toolName];\n\n        }\n\n        /**\n         * getting classes that has prepare method\n         */\n        let sequenceData = this.getListOfPrepareFunctions();\n\n        /**\n         * if sequence data contains nothing then resolve current chain and run other module prepare\n         */\n        if (sequenceData.length === 0) {\n\n            return Promise.resolve();\n\n        }\n\n        /**\n         * to see how it works {@link Util#sequence}\n         */\n        return util.sequence(sequenceData, (data) => {\n\n            this.success(data);\n\n        }, (data) => {\n\n            this.fallback(data);\n\n        });\n\n    }\n\n    /**\n     * Binds prepare function of plugins with user or default config\n     * @return {Array} list of functions that needs to be fired sequently\n     */\n    getListOfPrepareFunctions() {\n\n        let toolPreparationList = [];\n\n        for(let toolName in this.toolClasses) {\n\n            let toolClass = this.toolClasses[toolName];\n\n            if (typeof toolClass.prepare === 'function') {\n\n                toolPreparationList.push({\n                    function : toolClass.prepare,\n                    data : {\n                        toolName\n                    }\n                });\n\n            }\n\n        }\n\n        return toolPreparationList;\n\n    }\n\n    /**\n     * @param {ChainData.data} data - append tool to available list\n     */\n    success(data) {\n\n        this.toolsAvailable[data.toolName] = this.toolClasses[data.toolName];\n\n    }\n\n    /**\n     * @param {ChainData.data} data - append tool to unavailable list\n     */\n    fallback(data) {\n\n        this.toolsUnavailable[data.toolName] = this.toolClasses[data.toolName];\n\n    }\n\n    /**\n     * Returns all tools\n     * @return {Array}\n     */\n    getTools() {\n\n        return this.toolInstances;\n\n    }\n\n    /**\n     * Return tool`a instance\n     *\n     * @param {String} tool — tool name\n     * @param {Object} data — initial data\n     *\n     * @todo throw exceptions if tool doesnt exist\n     *\n     */\n    construct(tool, data) {\n\n        let plugin = this.toolClasses[tool],\n            config = this.config.toolsConfig[tool];\n\n        let instance = new plugin(data, config);\n\n        return instance;\n\n    }\n\n}\n\nmodule.exports = Tools;\n\n\n\n// WEBPACK FOOTER //\n// ./src/components/modules/tools.js","/**\n * Module UI\n *\n * @type {UI}\n */\n// let className = {\n\n/**\n     * @const {string} BLOCK_CLASSNAME - redactor blocks name\n     */\n// BLOCK_CLASSNAME : 'ce-block',\n\n/**\n     * @const {String} wrapper for plugins content\n     */\n// BLOCK_CONTENT : 'ce-block__content',\n\n/**\n     * @const {String} BLOCK_STRETCHED - makes block stretched\n     */\n// BLOCK_STRETCHED : 'ce-block--stretched',\n\n/**\n     * @const {String} BLOCK_HIGHLIGHTED - adds background\n     */\n// BLOCK_HIGHLIGHTED : 'ce-block--focused',\n\n/**\n     * @const {String} - for all default settings\n     */\n// SETTINGS_ITEM : 'ce-settings__item'\n// };\n\nlet CSS = {\n    editorWrapper : 'codex-editor',\n    editorZone    : 'ce-redactor'\n};\n\n\nimport $ from '../dom';\n\n\n/**\n * @class\n *\n * @classdesc Makes CodeX Editor UI:\n *                <codex-editor>\n *                    <ce-redactor />\n *                    <ce-toolbar />\n *                    <ce-inline-toolbar />\n *                </codex-editor>\n *\n * @property {EditorConfig} config   - editor configuration {@link CodexEditor#configuration}\n * @property {Object} Editor         - available editor modules {@link CodexEditor#moduleInstances}\n * @property {Object} nodes          -\n * @property {Element} nodes.wrapper  - element where we need to append redactor\n * @property {Element} nodes.wrapper  - <codex-editor>\n * @property {Element} nodes.redactor - <ce-redactor>\n */\nclass UI {\n\n    /**\n     * @constructor\n     *\n     * @param  {EditorConfig} config\n     */\n    constructor({ config }) {\n\n        this.config = config;\n        this.Editor = null;\n\n        this.nodes = {\n            holder: null,\n            wrapper: null,\n            redactor: null\n        };\n\n    }\n\n\n    /**\n     * Editor modules setter\n     * @param {object} Editor - available editor modules\n     */\n    set state(Editor) {\n\n        this.Editor = Editor;\n\n    }\n\n    /**\n     * @protected\n     *\n     * Making main interface\n     */\n    prepare() {\n\n        return new Promise( (resolve, reject) => {\n\n            /**\n             * Element where we need to append CodeX Editor\n             * @type {Element}\n             */\n            this.nodes.holder = document.getElementById(this.config.holderId);\n\n            if (!this.nodes.holder) {\n\n                reject(Error(\"Holder wasn't found by ID: #\" + this.config.holderId));\n                return;\n\n            }\n\n            /**\n             * Create and save main UI elements\n             */\n            this.nodes.wrapper  = $.make('div', CSS.editorWrapper);\n            this.nodes.redactor = $.make('div', CSS.editorZone);\n\n            this.nodes.wrapper.appendChild(this.nodes.redactor);\n            this.nodes.holder.appendChild(this.nodes.wrapper);\n\n            /**\n             * Make toolbar\n             */\n            this.Editor.Toolbar.make();\n\n            /**\n             * Load and append CSS\n             */\n            this.loadStyles();\n\n            resolve();\n\n        })\n\n        /** Add toolbox tools */\n        // .then(addTools_)\n\n        /** Make container for inline toolbar */\n        // .then(makeInlineToolbar_)\n\n        /** Add inline toolbar tools */\n        // .then(addInlineToolbarTools_)\n\n        /** Draw wrapper for notifications */\n        // .then(makeNotificationHolder_)\n\n        /** Add eventlisteners to redactor elements */\n        // .then(bindEvents_)\n\n            .catch(e => {\n\n                console.error(e);\n\n            // editor.core.log(\"Can't draw editor interface\");\n\n            });\n\n    }\n\n    loadStyles() {\n\n        /**\n         * Load CSS\n         */\n        let styles = require('../../styles/main.css');\n\n        /**\n         * Make tag\n         */\n        let tag = $.make('style', null, {\n            textContent: styles.toString()\n        });\n\n        /**\n         * Append styles\n         */\n        $.append(document.head, tag);\n\n    }\n\n}\n\nmodule.exports = UI;\n\n\n// /**\n//  * Codex Editor UI module\n//  *\n//  * @author Codex Team\n//  * @version 1.2.0\n//  */\n//\n// module.exports = (function (ui) {\n//\n//     let editor = codex.editor;\n//\n//     /**\n//      * Basic editor classnames\n//      */\n//     ui.prepare = function () {\n//\n\n//\n//     };\n//\n//     /** Draw notifications holder */\n//     var makeNotificationHolder_ = function () {\n//\n//         /** Append block with notifications to the document */\n//         editor.nodes.notifications = editor.notifications.createHolder();\n//\n//     };\n//\n//     /**\n//      * @private\n//      * Append tools passed in editor.tools\n//      */\n//     var addTools_ = function () {\n//\n//         var tool,\n//             toolName,\n//             toolButton;\n//\n//         for ( toolName in editor.settings.tools ) {\n//\n//             tool = editor.settings.tools[toolName];\n//\n//             editor.tools[toolName] = tool;\n//\n//             if (!tool.iconClassname && tool.displayInToolbox) {\n//\n//                 editor.core.log('Toolbar icon classname missed. Tool %o skipped', 'warn', toolName);\n//                 continue;\n//\n//             }\n//\n//             if (typeof tool.render != 'function') {\n//\n//                 editor.core.log('render method missed. Tool %o skipped', 'warn', toolName);\n//                 continue;\n//\n//             }\n//\n//             if (!tool.displayInToolbox) {\n//\n//                 continue;\n//\n//             } else {\n//\n//                 /** if tools is for toolbox */\n//                 toolButton = editor.draw.toolbarButton(toolName, tool.iconClassname);\n//\n//                 editor.nodes.toolbox.appendChild(toolButton);\n//\n//                 editor.nodes.toolbarButtons[toolName] = toolButton;\n//\n//             }\n//\n//         }\n//\n//     };\n//\n//     var addInlineToolbarTools_ = function () {\n//\n//         var tools = {\n//\n//             bold: {\n//                 icon    : 'ce-icon-bold',\n//                 command : 'bold'\n//             },\n//\n//             italic: {\n//                 icon    : 'ce-icon-italic',\n//                 command : 'italic'\n//             },\n//\n//             link: {\n//                 icon    : 'ce-icon-link',\n//                 command : 'createLink'\n//             }\n//         };\n//\n//         var toolButton,\n//             tool;\n//\n//         for(var name in tools) {\n//\n//             tool = tools[name];\n//\n//             toolButton = editor.draw.toolbarButtonInline(name, tool.icon);\n//\n//             editor.nodes.inlineToolbar.buttons.appendChild(toolButton);\n//             /**\n//              * Add callbacks to this buttons\n//              */\n//             editor.ui.setInlineToolbarButtonBehaviour(toolButton, tool.command);\n//\n//         }\n//\n//     };\n//\n//     /**\n//      * @private\n//      * Bind editor UI events\n//      */\n//     var bindEvents_ = function () {\n//\n//         editor.core.log('ui.bindEvents fired', 'info');\n//\n//         // window.addEventListener('error', function (errorMsg, url, lineNumber) {\n//         //     editor.notifications.errorThrown(errorMsg, event);\n//         // }, false );\n//\n//         /** All keydowns on Document */\n//         editor.listeners.add(document, 'keydown', editor.callback.globalKeydown, false);\n//\n//         /** All keydowns on Redactor zone */\n//         editor.listeners.add(editor.nodes.redactor, 'keydown', editor.callback.redactorKeyDown, false);\n//\n//         /** All keydowns on Document */\n//         editor.listeners.add(document, 'keyup', editor.callback.globalKeyup, false );\n//\n//         /**\n//          * Mouse click to radactor\n//          */\n//         editor.listeners.add(editor.nodes.redactor, 'click', editor.callback.redactorClicked, false );\n//\n//         /**\n//          * Clicks to the Plus button\n//          */\n//         editor.listeners.add(editor.nodes.plusButton, 'click', editor.callback.plusButtonClicked, false);\n//\n//         /**\n//          * Clicks to SETTINGS button in toolbar\n//          */\n//         editor.listeners.add(editor.nodes.showSettingsButton, 'click', editor.callback.showSettingsButtonClicked, false );\n//\n//         /** Bind click listeners on toolbar buttons */\n//         for (var button in editor.nodes.toolbarButtons) {\n//\n//             editor.listeners.add(editor.nodes.toolbarButtons[button], 'click', editor.callback.toolbarButtonClicked, false);\n//\n//         }\n//\n//     };\n//\n//     ui.addBlockHandlers = function (block) {\n//\n//         if (!block) return;\n//\n//         /**\n//          * Block keydowns\n//          */\n//         editor.listeners.add(block, 'keydown', editor.callback.blockKeydown, false);\n//\n//         /**\n//          * Pasting content from another source\n//          * We have two type of sanitization\n//          * First - uses deep-first search algorithm to get sub nodes,\n//          * sanitizes whole Block_content and replaces cleared nodes\n//          * This method is deprecated\n//          * Method is used in editor.callback.blockPaste(event)\n//          *\n//          * Secont - uses Mutation observer.\n//          * Observer \"observe\" DOM changes and send changings to callback.\n//          * Callback gets changed node, not whole Block_content.\n//          * Inserted or changed node, which we've gotten have been cleared and replaced with diry node\n//          *\n//          * Method is used in editor.callback.blockPasteViaSanitize(event)\n//          *\n//          * @uses html-janitor\n//          * @example editor.callback.blockPasteViaSanitize(event), the second method.\n//          *\n//          */\n//         editor.listeners.add(block, 'paste', editor.paste.blockPasteCallback, false);\n//\n//         /**\n//          * Show inline toolbar for selected text\n//          */\n//         editor.listeners.add(block, 'mouseup', editor.toolbar.inline.show, false);\n//         editor.listeners.add(block, 'keyup', editor.toolbar.inline.show, false);\n//\n//     };\n//\n//     /** getting all contenteditable elements */\n//     ui.saveInputs = function () {\n//\n//         var redactor = editor.nodes.redactor;\n//\n//         editor.state.inputs = [];\n//\n//         /** Save all inputs in global variable state */\n//         var inputs = redactor.querySelectorAll('[contenteditable], input, textarea');\n//\n//         Array.prototype.map.call(inputs, function (current) {\n//\n//             if (!current.type || current.type == 'text' || current.type == 'textarea') {\n//\n//                 editor.state.inputs.push(current);\n//\n//             }\n//\n//         });\n//\n//     };\n//\n//     /**\n//      * Adds first initial block on empty redactor\n//      */\n//     ui.addInitialBlock = function () {\n//\n//         var initialBlockType = editor.settings.initialBlockPlugin,\n//             initialBlock;\n//\n//         if ( !editor.tools[initialBlockType] ) {\n//\n//             editor.core.log('Plugin %o was not implemented and can\\'t be used as initial block', 'warn', initialBlockType);\n//             return;\n//\n//         }\n//\n//         initialBlock = editor.tools[initialBlockType].render();\n//\n//         initialBlock.setAttribute('data-placeholder', editor.settings.placeholder);\n//\n//         editor.content.insertBlock({\n//             type  : initialBlockType,\n//             block : initialBlock\n//         });\n//\n//         editor.content.workingNodeChanged(initialBlock);\n//\n//     };\n//\n//     ui.setInlineToolbarButtonBehaviour = function (button, type) {\n//\n//         editor.listeners.add(button, 'mousedown', function (event) {\n//\n//             editor.toolbar.inline.toolClicked(event, type);\n//\n//         }, false);\n//\n//     };\n//\n//     return ui;\n//\n// })({});\n\n\n\n// WEBPACK FOOTER //\n// ./src/components/modules/ui.js","/**\n * Codex Editor\n *\n * Short Description (눈_눈;)\n * @version 2.0.0\n *\n * How to start?\n * Example:\n *           new CodexEditor({\n *                holderId : 'codex-editor',\n *                initialBlock : 'paragraph',\n *                placeholder : 'Write your story....',\n *                tools: {\n *                    quote: Quote,\n *                    anotherTool : AnotherTool\n *                },\n *                toolsConfig: {\n *                     quote: {\n *                        iconClassname : 'quote-icon',\n *                        displayInToolbox : true,\n *                        enableLineBreaks : true\n *                     },\n *                     anotherTool: {\n *                        iconClassname : 'tool-icon'\n *                     }\n *                 }\n *            });\n *\n * - tools is an object: {\n *       pluginName: PluginClass,\n *       .....\n *   }\n * - toolsConfig is an additional configuration that uses Codex Editor API\n *      iconClassname - CSS classname of toolbox icon\n *      displayInToolbox - if you want to see your Tool in toolbox hided in \"plus\" button, than set \"True\". By default : \"False\"\n *      enableLineBreaks - by default enter creates new block that set as initialblock, but if you set this property \"True\", enter will break the lines in current block\n *\n * @author CodeX-Team <https://ifmo.su>\n *\n */\n\n/**\n * @typedef {CodexEditor} CodexEditor - editor class\n */\n\n/**\n * @typedef {Object} EditorConfig\n * @property {String} holderId - Element to append Editor\n * ...\n */\n\n'use strict';\n\n/**\n * Require Editor modules places in components/modules dir\n */\n// eslint-disable-next-line\nlet modules = editorModules.map( module => {\n\n    return require('./components/modules/' + module );\n\n});\n\n/**\n * @class\n *\n * @classdesc CodeX Editor base class\n *\n * @property this.config - all settings\n * @property this.moduleInstances - constructed editor components\n *\n * @type {CodexEditor}\n */\nmodule.exports = class CodexEditor {\n\n    /** Editor version */\n    static get version() {\n\n        return VERSION;\n\n    }\n\n    /**\n     * @param {EditorConfig} config - user configuration\n     *\n     */\n    constructor(config) {\n\n        /**\n         * Configuration object\n         */\n        this.config = {};\n\n        /**\n         * Editor Components\n         */\n        this.moduleInstances = {};\n\n        Promise.resolve()\n            .then(() => {\n\n                this.configuration = config;\n\n            })\n            .then(() => this.init())\n            .then(() => this.start())\n            .then(() => {\n\n                console.log('CodeX Editor is ready');\n\n            })\n            .catch(error => {\n\n                console.log('CodeX Editor does not ready beecause of %o', error);\n\n            });\n\n    }\n\n    /**\n     * Setting for configuration\n     * @param {Object} config\n     */\n    set configuration(config = {}) {\n\n        this.config.holderId = config.holderId;\n        this.config.placeholder = config.placeholder || 'write your story...';\n        this.config.sanitizer = config.sanitizer || {\n            p: true,\n            b: true,\n            a: true\n        };\n\n        this.config.hideToolbar = config.hideToolbar ? config.hideToolbar : false;\n        this.config.tools = config.tools || {};\n        this.config.toolsConfig = config.toolsConfig || {};\n\n    }\n\n    /**\n     * Returns private property\n     * @returns {{}|*}\n     */\n    get configuration() {\n\n        return this.config;\n\n    }\n\n    /**\n     * Initializes modules:\n     *  - make and save instances\n     *  - configure\n     */\n    init() {\n\n        /**\n         * Make modules instances and save it to the @property this.moduleInstances\n         */\n        this.constructModules();\n\n        /**\n         * Modules configuration\n         */\n        this.configureModules();\n\n    }\n\n    /**\n     * Make modules instances and save it to the @property this.moduleInstances\n     */\n    constructModules() {\n\n        modules.forEach( Module => {\n\n            try {\n\n                /**\n                 * We use class name provided by displayName property\n                 *\n                 * On build, Babel will transform all Classes to the Functions so, name will always be 'Function'\n                 * To prevent this, we use 'babel-plugin-class-display-name' plugin\n                 * @see  https://www.npmjs.com/package/babel-plugin-class-display-name\n                 */\n\n                this.moduleInstances[Module.displayName] = new Module({\n                    config : this.configuration\n                });\n\n            } catch ( e ) {\n\n                console.log('Module %o skipped because %o', Module, e);\n\n            }\n\n        });\n\n    }\n\n    /**\n     * Modules instances configuration:\n     *  - pass other modules to the 'state' property\n     *  - ...\n     */\n    configureModules() {\n\n        for(let name in this.moduleInstances) {\n\n            /**\n             * Module does not need self-instance\n             */\n            this.moduleInstances[name].state = this.getModulesDiff( name );\n\n        }\n\n    }\n\n    /**\n     * Return modules without passed name\n     */\n    getModulesDiff( name ) {\n\n        let diff = {};\n\n        for(let moduleName in this.moduleInstances) {\n\n            /**\n             * Skip module with passed name\n             */\n            if (moduleName === name) {\n\n                continue;\n\n            }\n            diff[moduleName] = this.moduleInstances[moduleName];\n\n        }\n\n        return diff;\n\n    }\n\n    /**\n     * Start Editor!\n     *\n     * @return {Promise}\n     */\n    start() {\n\n        let prepareDecorator = module => module.prepare();\n\n        return Promise.resolve()\n            .then(prepareDecorator(this.moduleInstances.UI))\n            .then(prepareDecorator(this.moduleInstances.Tools))\n            .then(prepareDecorator(this.moduleInstances.BlockManager))\n\n            .catch(function (error) {\n\n                console.log('Error occured', error);\n\n            });\n\n    }\n\n};\n\n// module.exports = (function (editor) {\n//\n//     'use strict';\n//\n//     editor.version = VERSION;\n//     editor.scriptPrefix = 'cdx-script-';\n//\n//     var init = function () {\n//\n//         editor.core          = require('./modules/core');\n//         editor.tools         = require('./modules/tools');\n//         editor.ui            = require('./modules/ui');\n//         editor.transport     = require('./modules/transport');\n//         editor.renderer      = require('./modules/renderer');\n//         editor.saver         = require('./modules/saver');\n//         editor.content       = require('./modules/content');\n//         editor.toolbar       = require('./modules/toolbar/toolbar');\n//         editor.callback      = require('./modules/callbacks');\n//         editor.draw          = require('./modules/draw');\n//         editor.caret         = require('./modules/caret');\n//         editor.notifications = require('./modules/notifications');\n//         editor.parser        = require('./modules/parser');\n//         editor.sanitizer     = require('./modules/sanitizer');\n//         editor.listeners     = require('./modules/listeners');\n//         editor.destroyer     = require('./modules/destroyer');\n//         editor.paste         = require('./modules/paste');\n//\n//     };\n//\n//     /**\n//      * @public\n//      * holds initial settings\n//      */\n//     editor.settings = {\n//         tools     : ['paragraph', 'header', 'picture', 'list', 'quote', 'code', 'twitter', 'instagram', 'smile'],\n//         holderId  : 'codex-editor',\n//\n//         // Type of block showing on empty editor\n//         initialBlockPlugin: 'paragraph'\n//     };\n//\n//     /**\n//      * public\n//      *\n//      * Static nodes\n//      */\n//     editor.nodes = {\n//         holder            : null,\n//         wrapper           : null,\n//         toolbar           : null,\n//         inlineToolbar     : {\n//             wrapper : null,\n//             buttons : null,\n//             actions : null\n//         },\n//         toolbox           : null,\n//         notifications     : null,\n//         plusButton        : null,\n//         showSettingsButton: null,\n//         showTrashButton   : null,\n//         blockSettings     : null,\n//         pluginSettings    : null,\n//         defaultSettings   : null,\n//         toolbarButtons    : {}, // { type : DomEl, ... }\n//         redactor          : null\n//     };\n//\n//     /**\n//      * @public\n//      *\n//      * Output state\n//      */\n//     editor.state = {\n//         jsonOutput  : [],\n//         blocks      : [],\n//         inputs      : []\n//     };\n//\n//     /**\n//     * @public\n//     * Editor plugins\n//     */\n//     editor.tools = {};\n//\n//     editor.start = function (userSettings) {\n//\n//         init();\n//\n//         editor.core.prepare(userSettings)\n//\n//         // If all ok, make UI, bind events and parse initial-content\n//             .then(editor.ui.prepare)\n//             .then(editor.tools.prepare)\n//             .then(editor.sanitizer.prepare)\n//             .then(editor.paste.prepare)\n//             .then(editor.transport.prepare)\n//             .then(editor.renderer.makeBlocksFromData)\n//             .then(editor.ui.saveInputs)\n//             .catch(function (error) {\n//\n//                 editor.core.log('Initialization failed with error: %o', 'warn', error);\n//\n//             });\n//\n//     };\n//\n//     return editor;\n//\n// })({});\n\n\n\n// WEBPACK FOOTER //\n// ./src/codex.js","var map = {\n\t\"./_anchors\": 5,\n\t\"./_anchors.js\": 5,\n\t\"./_callbacks\": 6,\n\t\"./_callbacks.js\": 6,\n\t\"./_caret\": 7,\n\t\"./_caret.js\": 7,\n\t\"./_content\": 8,\n\t\"./_content.js\": 8,\n\t\"./_destroyer\": 9,\n\t\"./_destroyer.js\": 9,\n\t\"./_listeners\": 10,\n\t\"./_listeners.js\": 10,\n\t\"./_notifications\": 11,\n\t\"./_notifications.js\": 11,\n\t\"./_parser\": 12,\n\t\"./_parser.js\": 12,\n\t\"./_paste\": 13,\n\t\"./_paste.js\": 13,\n\t\"./_sanitizer\": 14,\n\t\"./_sanitizer.js\": 14,\n\t\"./_saver\": 15,\n\t\"./_saver.js\": 15,\n\t\"./_transport\": 16,\n\t\"./_transport.js\": 16,\n\t\"./blockManager\": 17,\n\t\"./blockManager.js\": 17,\n\t\"./events\": 18,\n\t\"./events.js\": 18,\n\t\"./renderer\": 19,\n\t\"./renderer.js\": 19,\n\t\"./toolbar\": 20,\n\t\"./toolbar.js\": 20,\n\t\"./toolbar/inline\": 2,\n\t\"./toolbar/inline.js\": 2,\n\t\"./toolbar/settings\": 3,\n\t\"./toolbar/settings.js\": 3,\n\t\"./toolbar/toolbar\": 21,\n\t\"./toolbar/toolbar.js\": 21,\n\t\"./toolbar/toolbox\": 4,\n\t\"./toolbar/toolbox.js\": 4,\n\t\"./tools\": 22,\n\t\"./tools.js\": 22,\n\t\"./ui\": 23,\n\t\"./ui.js\": 23\n};\nfunction webpackContext(req) {\n\treturn __webpack_require__(webpackContextResolve(req));\n};\nfunction webpackContextResolve(req) {\n\tvar id = map[req];\n\tif(!(id + 1)) // check for number or string\n\t\tthrow new Error(\"Cannot find module '\" + req + \"'.\");\n\treturn id;\n};\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 25;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/components/modules ^\\.\\/.*$\n// module id = 25\n// module chunks = 0","(function (root, factory) {\n  if (typeof define === 'function' && define.amd) {\n    define('html-janitor', factory);\n  } else if (typeof exports === 'object') {\n    module.exports = factory();\n  } else {\n    root.HTMLJanitor = factory();\n  }\n}(this, function () {\n\n  /**\n   * @param {Object} config.tags Dictionary of allowed tags.\n   * @param {boolean} config.keepNestedBlockElements Default false.\n   */\n  function HTMLJanitor(config) {\n\n    var tagDefinitions = config['tags'];\n    var tags = Object.keys(tagDefinitions);\n\n    var validConfigValues = tags\n      .map(function(k) { return typeof tagDefinitions[k]; })\n      .every(function(type) { return type === 'object' || type === 'boolean' || type === 'function'; });\n\n    if(!validConfigValues) {\n      throw new Error(\"The configuration was invalid\");\n    }\n\n    this.config = config;\n  }\n\n  // TODO: not exhaustive?\n  var blockElementNames = ['P', 'LI', 'TD', 'TH', 'DIV', 'H1', 'H2', 'H3', 'H4', 'H5', 'H6', 'PRE'];\n  function isBlockElement(node) {\n    return blockElementNames.indexOf(node.nodeName) !== -1;\n  }\n\n  var inlineElementNames = ['A', 'B', 'STRONG', 'I', 'EM', 'SUB', 'SUP', 'U', 'STRIKE'];\n  function isInlineElement(node) {\n    return inlineElementNames.indexOf(node.nodeName) !== -1;\n  }\n\n  HTMLJanitor.prototype.clean = function (html) {\n    var sandbox = document.createElement('div');\n    sandbox.innerHTML = html;\n\n    this._sanitize(sandbox);\n\n    return sandbox.innerHTML;\n  };\n\n  HTMLJanitor.prototype._sanitize = function (parentNode) {\n    var treeWalker = createTreeWalker(parentNode);\n    var node = treeWalker.firstChild();\n    if (!node) { return; }\n\n    do {\n      // Ignore nodes that have already been sanitized\n      if (node._sanitized) {\n        continue;\n      }\n\n      if (node.nodeType === Node.TEXT_NODE) {\n        // If this text node is just whitespace and the previous or next element\n        // sibling is a block element, remove it\n        // N.B.: This heuristic could change. Very specific to a bug with\n        // `contenteditable` in Firefox: http://jsbin.com/EyuKase/1/edit?js,output\n        // FIXME: make this an option?\n        if (node.data.trim() === ''\n            && ((node.previousElementSibling && isBlockElement(node.previousElementSibling))\n                 || (node.nextElementSibling && isBlockElement(node.nextElementSibling)))) {\n          parentNode.removeChild(node);\n          this._sanitize(parentNode);\n          break;\n        } else {\n          continue;\n        }\n      }\n\n      // Remove all comments\n      if (node.nodeType === Node.COMMENT_NODE) {\n        parentNode.removeChild(node);\n        this._sanitize(parentNode);\n        break;\n      }\n\n      var isInline = isInlineElement(node);\n      var containsBlockElement;\n      if (isInline) {\n        containsBlockElement = Array.prototype.some.call(node.childNodes, isBlockElement);\n      }\n\n      // Block elements should not be nested (e.g. <li><p>...); if\n      // they are, we want to unwrap the inner block element.\n      var isNotTopContainer = !! parentNode.parentNode;\n      var isNestedBlockElement =\n            isBlockElement(parentNode) &&\n            isBlockElement(node) &&\n            isNotTopContainer;\n\n      var nodeName = node.nodeName.toLowerCase();\n\n      var allowedAttrs = getAllowedAttrs(this.config, nodeName, node);\n\n      var isInvalid = isInline && containsBlockElement;\n\n      // Drop tag entirely according to the whitelist *and* if the markup\n      // is invalid.\n      if (isInvalid || shouldRejectNode(node, allowedAttrs)\n          || (!this.config.keepNestedBlockElements && isNestedBlockElement)) {\n        // Do not keep the inner text of SCRIPT/STYLE elements.\n        if (! (node.nodeName === 'SCRIPT' || node.nodeName === 'STYLE')) {\n          while (node.childNodes.length > 0) {\n            parentNode.insertBefore(node.childNodes[0], node);\n          }\n        }\n        parentNode.removeChild(node);\n\n        this._sanitize(parentNode);\n        break;\n      }\n\n      // Sanitize attributes\n      for (var a = 0; a < node.attributes.length; a += 1) {\n        var attr = node.attributes[a];\n\n        if (shouldRejectAttr(attr, allowedAttrs, node)) {\n          node.removeAttribute(attr.name);\n          // Shift the array to continue looping.\n          a = a - 1;\n        }\n      }\n\n      // Sanitize children\n      this._sanitize(node);\n\n      // Mark node as sanitized so it's ignored in future runs\n      node._sanitized = true;\n    } while ((node = treeWalker.nextSibling()));\n  };\n\n  function createTreeWalker(node) {\n    return document.createTreeWalker(node,\n                                     NodeFilter.SHOW_TEXT | NodeFilter.SHOW_ELEMENT | NodeFilter.SHOW_COMMENT,\n                                     null, false);\n  }\n\n  function getAllowedAttrs(config, nodeName, node){\n    if (typeof config.tags[nodeName] === 'function') {\n      return config.tags[nodeName](node);\n    } else {\n      return config.tags[nodeName];\n    }\n  }\n\n  function shouldRejectNode(node, allowedAttrs){\n    if (typeof allowedAttrs === 'undefined') {\n      return true;\n    } else if (typeof allowedAttrs === 'boolean') {\n      return !allowedAttrs;\n    }\n\n    return false;\n  }\n\n  function shouldRejectAttr(attr, allowedAttrs, node){\n    var attrName = attr.name.toLowerCase();\n\n    if (allowedAttrs === true){\n      return false;\n    } else if (typeof allowedAttrs[attrName] === 'function'){\n      return !allowedAttrs[attrName](attr.value, node);\n    } else if (typeof allowedAttrs[attrName] === 'undefined'){\n      return true;\n    } else if (allowedAttrs[attrName] === false) {\n      return true;\n    } else if (typeof allowedAttrs[attrName] === 'string') {\n      return (allowedAttrs[attrName] !== attr.value);\n    }\n\n    return false;\n  }\n\n  return HTMLJanitor;\n\n}));\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/html-janitor/src/html-janitor.js\n// module id = 26\n// module chunks = 0","/**\n *\n * @class Block\n * @classdesc This class describes editor`s block, including block`s HTMLElement, data and tool\n *\n * @property {Tool} tool — current block tool (Paragraph, for example)\n * @property {Object} CSS — block`s css classes\n *\n */\n\n\nimport $ from './dom';\n\nexport default class Block {\n\n    /**\n     * @constructor\n     *\n     * @param {Object} tool — current block plugin`s instance\n     */\n    constructor(tool) {\n\n        this.tool = tool;\n\n        this.CSS = {\n            wrapper: 'ce-block',\n            content: 'ce-block__content'\n        };\n\n        this._html = this.compose();\n\n    }\n\n    /**\n     * Make default block wrappers and put tool`s content there\n     *\n     * @returns {HTMLDivElement}\n     * @private\n     */\n    compose() {\n\n        let wrapper = $.make('div', this.CSS.wrapper),\n            content = $.make('div', this.CSS.content);\n\n        content.appendChild(this.tool.html);\n        wrapper.appendChild(content);\n\n        return wrapper;\n\n    }\n\n    /**\n     * Get block`s HTML\n     *\n     * @returns {HTMLDivElement}\n     */\n    get html() {\n\n        return this._html;\n\n    }\n\n}\n\n\n// WEBPACK FOOTER //\n// ./src/components/block.js","exports = module.exports = require(\"../../node_modules/css-loader/lib/css-base.js\")(undefined);\n// imports\n\n\n// module\nexports.push([module.id, \":root {\\n\\n    /**\\n     * Toolbar buttons\\n     */\\n\\n}\\n/**\\n* Editor wrapper\\n*/\\n.codex-editor{\\n    position: relative;\\n    border: 1px solid #ccc;\\n    padding: 10px;\\n}\\n.codex-editor .hide {\\n        display: none;\\n    }\\n\", \"\"]);\n\n// exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/styles/main.css\n// module id = 28\n// module chunks = 0","/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n// css base code, injected by the css-loader\nmodule.exports = function(useSourceMap) {\n\tvar list = [];\n\n\t// return the list of modules as css string\n\tlist.toString = function toString() {\n\t\treturn this.map(function (item) {\n\t\t\tvar content = cssWithMappingToString(item, useSourceMap);\n\t\t\tif(item[2]) {\n\t\t\t\treturn \"@media \" + item[2] + \"{\" + content + \"}\";\n\t\t\t} else {\n\t\t\t\treturn content;\n\t\t\t}\n\t\t}).join(\"\");\n\t};\n\n\t// import a list of modules into the list\n\tlist.i = function(modules, mediaQuery) {\n\t\tif(typeof modules === \"string\")\n\t\t\tmodules = [[null, modules, \"\"]];\n\t\tvar alreadyImportedModules = {};\n\t\tfor(var i = 0; i < this.length; i++) {\n\t\t\tvar id = this[i][0];\n\t\t\tif(typeof id === \"number\")\n\t\t\t\talreadyImportedModules[id] = true;\n\t\t}\n\t\tfor(i = 0; i < modules.length; i++) {\n\t\t\tvar item = modules[i];\n\t\t\t// skip already imported module\n\t\t\t// this implementation is not 100% perfect for weird media query combinations\n\t\t\t//  when a module is imported multiple times with different media queries.\n\t\t\t//  I hope this will never occur (Hey this way we have smaller bundles)\n\t\t\tif(typeof item[0] !== \"number\" || !alreadyImportedModules[item[0]]) {\n\t\t\t\tif(mediaQuery && !item[2]) {\n\t\t\t\t\titem[2] = mediaQuery;\n\t\t\t\t} else if(mediaQuery) {\n\t\t\t\t\titem[2] = \"(\" + item[2] + \") and (\" + mediaQuery + \")\";\n\t\t\t\t}\n\t\t\t\tlist.push(item);\n\t\t\t}\n\t\t}\n\t};\n\treturn list;\n};\n\nfunction cssWithMappingToString(item, useSourceMap) {\n\tvar content = item[1] || '';\n\tvar cssMapping = item[3];\n\tif (!cssMapping) {\n\t\treturn content;\n\t}\n\n\tif (useSourceMap && typeof btoa === 'function') {\n\t\tvar sourceMapping = toComment(cssMapping);\n\t\tvar sourceURLs = cssMapping.sources.map(function (source) {\n\t\t\treturn '/*# sourceURL=' + cssMapping.sourceRoot + source + ' */'\n\t\t});\n\n\t\treturn [content].concat(sourceURLs).concat([sourceMapping]).join('\\n');\n\t}\n\n\treturn [content].join('\\n');\n}\n\n// Adapted from convert-source-map (MIT)\nfunction toComment(sourceMap) {\n\t// eslint-disable-next-line no-undef\n\tvar base64 = btoa(unescape(encodeURIComponent(JSON.stringify(sourceMap))));\n\tvar data = 'sourceMappingURL=data:application/json;charset=utf-8;base64,' + base64;\n\n\treturn '/*# ' + data + ' */';\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/css-loader/lib/css-base.js\n// module id = 29\n// module chunks = 0"],"sourceRoot":""}