{"version":3,"sources":["webpack:///webpack/bootstrap f91d3e259b25b5dc66af","webpack:///./index.js","webpack:///./editor.js","webpack:///./modules/core.js","webpack:///./modules/ui.js","webpack:///./modules/transport.js","webpack:///./modules/renderer.js","webpack:///./modules/saver.js","webpack:///./modules/content.js","webpack:///./modules/toolbar/toolbar.js","webpack:///./modules/toolbar/settings.js","webpack:///./modules/toolbar/inline.js","webpack:///./modules/toolbar/toolbox.js","webpack:///./modules/tools.js","webpack:///./modules/callbacks.js","webpack:///./modules/draw.js","webpack:///./modules/caret.js","webpack:///./modules/notifications.js","webpack:///./modules/parser.js","webpack:///./modules/sanitizer.js","webpack:///./~/html-janitor/src/html-janitor.js","webpack:///./modules/comments.js"],"names":["editor","require","module","exports","codex","init","core","ui","transport","renderer","saver","content","toolbar","tools","callback","draw","caret","notifications","parser","sanitizer","comments","version","settings","textareaId","uploadImagesUrl","initialBlockPlugin","nodes","textarea","wrapper","inlineToolbar","buttons","actions","toolbox","plusButton","showSettingsButton","showTrashButton","showCommentButton","blockSettings","pluginSettings","defaultSettings","toolbarButtons","redactor","commentsSidebar","state","jsonOutput","blocks","inputs","start","userSettings","prepare","then","make","addTools","bindEvents","preparePlugins","makeBlocksFromData","saveInputs","catch","error","log","Promise","resolve","reject","data","document","getElementById","undefined","Error","msg","type","arg","window","console","e","insertAfter","target","element","parentNode","insertBefore","nextSibling","nodeTypes","TAG","TEXT","COMMENT","keys","BACKSPACE","TAB","ENTER","SHIFT","CTRL","ALT","ESC","SPACE","LEFT","UP","DOWN","RIGHT","DELETE","META","isDomNode","el","nodeType","ajax","url","XMLHTTP","XMLHttpRequest","ActiveXObject","successFunction","params","obj","async","success","test","encodeURIComponent","withCredentials","beforeSend","call","open","setRequestHeader","onreadystatechange","readyState","status","responseText","send","importScript","scriptPath","instanceName","instancePrefix","script","createElement","defer","id","onload","onerror","src","head","appendChild","className","BLOCK_CLASSNAME","BLOCK_CONTENT","BLOCK_STRETCHED","BLOCK_HIGHLIGHTED","BLOCK_IN_FEED_MODE","SETTINGS_ITEM","toolbarContent","ceBlock","blockButtons","alertsHolder","body","settingsButton","commentButton","makeRemoveBlockButton","pluginsSettings","makeInlineToolbar","addDefaultSettings","container","inlineToolbarButtons","inlineToolbarActions","tool","tool_button","name","displayInToolbox","iconClassname","render","toolbarButton","addInlineToolbarTools","bold","icon","command","italic","underline","link","toolButton","toolbarButtonInline","setInlineToolbarButtonBehaviour","addEventListener","globalKeydown","redactorKeyDown","globalKeyup","redactorClicked","plusButtonClicked","showSettingsButtonClicked","showCommentButtonClicked","redactorInputEvent","button","toolbarButtonClicked","pluginName","plugin","config","addBlockHandlers","block","event","blockKeydown","blockPasteCallback","inline","show","elements","querySelectorAll","addInitialBlock","initialBlockType","initialBlock","setAttribute","insertBlock","workingNodeChanged","toolClicked","input","arguments","fileSelected","clearInput","files","formdData","FormData","append","selectAndUpload","args","click","xhr","items","length","appendBlocks","nodeSequence","index","appendNodeAtIndex","getNodeAsync","createBlockFromData","blockData","blocksList","cover","stretched","isStretched","saveBlocks","html","innerHTML","childNodes","makeQueue","queue","getBlockData","makeFormDataFromBlocks","dataset","save","blockContent","pluginsContent","savedData","output","validate","result","classList","contains","push","saveComments","fields","i","commentsData","j","text","querySelector","time","comment","edited","textContent","fieldData","blockId","currentNode","editorAreaHightlighted","sync","getNodeFocused","selection","getSelection","focused","anchorNode","focusNode","parentElement","isFirstLevelBlock","parent","markBlock","add","clearMark","remove","getFirstLevelBlock","node","targetNode","replaceBlock","function_name","targetBlock","newBlock","replaceChild","needPlaceCaret","workingBlock","newBlockContent","blockType","composeNewBlock","currentInputIndex","getCurrentInputIndex","editableElement","emptyText","createTextNode","set","move","showPlusButton","setTimeout","setToNextBlock","switchBlock","blockToReplace","newBlockComposed","getDeepestTextNodeFromPosition","position","blockChilds","trim","removeChild","looking_from_start","Date","getRange","getRangeAt","splitBlock","inputIndex","anchorNodeText","caretOffset","anchorOffset","textBeforeCaret","textNodeBeforeCaret","textAfterCaret","textNodeAfterCaret","currentBlock","substring","previousChilds","nextChilds","reachedCurrent","child","previousChildsLength","nextChildsLength","newNode","NEW_BLOCK_TYPE","mergeBlocks","targetInputIndex","targetInput","currentInputContent","paste","mutation","workingNode","allowedToPaste","sanitize","pasteTextContent","addedNodes","textNode","disconnect","cleaner","satinizer","Config","BASIC","clean","outerHTML","div","replaceWith","isLastNode","allChecked","allSiblingsEmpty_","sibling","wrapTextWithParagraphs","htmlString","newWrapper","paragraph","firstLevelBlocks","blockTyped","indexOf","tagName","cloneNode","defaultToolbarHeight","defaultOffset","opened","current","close","toggle","hidePlusButton","newYCoordinate","offsetTop","style","transform","Math","floor","hideRemoveActions","setting","toolType","makeSettings","settingsBlock","feedModeToggler","makeFeedModeToggler","isFeedModeActivated","updateFeedMode","removeBlockWrapper","settingButton","actionWrapper","confirmAction","cancelAction","removeButtonClicked","confirmRemovingRequest","cancelRemovingRequest","action","showRemoveActions","firstLevelBlocksCount","buttonsOpened","actionsOpened","wrappersOffset","storedSelection","showInlineToolbar","selectedText","getSelectionText","showButtons","getWrappersOffset","coords","getSelectionCoords","newCoordinateX","newCoordinateY","offsetHeight","x","left","y","scrollY","top","closeButtons","closeAction","createLinkAction","defaultToolAction","forEach","hightlight","offset","getOffset","_x","_y","isNaN","offsetLeft","clientLeft","clientTop","offsetParent","sel","range","createRange","collapse","boundingLeft","boundingTop","rangeCount","cloneRange","getClientRects","rect","toString","showActions","inlineToolbarAnchorInputKeydown_","keyCode","editable","restoreSelection","setAnchor","value","preventDefault","stopImmediatePropagation","clearRange","isActive","isLinkActive","saveSelection","inputForLink","focus","dataType","execCommand","containerEl","preSelectionRange","selectNodeContents","setEnd","startContainer","startOffset","end","savedSel","charIndex","setStart","nodeStack","foundStart","stop","nextCharIndex","pop","removeAllRanges","addRange","queryCommandState","setButtonHighlighted","removeButtonsHighLight","tag","leaf","currentTool","Object","barButtons","nextToolIndex","toolToSelect","visibleTool","UNREPLACEBLE_TOOLS","appendCallback","setToBlock","callbacks","redactorSyncTimeout","enterKeyPressed","tabKeyPressed","enterKeyPressedOnRedactorZone","escapeKeyPressed","defaultKeyPressed","arrowKeyPressed","enterPressedOnBlock","contentEditable","saveCurrentInputIndex","isEnterPressedOnToolbar","enableLineBreaks","stopPropagation","shiftKey","isLastTextNode","currentSelection","currentSelectedNode","caretAtTheEndOfText","atTheEnd","isTextNodeHasParentBetweenContenteditable","islastNode","detectWhenClickedOnFirstLevelBlockArea","indexOfLastInput","firstLevelBlock","inputIsEmpty","currentNodeType","isInitialType","flag","clearTimeout","blockRightOrDownArrowPressed","backspacePressed","blockLeftOrUpArrowPressed","focusedNode","focusedNodeHolder","editableElementIndex","caretInLastChild","lastChild","deepestTextnode","caretInFirstChild","caretAtTheBeginning","firstChild","setToPreviousBlock","selectionLength","endOffset","atStart","blockPaste","_blockPasteCallback","observer","MutationObserver","handleMutationsOnPaste","attributes","childList","characterData","subtree","observe","clipboardData","getData","cleanData","fragment","createDocumentFragment","lastNode","deleteContents","insertNode","setStartAfter","mutations","self","currentToolType","sidebar","bar","placeholder","toggler","classname","tool_icon","tool_title","properties","pluginsRender","cEditor","focusedNodeIndex","childs","nodeToSet","nextInput","emptyTextElement","previousInput","lastChildNode","lengthOfLastChildNode","isFirstNode","isOffsetZero","errorThrown","errorMsg","message","notification","insertPastedContent","janitor","tags","p","a","href","rel","b","strong","em","span","commentsField","field","deleteBtn","postBtn","commentClicked","deleteClicked","date","toLocaleDateString","month","day","hour","minute","hour12","editBtn","editClicked","path","methods","getCoords","getBoundingClientRect","pageXOffset","pageYOffset","blockCoords"],"mappings":"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ADD;AAEFC,oBAAG;AACCC,2BAAM,IADP;AAEClgB,6BAAQ,QAFT;AAGCmgB,0BAAK;AAHN,kBAFD;AAOFnV,oBAAG,EAPD;AAQFoV,oBAAG,EARD;AASFC,yBAAQ,EATN;AAUFC,qBAAI,EAVF;AAWFC,uBAAM;AAXJ;AAFF;AAFC,MAAb;;AAoBA/jB,eAAUwU,MAAV,GAAmBA,MAAnB;;AAEAxU,eAAUd,IAAV,GAAiBokB,OAAjB;;AAEA,YAAOtjB,SAAP;AAEH,EA/BgB,CA+Bd,EA/Bc,CAAjB,C;;;;;;ACNA;AACA;AACA;AACA,IAAG;AACH;AACA,IAAG;AACH;AACA;AACA,EAAC;;AAED;AACA,cAAa,OAAO;AACpB,cAAa,QAAQ;AACrB;AACA;;AAEA;AACA;;AAEA;AACA,yBAAwB,iCAAiC,EAAE;AAC3D,8BAA6B,uEAAuE,EAAE;;AAEtG;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,iBAAgB,QAAQ;;AAExB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA,gEAA+D;AAC/D;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,sBAAqB,4BAA4B;AACjD;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,MAAK;AACL;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;AACA,MAAK;AACL;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,MAAK;AACL;AACA,MAAK;AACL;AACA,MAAK;AA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","file":"codex-editor.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap f91d3e259b25b5dc66af","/**\r\n *\r\n */\r\n\r\n'use strict';\r\n\r\nvar editor = require('./editor');\r\nmodule.exports = editor;\r\n\n\n\n// WEBPACK FOOTER //\n// ./index.js","/**\r\n *\r\n * Codex Editor\r\n *\r\n * @author Codex Team\r\n * @version 1.3.0\r\n */\r\n\r\nvar codex = (function(codex){\r\n\r\n    var init = function() {\r\n\r\n        codex.core          = require('./modules/core');\r\n        codex.ui            = require('./modules/ui');\r\n        codex.transport     = require('./modules/transport');\r\n        codex.renderer      = require('./modules/renderer');\r\n        codex.saver         = require('./modules/saver');\r\n        codex.content       = require('./modules/content');\r\n        codex.toolbar       = require('./modules/toolbar/toolbar');\r\n        codex.tools         = require('./modules/tools');\r\n        codex.callback      = require('./modules/callbacks');\r\n        codex.draw          = require('./modules/draw');\r\n        codex.caret         = require('./modules/caret');\r\n        codex.notifications = require('./modules/notifications');\r\n        codex.parser        = require('./modules/parser');\r\n        codex.sanitizer     = require('./modules/sanitizer');\r\n        codex.comments      = require('./modules/comments');\r\n    };\r\n\r\n    codex.version = VERSION;\r\n\r\n    /**\r\n     * @public\r\n     *\r\n     * holds initial settings\r\n     */\r\n    codex.settings = {\r\n        tools     : ['paragraph', 'header', 'picture', 'list', 'quote', 'code', 'twitter', 'instagram', 'smile'],\r\n        textareaId: 'codex-editor',\r\n        uploadImagesUrl: '/editor/transport/',\r\n\r\n        // Type of block showing on empty editor\r\n        initialBlockPlugin: \"paragraph\"\r\n    };\r\n\r\n    /**\r\n     * public\r\n     *\r\n     * Static nodes\r\n     */\r\n    codex.nodes = {\r\n        textarea          : null,\r\n        wrapper           : null,\r\n        toolbar           : null,\r\n        inlineToolbar     : {\r\n            wrapper : null,\r\n            buttons : null,\r\n            actions : null\r\n        },\r\n        toolbox           : null,\r\n        notifications     : null,\r\n        plusButton        : null,\r\n        showSettingsButton: null,\r\n        showTrashButton   : null,\r\n        showCommentButton : null,\r\n        blockSettings     : null,\r\n        pluginSettings    : null,\r\n        defaultSettings   : null,\r\n        toolbarButtons    : {}, // { type : DomEl, ... }\r\n        redactor          : null,\r\n        commentsSidebar   : null\r\n    };\r\n\r\n    /**\r\n     * @public\r\n     *\r\n     * Output state\r\n     */\r\n    codex.state = {\r\n        jsonOutput: [],\r\n        blocks    : [],\r\n        inputs    : [],\r\n        comments  : []\r\n    };\r\n\r\n    /**\r\n     * Initialization\r\n     * @uses Promise cEditor.core.prepare\r\n     * @param {} userSettings are :\r\n     *          - tools [],\r\n     *          - textareaId String\r\n     *          ...\r\n     *\r\n     * Load user defined tools\r\n     * Tools must contain this important objects :\r\n     *  @param {String} type - this is a type of plugin. It can be used as plugin name\r\n     *  @param {String} iconClassname - this a icon in toolbar\r\n     *  @param {Object} make - what should plugin do, when it is clicked\r\n     *  @param {Object} appendCallback - callback after clicking\r\n     *  @param {Element} settings - what settings does it have\r\n     *  @param {Object} render - plugin get JSON, and should return HTML\r\n     *  @param {Object} save - plugin gets HTML content, returns JSON\r\n     *  @param {Boolean} displayInToolbox - will be displayed in toolbox. Default value is TRUE\r\n     *  @param {Boolean} enableLineBreaks - inserts new block or break lines. Default value is FALSE\r\n     *\r\n     * @example\r\n     *   -  type             : 'header',\r\n     *   -  iconClassname    : 'ce-icon-header',\r\n     *   -  make             : headerTool.make,\r\n     *   -  appendCallback   : headerTool.appendCallback,\r\n     *   -  settings         : headerTool.makeSettings(),\r\n     *   -  render           : headerTool.render,\r\n     *   -  save             : headerTool.save,\r\n     *   -  displayInToolbox : true,\r\n     *   -  enableLineBreaks : false\r\n     */\r\n    codex.start = function (userSettings) {\r\n\r\n        init();\r\n\r\n        this.core.prepare(userSettings)\r\n\r\n        // If all ok, make UI, bind events and parse initial-content\r\n            .then(this.ui.make)\r\n            .then(this.ui.addTools)\r\n            .then(this.ui.bindEvents)\r\n            .then(this.ui.preparePlugins)\r\n            .then(this.transport.prepare)\r\n            .then(this.renderer.makeBlocksFromData)\r\n            .then(this.ui.saveInputs)\r\n            .catch(function (error) {\r\n                codex.core.log('Initialization failed with error: %o', 'warn', error);\r\n            });\r\n\r\n    };\r\n\r\n    return codex;\r\n\r\n})({});\r\n\r\nmodule.exports = codex;\r\n\r\n\r\n\r\n\n\n\n// WEBPACK FOOTER //\n// ./editor.js","/**\r\n * Codex Editor Core\r\n *\r\n * @author Codex Team\r\n * @version 1.1.2\r\n */\r\n\r\nlet editor = codex.editor;\r\n\r\nmodule.exports = (function (core) {\r\n\r\n    /**\r\n     * @public\r\n     *\r\n     * Editor preparing method\r\n     * @return Promise\r\n     */\r\n    core.prepare = function (userSettings) {\r\n\r\n        return new Promise(function (resolve, reject) {\r\n\r\n            if ( userSettings ) {\r\n\r\n                editor.settings.tools = userSettings.tools || editor.settings.tools;\r\n\r\n            }\r\n\r\n            if (userSettings.data) {\r\n\r\n                editor.state.blocks = userSettings.data;\r\n\r\n            }\r\n\r\n            if (userSettings.initialBlockPlugin) {\r\n\r\n                editor.settings.initialBlockPlugin = userSettings.initialBlockPlugin;\r\n\r\n            }\r\n\r\n            if (userSettings.uploadImagesUrl) {\r\n\r\n                editor.settings.uploadImagesUrl = userSettings.uploadImagesUrl;\r\n\r\n            }\r\n\r\n            editor.nodes.textarea = document.getElementById(userSettings.textareaId || editor.settings.textareaId);\r\n\r\n            if (typeof editor.nodes.textarea === undefined || editor.nodes.textarea === null) {\r\n\r\n                reject(Error(\"Textarea wasn't found by ID: #\" + userSettings.textareaId));\r\n\r\n            } else {\r\n\r\n                resolve();\r\n\r\n            }\r\n\r\n        });\r\n\r\n    };\r\n\r\n    /**\r\n     * Logging method\r\n     * @param type = ['log', 'info', 'warn']\r\n     */\r\n    core.log = function (msg, type, arg) {\r\n\r\n        type = type || 'log';\r\n\r\n        if (!arg) {\r\n\r\n            arg  = msg || 'undefined';\r\n            msg  = '[codex-editor]:      %o';\r\n\r\n        } else {\r\n\r\n            msg  = '[codex-editor]:      ' + msg;\r\n\r\n        }\r\n\r\n        try{\r\n\r\n            if ( 'console' in window && window.console[ type ] ) {\r\n\r\n                if ( arg ) window.console[ type ]( msg, arg );\r\n                else window.console[ type ]( msg );\r\n\r\n            }\r\n\r\n        }catch(e) {}\r\n\r\n    };\r\n\r\n    /**\r\n     * @protected\r\n     *\r\n     * Helper for insert one element after another\r\n     */\r\n    core.insertAfter = function (target, element) {\r\n\r\n        target.parentNode.insertBefore(element, target.nextSibling);\r\n\r\n    };\r\n\r\n    /**\r\n     * @const\r\n     *\r\n     * Readable DOM-node types map\r\n     */\r\n    core.nodeTypes = {\r\n        TAG     : 1,\r\n        TEXT    : 3,\r\n        COMMENT : 8\r\n    };\r\n\r\n    /**\r\n     * @const\r\n     * Readable keys map\r\n     */\r\n    core.keys = { BACKSPACE: 8, TAB: 9, ENTER: 13, SHIFT: 16, CTRL: 17, ALT: 18, ESC: 27, SPACE: 32, LEFT: 37, UP: 38, DOWN: 40, RIGHT: 39, DELETE: 46, META: 91 };\r\n\r\n    /**\r\n     * @protected\r\n     *\r\n     * Check object for DOM node\r\n     */\r\n    core.isDomNode = function (el) {\r\n\r\n        return el && typeof el === 'object' && el.nodeType && el.nodeType == this.nodeTypes.TAG;\r\n\r\n    };\r\n\r\n    /**\r\n     * Native Ajax\r\n     */\r\n    core.ajax = function (data) {\r\n\r\n        if (!data || !data.url) {\r\n\r\n            return;\r\n\r\n        }\r\n\r\n        var XMLHTTP          = window.XMLHttpRequest ? new XMLHttpRequest() : new ActiveXObject('Microsoft.XMLHTTP'),\r\n            successFunction = function () {},\r\n            params = '',\r\n            obj;\r\n\r\n        data.async           = true;\r\n        data.type            = data.type || 'GET';\r\n        data.data            = data.data || '';\r\n        data['content-type'] = data['content-type'] || 'application/json; charset=utf-8';\r\n        successFunction     = data.success || successFunction ;\r\n\r\n        if (data.type == 'GET' && data.data) {\r\n\r\n            data.url = /\\?/.test(data.url) ? data.url + '&' + data.data : data.url + '?' + data.data;\r\n\r\n        } else {\r\n\r\n            for(obj in data.data) {\r\n\r\n                params += (obj + '=' + encodeURIComponent(data.data[obj]) + '&');\r\n\r\n            }\r\n\r\n        }\r\n\r\n        if (data.withCredentials) {\r\n\r\n            XMLHTTP.withCredentials = true;\r\n\r\n        }\r\n\r\n        if (data.beforeSend && typeof data.beforeSend == 'function') {\r\n\r\n            data.beforeSend.call();\r\n\r\n        }\r\n\r\n        XMLHTTP.open( data.type, data.url, data.async );\r\n        XMLHTTP.setRequestHeader('X-Requested-With', 'XMLHttpRequest');\r\n        XMLHTTP.setRequestHeader('Content-type', 'application/x-www-form-urlencoded');\r\n\r\n        XMLHTTP.onreadystatechange = function () {\r\n\r\n            if (XMLHTTP.readyState == 4 && XMLHTTP.status == 200) {\r\n\r\n                successFunction(XMLHTTP.responseText);\r\n\r\n            }\r\n\r\n        };\r\n\r\n        XMLHTTP.send(params);\r\n\r\n    };\r\n\r\n    /**\r\n    * Appends script to head of document\r\n    * @return Promise\r\n    */\r\n    core.importScript = function (scriptPath, instanceName) {\r\n\r\n        return new Promise(function (resolve, reject) {\r\n\r\n            const instancePrefix = 'cdx-script-';\r\n\r\n            let script;\r\n\r\n            /** Script is already loaded */\r\n            if ( !instanceName ) {\r\n\r\n                reject('Instance name is missed');\r\n\r\n            } else if ( document.getElementById(instancePrefix + instanceName) ) {\r\n\r\n                resolve(scriptPath);\r\n\r\n            }\r\n\r\n            script = document.createElement('SCRIPT');\r\n            script.async = true;\r\n            script.defer = true;\r\n            script.id = instancePrefix + instanceName;\r\n\r\n            script.onload = function () {\r\n\r\n                resolve(scriptPath);\r\n\r\n            };\r\n\r\n            script.onerror = function () {\r\n\r\n                reject(scriptPath);\r\n\r\n            };\r\n\r\n            script.src = scriptPath;\r\n            document.head.appendChild(script);\r\n\r\n        });\r\n\r\n    };\r\n\r\n    return core;\r\n\r\n})({});\n\n\n// WEBPACK FOOTER //\n// ./modules/core.js","/**\r\n * Codex Editor UI module\r\n *\r\n * @author Codex Team\r\n * @version 1.1\r\n */\r\n\r\nvar ui = (function(ui){\r\n\r\n    /**\r\n     * Basic editor classnames\r\n     */\r\n    ui.className = {\r\n\r\n        /**\r\n         * @const {string} BLOCK_CLASSNAME - redactor blocks name\r\n         */\r\n        BLOCK_CLASSNAME : 'ce-block',\r\n\r\n        /**\r\n         * @const {String} wrapper for plugins content\r\n         */\r\n        BLOCK_CONTENT : 'ce-block__content',\r\n\r\n        /**\r\n         * @const {String} BLOCK_STRETCHED - makes block stretched\r\n         */\r\n        BLOCK_STRETCHED : 'ce-block--stretched',\r\n\r\n        /**\r\n         * @const {String} BLOCK_HIGHLIGHTED - adds background\r\n         */\r\n        BLOCK_HIGHLIGHTED : 'ce-block--focused',\r\n\r\n        /**\r\n         * @const {String} - highlights covered blocks\r\n         */\r\n        BLOCK_IN_FEED_MODE : 'ce-block--feed-mode',\r\n\r\n        /**\r\n         * @const {String} - for all default settings\r\n         */\r\n        SETTINGS_ITEM : 'ce-settings__item'\r\n\r\n    };\r\n\r\n    /**\r\n     * @protected\r\n     *\r\n     * Making main interface\r\n     */\r\n    ui.make = function () {\r\n\r\n        var wrapper,\r\n            toolbar,\r\n            toolbarContent,\r\n            inlineToolbar,\r\n            redactor,\r\n            commentsSidebar,\r\n            ceBlock,\r\n            notifications,\r\n            blockButtons,\r\n            blockSettings,\r\n            showSettingsButton,\r\n            showTrashButton,\r\n            showCommentButton,\r\n            toolbox,\r\n            plusButton;\r\n\r\n        /** Make editor wrapper */\r\n        wrapper = codex.draw.wrapper();\r\n\r\n        /** Append editor wrapper after initial textarea */\r\n        codex.core.insertAfter(codex.nodes.textarea, wrapper);\r\n\r\n        /** Append block with notifications to the document */\r\n        notifications = codex.draw.alertsHolder();\r\n        codex.nodes.notifications = document.body.appendChild(notifications);\r\n\r\n        /** Make toolbar and content-editable redactor */\r\n        toolbar               = codex.draw.toolbar();\r\n        toolbarContent        = codex.draw.toolbarContent();\r\n        inlineToolbar         = codex.draw.inlineToolbar();\r\n        plusButton            = codex.draw.plusButton();\r\n        showSettingsButton    = codex.draw.settingsButton();\r\n        showCommentButton     = codex.draw.commentButton();\r\n        showTrashButton       = codex.toolbar.settings.makeRemoveBlockButton();\r\n        blockSettings         = codex.draw.blockSettings();\r\n        blockButtons          = codex.draw.blockButtons();\r\n        toolbox               = codex.draw.toolbox();\r\n        redactor              = codex.draw.redactor();\r\n        commentsSidebar       = codex.draw.commentsSidebar();\r\n\r\n        /** settings */\r\n        var defaultSettings = codex.draw.defaultSettings(),\r\n            pluginSettings  = codex.draw.pluginsSettings();\r\n\r\n        /** Add default and plugins settings */\r\n        blockSettings.appendChild(pluginSettings);\r\n        blockSettings.appendChild(defaultSettings);\r\n\r\n        /** Make blocks buttons\r\n         * This block contains settings button and remove block button\r\n         */\r\n        blockButtons.appendChild(showSettingsButton);\r\n        blockButtons.appendChild(showTrashButton);\r\n        blockButtons.appendChild(showCommentButton);\r\n        blockButtons.appendChild(blockSettings);\r\n\r\n        /** Append plus button */\r\n        toolbarContent.appendChild(plusButton);\r\n\r\n        /** Appending toolbar tools */\r\n        toolbarContent.appendChild(toolbox);\r\n\r\n        /** Appending first-level block buttons */\r\n        toolbar.appendChild(blockButtons);\r\n\r\n        /** Append toolbarContent to toolbar */\r\n        toolbar.appendChild(toolbarContent);\r\n\r\n        wrapper.appendChild(toolbar);\r\n\r\n        wrapper.appendChild(commentsSidebar);\r\n        wrapper.appendChild(redactor);\r\n\r\n        /** Save created ui-elements to static nodes state */\r\n        codex.nodes.wrapper            = wrapper;\r\n        codex.nodes.toolbar            = toolbar;\r\n        codex.nodes.plusButton         = plusButton;\r\n        codex.nodes.toolbox            = toolbox;\r\n        codex.nodes.blockSettings      = blockSettings;\r\n        codex.nodes.pluginSettings     = pluginSettings;\r\n        codex.nodes.defaultSettings    = defaultSettings;\r\n        codex.nodes.showSettingsButton = showSettingsButton;\r\n        codex.nodes.showTrashButton    = showTrashButton;\r\n        codex.nodes.showCommentButton  = showCommentButton;\r\n        codex.nodes.commentsSidebar    = commentsSidebar;\r\n\r\n        codex.nodes.redactor = redactor;\r\n\r\n        codex.ui.makeInlineToolbar(inlineToolbar);\r\n\r\n        /** fill in default settings */\r\n        codex.toolbar.settings.addDefaultSettings();\r\n    };\r\n\r\n    ui.makeInlineToolbar = function(container) {\r\n\r\n        /** Append to redactor new inline block */\r\n        codex.nodes.inlineToolbar.wrapper = container;\r\n\r\n        /** Draw toolbar buttons */\r\n        codex.nodes.inlineToolbar.buttons = codex.draw.inlineToolbarButtons();\r\n\r\n        /** Buttons action or settings */\r\n        codex.nodes.inlineToolbar.actions = codex.draw.inlineToolbarActions();\r\n\r\n        /** Append to inline toolbar buttons as part of it */\r\n        codex.nodes.inlineToolbar.wrapper.appendChild(codex.nodes.inlineToolbar.buttons);\r\n        codex.nodes.inlineToolbar.wrapper.appendChild(codex.nodes.inlineToolbar.actions);\r\n\r\n        codex.nodes.wrapper.appendChild(codex.nodes.inlineToolbar.wrapper);\r\n    };\r\n\r\n    /**\r\n     * @private\r\n     * Append tools passed in codex.tools\r\n     */\r\n    ui.addTools = function () {\r\n\r\n        var tool,\r\n            tool_button;\r\n\r\n        for(var name in codex.settings.tools) {\r\n            tool = codex.settings.tools[name];\r\n            codex.tools[name] = tool;\r\n        }\r\n\r\n        /** Make toolbar buttons */\r\n        for (var name in codex.tools){\r\n\r\n            tool = codex.tools[name];\r\n\r\n            if (!tool.displayInToolbox) {\r\n                continue;\r\n            }\r\n\r\n            if (!tool.iconClassname) {\r\n                codex.core.log('Toolbar icon classname missed. Tool %o skipped', 'warn', name);\r\n                continue;\r\n            }\r\n\r\n            if (typeof tool.render != 'function') {\r\n                codex.core.log('render method missed. Tool %o skipped', 'warn', name);\r\n                continue;\r\n            }\r\n\r\n            /**\r\n             * if tools is for toolbox\r\n             */\r\n            tool_button = codex.draw.toolbarButton(name, tool.iconClassname);\r\n\r\n            codex.nodes.toolbox.appendChild(tool_button);\r\n\r\n            /** Save tools to static nodes */\r\n            codex.nodes.toolbarButtons[name] = tool_button;\r\n        }\r\n\r\n\r\n        /**\r\n         * Add inline toolbar tools\r\n         */\r\n        codex.ui.addInlineToolbarTools();\r\n\r\n\r\n    };\r\n\r\n    ui.addInlineToolbarTools = function() {\r\n\r\n        var tools = {\r\n\r\n            bold: {\r\n                icon    : 'ce-icon-bold',\r\n                command : 'bold'\r\n            },\r\n\r\n            italic: {\r\n                icon    : 'ce-icon-italic',\r\n                command : 'italic'\r\n            },\r\n\r\n            underline: {\r\n                icon    : 'ce-icon-underline',\r\n                command : 'underline'\r\n            },\r\n\r\n            link: {\r\n                icon    : 'ce-icon-link',\r\n                command : 'createLink'\r\n            }\r\n        };\r\n\r\n        var toolButton,\r\n            tool;\r\n\r\n        for(var name in tools) {\r\n\r\n            tool = tools[name];\r\n\r\n            toolButton = codex.draw.toolbarButtonInline(name, tool.icon);\r\n\r\n            codex.nodes.inlineToolbar.buttons.appendChild(toolButton);\r\n            /**\r\n             * Add callbacks to this buttons\r\n             */\r\n            codex.ui.setInlineToolbarButtonBehaviour(toolButton, tool.command);\r\n        }\r\n\r\n    };\r\n\r\n    /**\r\n     * @private\r\n     * Bind editor UI events\r\n     */\r\n    ui.bindEvents = function () {\r\n\r\n        codex.core.log('ui.bindEvents fired', 'info');\r\n\r\n        // window.addEventListener('error', function (errorMsg, url, lineNumber) {\r\n        //     codex.notifications.errorThrown(errorMsg, event);\r\n        // }, false );\r\n\r\n        /** All keydowns on Document */\r\n        document.addEventListener('keydown', codex.callback.globalKeydown, false );\r\n\r\n        /** All keydowns on Redactor zone */\r\n        codex.nodes.redactor.addEventListener('keydown', codex.callback.redactorKeyDown, false);\r\n\r\n        /** All keydowns on Document */\r\n        document.addEventListener('keyup', codex.callback.globalKeyup, false );\r\n\r\n        /**\r\n         * Mouse click to radactor\r\n         */\r\n        codex.nodes.redactor.addEventListener('click', codex.callback.redactorClicked, false );\r\n\r\n        /**\r\n         * Clicks to the Plus button\r\n         */\r\n        codex.nodes.plusButton.addEventListener('click', codex.callback.plusButtonClicked, false);\r\n\r\n        /**\r\n         * Clicks to SETTINGS button in toolbar\r\n         */\r\n        codex.nodes.showSettingsButton.addEventListener('click', codex.callback.showSettingsButtonClicked, false );\r\n\r\n        /**\r\n         * Clicks to COMMENT button in toolbar\r\n         */\r\n        codex.nodes.showCommentButton.addEventListener('click', codex.callback.showCommentButtonClicked, false );\r\n\r\n        /**\r\n         *  @deprecated ( but now in use for syncronization );\r\n         *  Any redactor changes: keyboard input, mouse cut/paste, drag-n-drop text\r\n         */\r\n        codex.nodes.redactor.addEventListener('input', codex.callback.redactorInputEvent, false );\r\n\r\n        /** Bind click listeners on toolbar buttons */\r\n        for (var button in codex.nodes.toolbarButtons){\r\n            codex.nodes.toolbarButtons[button].addEventListener('click', codex.callback.toolbarButtonClicked, false);\r\n        }\r\n\r\n    };\r\n\r\n    /**\r\n     * Initialize plugins before using\r\n     * Ex. Load scripts or call some internal methods\r\n     * @return Promise\r\n     */\r\n    ui.preparePlugins = function() {\r\n\r\n        return new Promise(function(resolve, reject){\r\n\r\n            let pluginName,\r\n                plugin;\r\n\r\n            for ( pluginName in codex.tools ) {\r\n\r\n                plugin = codex.tools[pluginName];\r\n\r\n                if (typeof plugin.prepare != 'function'){\r\n                    continue;\r\n                }\r\n\r\n                plugin.prepare(plugin.config || {}).then(function(){\r\n                    resolve();\r\n                }).catch(function(error){\r\n                    reject(error);\r\n                });\r\n\r\n            }\r\n\r\n        });\r\n    };\r\n\r\n    ui.addBlockHandlers = function(block) {\r\n\r\n        if (!block) return;\r\n\r\n        /**\r\n         * Block keydowns\r\n         */\r\n        block.addEventListener('keydown', function(event) {\r\n            codex.callback.blockKeydown(event, block);\r\n        }, false);\r\n\r\n        /**\r\n         * Pasting content from another source\r\n         * We have two type of sanitization\r\n         * First - uses deep-first search algorithm to get sub nodes,\r\n         * sanitizes whole Block_content and replaces cleared nodes\r\n         * This method is deprecated\r\n         * Method is used in codex.callback.blockPaste(event)\r\n         *\r\n         * Secont - uses Mutation observer.\r\n         * Observer \"observe\" DOM changes and send changings to callback.\r\n         * Callback gets changed node, not whole Block_content.\r\n         * Inserted or changed node, which we've gotten have been cleared and replaced with diry node\r\n         *\r\n         * Method is used in codex.callback.blockPasteViaSanitize(event)\r\n         *\r\n         * @uses html-janitor\r\n         * @example codex.callback.blockPasteViaSanitize(event), the second method.\r\n         *\r\n         */\r\n        block.addEventListener('paste', codex.callback.blockPasteCallback, false);\r\n\r\n        block.addEventListener('mouseup', function(){\r\n            codex.toolbar.inline.show();\r\n        }, false);\r\n\r\n    };\r\n\r\n    /** getting all contenteditable elements */\r\n    ui.saveInputs = function() {\r\n\r\n        var redactor = codex.nodes.redactor,\r\n            elements = [];\r\n\r\n        /** Save all inputs in global variable state */\r\n        codex.state.inputs = redactor.querySelectorAll('[contenteditable], input');\r\n    };\r\n\r\n    /**\r\n     * Adds first initial block on empty redactor\r\n     */\r\n    ui.addInitialBlock = function(){\r\n\r\n        var initialBlockType = codex.settings.initialBlockPlugin,\r\n            initialBlock;\r\n\r\n        if ( !codex.tools[initialBlockType] ){\r\n            codex.core.log('Plugin %o was not implemented and can\\'t be used as initial block', 'warn', initialBlockType);\r\n            return;\r\n        }\r\n\r\n        initialBlock = codex.tools[initialBlockType].render();\r\n\r\n        initialBlock.setAttribute('data-placeholder', 'Расскажите свою историю...');\r\n\r\n        codex.content.insertBlock({\r\n            type  : initialBlockType,\r\n            block : initialBlock\r\n        });\r\n\r\n        codex.content.workingNodeChanged(initialBlock);\r\n\r\n    };\r\n\r\n    ui.setInlineToolbarButtonBehaviour = function(button, type) {\r\n\r\n        button.addEventListener('mousedown', function(event) {\r\n\r\n            codex.toolbar.inline.toolClicked(event, type);\r\n\r\n        }, false);\r\n    };\r\n\r\n    return ui;\r\n\r\n})({});\r\n\r\nmodule.exports = ui;\n\n\n// WEBPACK FOOTER //\n// ./modules/ui.js","/**\r\n *\r\n * Codex.Editor Transport Module\r\n *\r\n * @author Codex Team\r\n * @version 1.0\r\n */\r\nlet editor = codex.editor;\r\n\r\nmodule.exports = (function (transport) {\r\n\r\n    transport.input = null;\r\n\r\n    /**\r\n     * @property {Object} arguments - keep plugin settings and defined callbacks\r\n     */\r\n    transport.arguments = null;\r\n\r\n    transport.prepare = function () {\r\n\r\n        var input = document.createElement('INPUT');\r\n\r\n        input.type = 'file';\r\n        input.addEventListener('change', editor.transport.fileSelected);\r\n\r\n        editor.transport.input = input;\r\n\r\n    };\r\n\r\n    /** Clear input when files is uploaded */\r\n    transport.clearInput = function () {\r\n\r\n        /** Remove old input */\r\n        this.input = null;\r\n\r\n        /** Prepare new one */\r\n        this.prepare();\r\n\r\n    };\r\n\r\n    /**\r\n     * Callback for file selection\r\n     * @param {Event} event\r\n     */\r\n    transport.fileSelected = function () {\r\n\r\n        var input       = this,\r\n            files       = input.files,\r\n            formdData   = new FormData();\r\n\r\n        formdData.append('files', files[0], files[0].name);\r\n\r\n        editor.transport.ajax({\r\n            data : formdData,\r\n            beforeSend : editor.transport.arguments.beforeSend,\r\n            success    : editor.transport.arguments.success,\r\n            error      : editor.transport.arguments.error\r\n        });\r\n\r\n    };\r\n\r\n    /**\r\n     * Use plugin callbacks\r\n     * @protected\r\n     */\r\n    transport.selectAndUpload = function (args) {\r\n\r\n        this.arguments = args;\r\n        this.input.click();\r\n\r\n    };\r\n\r\n    /**\r\n     * Ajax requests module\r\n     * @todo use core.ajax\r\n     */\r\n    transport.ajax = function (params) {\r\n\r\n        var xhr = new XMLHttpRequest(),\r\n            beforeSend = typeof params.beforeSend == 'function' ? params.beforeSend : function () {},\r\n            success    = typeof params.success    == 'function' ? params.success : function () {},\r\n            error      = typeof params.error      == 'function' ? params.error   : function () {};\r\n\r\n        beforeSend();\r\n\r\n        xhr.open('POST', editor.settings.uploadImagesUrl, true);\r\n\r\n        xhr.setRequestHeader('X-Requested-With', 'XMLHttpRequest');\r\n\r\n        xhr.onload = function () {\r\n\r\n            if (xhr.status === 200) {\r\n\r\n                success(xhr.responseText);\r\n\r\n            } else {\r\n\r\n                editor.core.log('request error: %o', xhr);\r\n                error();\r\n\r\n            }\r\n\r\n        };\r\n\r\n        xhr.send(params.data);\r\n        this.clearInput();\r\n\r\n    };\r\n\r\n    return transport;\r\n\r\n})({});\n\n\n// WEBPACK FOOTER //\n// ./modules/transport.js","/**\r\n * Codex Editor Renderer Module\r\n *\r\n * @author Codex Team\r\n * @version 1.0\r\n */\r\n\r\nlet editor = codex.editor;\r\n\r\nmodule.exports = (function (renderer) {\r\n\r\n    /**\r\n     * Asyncronously parses input JSON to redactor blocks\r\n     */\r\n    renderer.makeBlocksFromData = function () {\r\n\r\n        /**\r\n         * If redactor is empty, add first paragraph to start writing\r\n         */\r\n        if (!editor.state.blocks.items.length) {\r\n\r\n            editor.ui.addInitialBlock();\r\n            return;\r\n\r\n        }\r\n\r\n        Promise.resolve()\r\n\r\n        /** First, get JSON from state */\r\n            .then(function () {\r\n\r\n                return editor.state.blocks;\r\n\r\n            })\r\n\r\n            /** Then, start to iterate they */\r\n            .then(editor.renderer.appendBlocks)\r\n\r\n            /** Write log if something goes wrong */\r\n            .catch(function (error) {\r\n\r\n                editor.core.log('Error while parsing JSON: %o', 'error', error);\r\n\r\n            });\r\n\r\n    };\r\n\r\n    /**\r\n     * Parses JSON to blocks\r\n     * @param {object} data\r\n     * @return Primise -> nodeList\r\n     */\r\n    renderer.appendBlocks = function (data) {\r\n\r\n        var blocks = data.items;\r\n\r\n        /**\r\n         * Sequence of one-by-one blocks appending\r\n         * Uses to save blocks order after async-handler\r\n         */\r\n        var nodeSequence = Promise.resolve();\r\n\r\n        for (var index = 0; index < blocks.length ; index++ ) {\r\n\r\n            /** Add node to sequence at specified index */\r\n            editor.renderer.appendNodeAtIndex(nodeSequence, blocks, index);\r\n\r\n        }\r\n\r\n    };\r\n\r\n    /**\r\n     * Append node at specified index\r\n     */\r\n    renderer.appendNodeAtIndex = function (nodeSequence, blocks, index) {\r\n\r\n        /** We need to append node to sequence */\r\n        nodeSequence\r\n\r\n        /** first, get node async-aware */\r\n            .then(function () {\r\n\r\n                return editor.renderer.getNodeAsync(blocks, index);\r\n\r\n            })\r\n\r\n            /**\r\n             * second, compose editor-block from JSON object\r\n             */\r\n            .then(editor.renderer.createBlockFromData)\r\n\r\n            /**\r\n             * now insert block to redactor\r\n             */\r\n            .then(function (blockData) {\r\n\r\n                /**\r\n                 * blockData has 'block', 'type' and 'stretched' information\r\n                 */\r\n                editor.content.insertBlock(blockData);\r\n\r\n                /** Pass created block to next step */\r\n                return blockData.block;\r\n\r\n            })\r\n\r\n            /** Log if something wrong with node */\r\n            .catch(function (error) {\r\n\r\n                editor.core.log('Node skipped while parsing because %o', 'error', error);\r\n\r\n            });\r\n\r\n    };\r\n\r\n    /**\r\n     * Asynchronously returns block data from blocksList by index\r\n     * @return Promise to node\r\n     */\r\n    renderer.getNodeAsync = function (blocksList, index) {\r\n\r\n        return Promise.resolve().then(function () {\r\n\r\n            return blocksList[index];\r\n\r\n        });\r\n\r\n    };\r\n\r\n    /**\r\n     * Creates editor block by JSON-data\r\n     *\r\n     * @uses render method of each plugin\r\n     *\r\n     * @param {object} blockData looks like\r\n     *                            { header : {\r\n     *                                            text: '',\r\n     *                                            type: 'H3', ...\r\n     *                                        }\r\n     *                            }\r\n     * @return {object} with type and Element\r\n     */\r\n    renderer.createBlockFromData = function (blockData) {\r\n\r\n        /** New parser */\r\n        var pluginName = blockData.type,\r\n            cover      = blockData.cover;\r\n\r\n        /** Get first key of object that stores plugin name */\r\n        // for (var pluginName in blockData) break;\r\n\r\n        /** Check for plugin existance */\r\n        if (!editor.tools[pluginName]) {\r\n\r\n            throw Error(`Plugin «${pluginName}» not found`);\r\n\r\n        }\r\n\r\n        /** Check for plugin having render method */\r\n        if (typeof editor.tools[pluginName].render != 'function') {\r\n\r\n            throw Error(`Plugin «${pluginName}» must have «render» method`);\r\n\r\n        }\r\n\r\n        /** New Parser */\r\n        var block = editor.tools[pluginName].render(blockData.data);\r\n\r\n        /** is first-level block stretched */\r\n        var stretched = editor.tools[pluginName].isStretched || false;\r\n\r\n        /** Retrun type and block */\r\n        return {\r\n            type      : pluginName,\r\n            block     : block,\r\n            stretched : stretched,\r\n            cover     : cover\r\n        };\r\n\r\n    };\r\n\r\n    return renderer;\r\n\r\n})({});\n\n\n// WEBPACK FOOTER //\n// ./modules/renderer.js","/**\r\n * Codex Editor Saver\r\n *\r\n * @author Codex Team\r\n * @version 1.0.2\r\n */\r\n\r\nvar saver = (function(saver) {\r\n\r\n    /**\r\n     * Saves blocks\r\n     * @private\r\n     */\r\n    saver.saveBlocks = function () {\r\n\r\n        /** Save html content of redactor to memory */\r\n        codex.state.html = codex.nodes.redactor.innerHTML;\r\n\r\n        /** Empty jsonOutput state */\r\n        codex.state.jsonOutput = [];\r\n\r\n        Promise.resolve()\r\n\r\n            .then(function() {\r\n                return codex.nodes.redactor.childNodes;\r\n            })\r\n            /** Making a sequence from separate blocks */\r\n            .then(codex.saver.makeQueue)\r\n\r\n            .then(function() {\r\n                // codex.nodes.textarea.innerHTML = codex.state.html;\r\n            })\r\n\r\n            .catch( function(error) {\r\n                console.log('Something happend');\r\n            });\r\n\r\n    };\r\n\r\n    saver.makeQueue = function(blocks) {\r\n\r\n        var queue = Promise.resolve();\r\n\r\n        for(var index = 0; index < blocks.length; index++) {\r\n\r\n            /** Add node to sequence at specified index */\r\n            codex.saver.getBlockData(queue, blocks, index);\r\n\r\n        }\r\n\r\n    };\r\n\r\n    /** Gets every block and makes From Data */\r\n    saver.getBlockData = function(queue, blocks, index) {\r\n\r\n        queue.then(function() {\r\n            return codex.saver.getNodeAsync(blocks, index);\r\n        })\r\n\r\n            .then(codex.saver.makeFormDataFromBlocks);\r\n\r\n    };\r\n\r\n\r\n    /**\r\n     * Asynchronously returns block data from blocksList by index\r\n     * @return Promise to node\r\n     */\r\n    saver.getNodeAsync = function (blocksList, index) {\r\n\r\n        return Promise.resolve().then(function() {\r\n\r\n            return blocksList[index];\r\n\r\n        });\r\n    };\r\n\r\n    saver.makeFormDataFromBlocks = function(block) {\r\n\r\n        var pluginName = block.dataset.tool,\r\n            id         = block.dataset.id;\r\n\r\n        /** Check for plugin existance */\r\n        if (!codex.tools[pluginName]) {\r\n            throw Error(`Plugin «${pluginName}» not found`);\r\n        }\r\n\r\n        /** Check for plugin having render method */\r\n        if (typeof codex.tools[pluginName].save != 'function') {\r\n\r\n            throw Error(`Plugin «${pluginName}» must have save method`);\r\n        }\r\n\r\n        /** Result saver */\r\n        var blockContent   = block.childNodes[0],\r\n            pluginsContent = blockContent.childNodes[0],\r\n            savedData      = codex.tools[pluginName].save(pluginsContent),\r\n            output;\r\n\r\n\r\n        output = {\r\n            id  : id,\r\n            type: pluginName,\r\n            data: savedData\r\n        };\r\n\r\n        if (codex.tools[pluginName].validate) {\r\n            var result = codex.tools[pluginName].validate(savedData);\r\n\r\n            /**\r\n             * Do not allow invalid data\r\n             */\r\n            if (!result)\r\n                return;\r\n        }\r\n        \r\n        /** Marks Blocks that will be in main page */\r\n        output.cover = block.classList.contains(codex.ui.className.BLOCK_IN_FEED_MODE);\r\n\r\n        codex.state.jsonOutput.push(output);\r\n    };\r\n\r\n    saver.saveComments = function() {\r\n\r\n        var fields     = codex.nodes.commentsSidebar.querySelectorAll('.ce-comments-field');\r\n\r\n        for (var i = 0 ; i < fields.length; i++) {\r\n\r\n            var comments     = fields[i].querySelectorAll('.ce-comment'),\r\n                commentsData = [];\r\n\r\n            for (var j = 0; j < comments.length; j++) {\r\n\r\n                var text = comments[j].querySelector('.ce-comment__text'),\r\n                    time = comments[j].querySelector('.ce-comment__time');\r\n\r\n                if (!text) continue;\r\n\r\n                var comment = {\r\n                        edited  : comments[j].dataset.edited,\r\n                        text    : text.textContent,\r\n                        time    : time.textContent\r\n                };\r\n\r\n\r\n                commentsData.push(comment);\r\n            }\r\n\r\n            if (!commentsData.length) continue;\r\n\r\n            var fieldData = {\r\n                    blockId  : fields[i].dataset.blockId,\r\n                    comments : commentsData\r\n            };\r\n\r\n            codex.state.comments.push(fieldData);\r\n\r\n        }\r\n\r\n    };\r\n\r\n    return saver;\r\n\r\n})({});\r\n\r\nmodule.exports = saver;\n\n\n// WEBPACK FOOTER //\n// ./modules/saver.js","/**\r\n * Codex Editor Content Module\r\n * Works with DOM\r\n *\r\n * @author Codex Team\r\n * @version 1.3.11\r\n */\r\n\r\nvar content = (function(content) {\r\n\r\n    /**\r\n     * Links to current active block\r\n     * @type {null | Element}\r\n     */\r\n    content.currentNode = null;\r\n\r\n    /**\r\n     * clicked in redactor area\r\n     * @type {null | Boolean}\r\n     */\r\n    content.editorAreaHightlighted = null;\r\n\r\n    /**\r\n     * Synchronizes redactor with original textarea\r\n     */\r\n    content.sync = function () {\r\n\r\n        codex.core.log('syncing...');\r\n\r\n        /**\r\n         * Save redactor content to codex.state\r\n         */\r\n        codex.state.html = codex.nodes.redactor.innerHTML;\r\n\r\n    };\r\n\r\n    /**\r\n     * @deprecated\r\n     */\r\n    content.getNodeFocused = function() {\r\n\r\n        var selection = window.getSelection(),\r\n            focused;\r\n\r\n        if (selection.anchorNode === null) {\r\n            return null;\r\n        }\r\n\r\n        if ( selection.anchorNode.nodeType == codex.core.nodeTypes.TAG ) {\r\n            focused = selection.anchorNode;\r\n        } else {\r\n            focused = selection.focusNode.parentElement;\r\n        }\r\n\r\n        if ( !codex.parser.isFirstLevelBlock(focused) ) {\r\n\r\n            /** Iterate with parent nodes to find first-level*/\r\n            var parent = focused.parentNode;\r\n\r\n            while (parent && !codex.parser.isFirstLevelBlock(parent)){\r\n                parent = parent.parentNode;\r\n            }\r\n\r\n            focused = parent;\r\n        }\r\n\r\n        if (focused != codex.nodes.redactor){\r\n            return focused;\r\n        }\r\n\r\n        return null;\r\n\r\n    };\r\n\r\n    /**\r\n     * Appends background to the block\r\n     */\r\n    content.markBlock = function() {\r\n\r\n        codex.content.currentNode.classList.add(codex.ui.className.BLOCK_HIGHLIGHTED);\r\n    };\r\n\r\n    /**\r\n     * Clear background\r\n     */\r\n    content.clearMark = function() {\r\n\r\n        if (codex.content.currentNode) {\r\n            codex.content.currentNode.classList.remove(codex.ui.className.BLOCK_HIGHLIGHTED);\r\n        }\r\n\r\n    };\r\n\r\n    /**\r\n     * @private\r\n     *\r\n     * Finds first-level block\r\n     * @param {Element} node - selected or clicked in redactors area node\r\n     */\r\n    content.getFirstLevelBlock = function(node) {\r\n\r\n        if (!codex.core.isDomNode(node)) {\r\n            node = node.parentNode;\r\n        }\r\n\r\n        if (node === codex.nodes.redactor || node === document.body) {\r\n\r\n            return null;\r\n\r\n        } else {\r\n\r\n            while(!node.classList.contains(codex.ui.className.BLOCK_CLASSNAME)) {\r\n                node = node.parentNode;\r\n            }\r\n\r\n            return node;\r\n        }\r\n\r\n    };\r\n\r\n    /**\r\n     * Trigger this event when working node changed\r\n     * @param {Element} targetNode - first-level of this node will be current\r\n     * If targetNode is first-level then we set it as current else we look for parents to find first-level\r\n     */\r\n    content.workingNodeChanged = function (targetNode) {\r\n\r\n        /** Clear background from previous marked block before we change */\r\n        codex.content.clearMark();\r\n\r\n        if (!targetNode) {\r\n            return;\r\n        }\r\n\r\n        this.currentNode = this.getFirstLevelBlock(targetNode);\r\n\r\n    };\r\n\r\n    /**\r\n     * Replaces one redactor block with another\r\n     * @protected\r\n     * @param {Element} targetBlock - block to replace. Mostly currentNode.\r\n     * @param {Element} newBlock\r\n     * @param {string} newBlockType - type of new block; we need to store it to data-attribute\r\n     *\r\n     * [!] Function does not saves old block content.\r\n     *     You can get it manually and pass with newBlock.innerHTML\r\n     */\r\n    content.replaceBlock = function function_name(targetBlock, newBlock) {\r\n\r\n        if (!targetBlock || !newBlock){\r\n            codex.core.log('replaceBlock: missed params');\r\n            return;\r\n        }\r\n\r\n        /** If target-block is not a frist-level block, then we iterate parents to find it */\r\n        while(!targetBlock.classList.contains(codex.ui.className.BLOCK_CLASSNAME)) {\r\n            targetBlock = targetBlock.parentNode;\r\n        }\r\n\r\n        /**\r\n         * Check is this block was in feed\r\n         * If true, than set switched block also covered\r\n         */\r\n        if (targetBlock.classList.contains(codex.ui.className.BLOCK_IN_FEED_MODE)) {\r\n            newBlock.classList.add(codex.ui.className.BLOCK_IN_FEED_MODE);\r\n        }\r\n\r\n        /** Saving id */\r\n        newBlock.dataset.id = targetBlock.dataset.id;\r\n\r\n        /** Replacing */\r\n        codex.nodes.redactor.replaceChild(newBlock, targetBlock);\r\n\r\n        /**\r\n         * Set new node as current\r\n         */\r\n        codex.content.workingNodeChanged(newBlock);\r\n\r\n        /**\r\n         * Add block handlers\r\n         */\r\n        codex.ui.addBlockHandlers(newBlock);\r\n\r\n        /**\r\n         * Save changes\r\n         */\r\n        codex.ui.saveInputs();\r\n\r\n    };\r\n\r\n    /**\r\n     * @private\r\n     *\r\n     * Inserts new block to redactor\r\n     * Wrapps block into a DIV with BLOCK_CLASSNAME class\r\n     *\r\n     * @param blockData          {object}\r\n     * @param blockData.block    {Element}   element with block content\r\n     * @param blockData.type     {string}    block plugin\r\n     * @param needPlaceCaret     {bool}      pass true to set caret in new block\r\n     *\r\n     */\r\n    content.insertBlock = function( blockData, needPlaceCaret ) {\r\n\r\n        var workingBlock    = codex.content.currentNode,\r\n            newBlockContent = blockData.block,\r\n            blockType       = blockData.type,\r\n            cover           = blockData.cover,\r\n            isStretched     = blockData.stretched;\r\n\r\n        var newBlock = codex.content.composeNewBlock(newBlockContent, blockType, isStretched);\r\n\r\n        if (cover === true) {\r\n            newBlock.classList.add(codex.ui.className.BLOCK_IN_FEED_MODE);\r\n        }\r\n\r\n        if (workingBlock) {\r\n\r\n            codex.core.insertAfter(workingBlock, newBlock);\r\n\r\n        } else {\r\n            /**\r\n             * If redactor is empty, append as first child\r\n             */\r\n            codex.nodes.redactor.appendChild(newBlock);\r\n\r\n        }\r\n\r\n        /**\r\n         * Block handler\r\n         */\r\n        codex.ui.addBlockHandlers(newBlock);\r\n\r\n        /**\r\n         * Set new node as current\r\n         */\r\n        codex.content.workingNodeChanged(newBlock);\r\n\r\n        /**\r\n         * Save changes\r\n         */\r\n        codex.ui.saveInputs();\r\n\r\n\r\n        if ( needPlaceCaret ) {\r\n\r\n            /**\r\n             * If we don't know input index then we set default value -1\r\n             */\r\n            var currentInputIndex = codex.caret.getCurrentInputIndex() || -1;\r\n\r\n\r\n            if (currentInputIndex == -1) {\r\n\r\n\r\n                var editableElement = newBlock.querySelector('[contenteditable]'),\r\n                    emptyText       = document.createTextNode('');\r\n\r\n                editableElement.appendChild(emptyText);\r\n                codex.caret.set(editableElement, 0, 0);\r\n\r\n                codex.toolbar.move();\r\n                codex.toolbar.showPlusButton();\r\n\r\n\r\n            } else {\r\n\r\n                if (currentInputIndex === codex.state.inputs.length - 1)\r\n                    return;\r\n\r\n                /** Timeout for browsers execution */\r\n                setTimeout(function () {\r\n\r\n                    /** Setting to the new input */\r\n                    codex.caret.setToNextBlock(currentInputIndex);\r\n                    codex.toolbar.move();\r\n                    codex.toolbar.open();\r\n\r\n                }, 10);\r\n\r\n            }\r\n\r\n        }\r\n\r\n        /**\r\n         * Block is inserted, wait for new click that defined focusing on editors area\r\n         * @type {boolean}\r\n         */\r\n        content.editorAreaHightlighted = false;\r\n\r\n    };\r\n\r\n    /**\r\n     * Replaces blocks with saving content\r\n     * @protected\r\n     * @param {Element} noteToReplace\r\n     * @param {Element} newNode\r\n     * @param {Element} blockType\r\n     */\r\n    content.switchBlock = function(blockToReplace, newBlock, tool){\r\n\r\n        var newBlockComposed = codex.content.composeNewBlock(newBlock, tool);\r\n\r\n        /** Replacing */\r\n        codex.content.replaceBlock(blockToReplace, newBlockComposed);\r\n\r\n        /** Save new Inputs when block is changed */\r\n        codex.ui.saveInputs();\r\n    };\r\n\r\n    /**\r\n     * Iterates between child noted and looking for #text node on deepest level\r\n     * @private\r\n     * @param {Element} block - node where find\r\n     * @param {int} postiton - starting postion\r\n     *      Example: childNodex.length to find from the end\r\n     *               or 0 to find from the start\r\n     * @return {Text} block\r\n     * @uses DFS\r\n     */\r\n    content.getDeepestTextNodeFromPosition = function (block, position) {\r\n\r\n        /**\r\n         * Clear Block from empty and useless spaces with trim.\r\n         * Such nodes we should remove\r\n         */\r\n        var blockChilds = block.childNodes,\r\n            index,\r\n            node,\r\n            text;\r\n\r\n        for(index = 0; index < blockChilds.length; index++)\r\n        {\r\n            node = blockChilds[index];\r\n\r\n            if (node.nodeType == codex.core.nodeTypes.TEXT) {\r\n\r\n                text = node.textContent.trim();\r\n\r\n                /** Text is empty. We should remove this child from node before we start DFS\r\n                 * decrease the quantity of childs.\r\n                 */\r\n                if (text === '') {\r\n\r\n                    block.removeChild(node);\r\n                    position--;\r\n                }\r\n            }\r\n        }\r\n\r\n        if (block.childNodes.length === 0) {\r\n            return document.createTextNode('');\r\n        }\r\n\r\n        /** Setting default position when we deleted all empty nodes */\r\n        if ( position < 0 )\r\n            position = 1;\r\n\r\n        var looking_from_start = false;\r\n\r\n        /** For looking from START */\r\n        if (position === 0) {\r\n            looking_from_start = true;\r\n            position = 1;\r\n        }\r\n\r\n        while ( position ) {\r\n\r\n            /** initial verticle of node. */\r\n            if ( looking_from_start ) {\r\n                block = block.childNodes[0];\r\n            } else {\r\n                block = block.childNodes[position - 1];\r\n            }\r\n\r\n            if ( block.nodeType == codex.core.nodeTypes.TAG ){\r\n\r\n                position = block.childNodes.length;\r\n\r\n            } else if (block.nodeType == codex.core.nodeTypes.TEXT ){\r\n\r\n                position = 0;\r\n            }\r\n\r\n        }\r\n\r\n        return block;\r\n    };\r\n\r\n    /**\r\n     * @private\r\n     */\r\n    content.composeNewBlock = function (block, tool, isStretched) {\r\n\r\n        var newBlock     = codex.draw.node('DIV', codex.ui.className.BLOCK_CLASSNAME, {}),\r\n            blockContent = codex.draw.node('DIV', codex.ui.className.BLOCK_CONTENT, {});\r\n\r\n        blockContent.appendChild(block);\r\n        newBlock.appendChild(blockContent);\r\n\r\n        if (isStretched) {\r\n            blockContent.classList.add(codex.ui.className.BLOCK_STRETCHED);\r\n        }\r\n\r\n        newBlock.dataset.tool = tool;\r\n        newBlock.dataset.id  = +new Date();\r\n\r\n        return newBlock;\r\n    };\r\n\r\n    /**\r\n     * Returns Range object of current selection\r\n     */\r\n    content.getRange = function() {\r\n\r\n        var selection = window.getSelection().getRangeAt(0);\r\n\r\n        return selection;\r\n    };\r\n\r\n    /**\r\n     * Divides block in two blocks (after and before caret)\r\n     * @private\r\n     * @param {Int} inputIndex - target input index\r\n     */\r\n    content.splitBlock = function(inputIndex) {\r\n\r\n        var selection      = window.getSelection(),\r\n            anchorNode     = selection.anchorNode,\r\n            anchorNodeText = anchorNode.textContent,\r\n            caretOffset    = selection.anchorOffset,\r\n            textBeforeCaret,\r\n            textNodeBeforeCaret,\r\n            textAfterCaret,\r\n            textNodeAfterCaret;\r\n\r\n        var currentBlock = codex.content.currentNode.querySelector('[contentEditable]');\r\n\r\n\r\n        textBeforeCaret     = anchorNodeText.substring(0, caretOffset);\r\n        textAfterCaret      = anchorNodeText.substring(caretOffset);\r\n\r\n        textNodeBeforeCaret = document.createTextNode(textBeforeCaret);\r\n\r\n        if (textAfterCaret) {\r\n            textNodeAfterCaret  = document.createTextNode(textAfterCaret);\r\n        }\r\n\r\n        var previousChilds = [],\r\n            nextChilds     = [],\r\n            reachedCurrent = false;\r\n\r\n        if (textNodeAfterCaret) {\r\n            nextChilds.push(textNodeAfterCaret);\r\n        }\r\n\r\n        for ( var i = 0, child; !!(child = currentBlock.childNodes[i]); i++) {\r\n\r\n            if ( child != anchorNode ) {\r\n                if ( !reachedCurrent ){\r\n                    previousChilds.push(child);\r\n                } else {\r\n                    nextChilds.push(child);\r\n                }\r\n            } else {\r\n                reachedCurrent = true;\r\n            }\r\n\r\n        }\r\n\r\n        /** Clear current input */\r\n        codex.state.inputs[inputIndex].innerHTML = '';\r\n\r\n        /**\r\n         * Append all childs founded before anchorNode\r\n         */\r\n        var previousChildsLength = previousChilds.length;\r\n\r\n        for(i = 0; i < previousChildsLength; i++) {\r\n            codex.state.inputs[inputIndex].appendChild(previousChilds[i]);\r\n        }\r\n\r\n        codex.state.inputs[inputIndex].appendChild(textNodeBeforeCaret);\r\n\r\n        /**\r\n         * Append text node which is after caret\r\n         */\r\n        var nextChildsLength = nextChilds.length,\r\n            newNode          = document.createElement('div');\r\n\r\n        for(i = 0; i < nextChildsLength; i++) {\r\n            newNode.appendChild(nextChilds[i]);\r\n        }\r\n\r\n        newNode = newNode.innerHTML;\r\n\r\n        /** This type of block creates when enter is pressed */\r\n        var NEW_BLOCK_TYPE = codex.settings.initialBlockPlugin;\r\n\r\n        /**\r\n         * Make new paragraph with text after caret\r\n         */\r\n        codex.content.insertBlock({\r\n            type  : NEW_BLOCK_TYPE,\r\n            block : codex.tools[NEW_BLOCK_TYPE].render({\r\n                text : newNode\r\n            })\r\n        }, true );\r\n\r\n    };\r\n\r\n    /**\r\n     * Merges two blocks — current and target\r\n     * If target index is not exist, then previous will be as target\r\n     */\r\n    content.mergeBlocks = function(currentInputIndex, targetInputIndex) {\r\n\r\n        /** If current input index is zero, then prevent method execution */\r\n        if (currentInputIndex === 0) {\r\n            return;\r\n        }\r\n\r\n        var targetInput,\r\n            currentInputContent = codex.state.inputs[currentInputIndex].innerHTML;\r\n\r\n        if (!targetInputIndex) {\r\n\r\n            targetInput = codex.state.inputs[currentInputIndex - 1];\r\n\r\n        } else {\r\n\r\n            targetInput = codex.state.inputs[targetInputIndex];\r\n\r\n        }\r\n\r\n        targetInput.innerHTML += currentInputContent;\r\n    };\r\n\r\n    /**\r\n     * @private\r\n     *\r\n     * Callback for HTML Mutations\r\n     * @param {Array} mutation - Mutation Record\r\n     */\r\n    content.paste = function(mutation) {\r\n\r\n        var workingNode = codex.content.currentNode,\r\n            tool        = workingNode.dataset.tool;\r\n\r\n        if (codex.tools[tool].allowedToPaste) {\r\n            codex.content.sanitize.call(this, mutation.target);\r\n        } else {\r\n            codex.content.pasteTextContent(mutation.addedNodes);\r\n        }\r\n\r\n    };\r\n\r\n    /**\r\n     * @private\r\n     *\r\n     * gets only text/plain content of node\r\n     * @param {Element} target - HTML node\r\n     */\r\n    content.pasteTextContent = function(nodes) {\r\n\r\n        var node = nodes[0],\r\n            textNode;\r\n\r\n        if (!node) {\r\n            return;\r\n        }\r\n\r\n        if (node.nodeType == codex.core.nodeTypes.TEXT) {\r\n            textNode = document.createTextNode(node);\r\n        } else {\r\n            textNode = document.createTextNode(node.textContent);\r\n        }\r\n\r\n        if (codex.core.isDomNode(node)) {\r\n            node.parentNode.replaceChild(textNode, node);\r\n        }\r\n    };\r\n\r\n    /**\r\n     * @private\r\n     *\r\n     * Sanitizes HTML content\r\n     * @param {Element} target - inserted element\r\n     * @uses Sanitize library html-janitor\r\n     */\r\n    content.sanitize = function(target) {\r\n\r\n        if (!target) {\r\n            return;\r\n        }\r\n\r\n        var node = target[0];\r\n\r\n        if (!node) {\r\n            return;\r\n        }\r\n\r\n        /**\r\n         * Disconnect Observer\r\n         * hierarchy of function calls inherits context of observer\r\n         */\r\n        this.disconnect();\r\n\r\n        /**\r\n         * Don't sanitize text node\r\n         */\r\n        if (node.nodeType == codex.core.nodeTypes.TEXT) {\r\n            return;\r\n        }\r\n\r\n        /**\r\n         * Clear dirty content\r\n         */\r\n        var cleaner = codex.sanitizer.init(codex.satinizer.Config.BASIC),\r\n            clean = cleaner.clean(target.outerHTML);\r\n\r\n        var div = codex.draw.node('DIV', [], { innerHTML: clean });\r\n        node.replaceWith(div.childNodes[0]);\r\n\r\n\r\n    };\r\n\r\n    /**\r\n     * Iterates all right siblings and parents, which has right siblings\r\n     * while it does not reached the first-level block\r\n     *\r\n     * @param {Element} node\r\n     * @return {boolean}\r\n     */\r\n    content.isLastNode = function(node) {\r\n\r\n        // console.log('погнали перебор родителей');\r\n\r\n        var allChecked = false;\r\n\r\n        while ( !allChecked ) {\r\n\r\n            // console.log('Смотрим на %o', node);\r\n            // console.log('Проверим, пустые ли соседи справа');\r\n\r\n            if ( !allSiblingsEmpty_(node) ){\r\n\r\n                // console.log('Есть непустые соседи. Узел не последний. Выходим.');\r\n                return false;\r\n\r\n            }\r\n\r\n            node = node.parentNode;\r\n\r\n            /**\r\n             * Проверяем родителей до тех пор, пока не найдем блок первого уровня\r\n             */\r\n            if ( node.classList.contains(codex.ui.className.BLOCK_CONTENT) ){\r\n                allChecked = true;\r\n            }\r\n\r\n        }\r\n\r\n        return true;\r\n\r\n    };\r\n\r\n    /**\r\n     * Checks if all element right siblings is empty\r\n     * @param node\r\n     */\r\n    var allSiblingsEmpty_ = function (node) {\r\n\r\n        /**\r\n         * Нужно убедиться, что после пустого соседа ничего нет\r\n         */\r\n        var sibling = node.nextSibling;\r\n\r\n        while ( sibling ) {\r\n\r\n            if (sibling.textContent.length){\r\n\r\n                return false;\r\n\r\n            }\r\n\r\n            sibling = sibling.nextSibling;\r\n\r\n        }\r\n\r\n        return true;\r\n\r\n    };\r\n\r\n    /**\r\n     * @public\r\n     *\r\n     * @param [String] htmlString - html content as string\r\n     * @return {string} - html content as string\r\n     */\r\n    content.wrapTextWithParagraphs = function(htmlString) {\r\n\r\n        var wrapper = document.createElement('DIV'),\r\n            newWrapper = document.createElement('DIV'),\r\n            i,\r\n            paragraph,\r\n            firstLevelBlocks = ['DIV', 'P'],\r\n            blockTyped,\r\n            node;\r\n\r\n        /**\r\n         * Make HTML Element to Wrap Text\r\n         * It allows us to work with input data as HTML content\r\n         */\r\n        wrapper.innerHTML = htmlString;\r\n        paragraph = document.createElement('P');\r\n\r\n        for (i = 0; i < wrapper.childNodes.length; i++) {\r\n\r\n            node = wrapper.childNodes[i];\r\n\r\n            blockTyped = firstLevelBlocks.indexOf(node.tagName) != -1;\r\n\r\n            /**\r\n             * If node is first-levet\r\n             * we add this node to our new wrapper\r\n             */\r\n            if ( blockTyped ) {\r\n\r\n                /**\r\n                 * If we had splitted inline nodes to paragraph before\r\n                 */\r\n                if ( paragraph.childNodes.length ){\r\n\r\n                    newWrapper.appendChild(paragraph.cloneNode(true));\r\n\r\n                    /** empty paragraph */\r\n                    paragraph = null;\r\n                    paragraph = document.createElement('P');\r\n\r\n                }\r\n\r\n                newWrapper.appendChild(node.cloneNode(true));\r\n\r\n            } else {\r\n\r\n                /** Collect all inline nodes to one as paragraph */\r\n                paragraph.appendChild(node.cloneNode(true));\r\n\r\n                /** if node is last we should append this node to paragraph and paragraph to new wrapper */\r\n                if ( i == wrapper.childNodes.length - 1 ){\r\n                    newWrapper.appendChild(paragraph.cloneNode(true));\r\n                }\r\n            }\r\n        }\r\n\r\n        return newWrapper.innerHTML;\r\n\r\n    };\r\n\r\n    return content;\r\n\r\n})({});\r\n\r\nmodule.exports = content;\n\n\n// WEBPACK FOOTER //\n// ./modules/content.js","/**\r\n * Codex Editor toolbar module\r\n *\r\n * Contains:\r\n *  - Inline toolbox\r\n *  - Toolbox within plus button\r\n *  - Settings section\r\n *\r\n * @author Codex Team\r\n * @version 1.0\r\n */\r\n\r\nlet editor = codex.editor;\r\n\r\nmodule.exports = (function (toolbar) {\r\n\r\n    toolbar.settings = require('./settings');\r\n    toolbar.inline   = require('./inline');\r\n    toolbar.toolbox  = require('./toolbox');\r\n\r\n    /**\r\n     * Margin between focused node and toolbar\r\n     */\r\n    toolbar.defaultToolbarHeight = 49;\r\n\r\n    toolbar.defaultOffset = 34;\r\n\r\n    toolbar.opened = false;\r\n\r\n    toolbar.current = null;\r\n\r\n    /**\r\n     * @protected\r\n     */\r\n    toolbar.open = function () {\r\n\r\n        editor.nodes.toolbar.classList.add('opened');\r\n        this.opened = true;\r\n\r\n    };\r\n\r\n    /**\r\n     * @protected\r\n     */\r\n    toolbar.close = function () {\r\n\r\n        editor.nodes.toolbar.classList.remove('opened');\r\n\r\n        toolbar.opened  = false;\r\n        toolbar.current = null;\r\n\r\n        for (var button in editor.nodes.toolbarButtons) {\r\n\r\n            editor.nodes.toolbarButtons[button].classList.remove('selected');\r\n\r\n        }\r\n\r\n        /** Close toolbox when toolbar is not displayed */\r\n        editor.toolbar.toolbox.close();\r\n        editor.toolbar.settings.close();\r\n\r\n    };\r\n\r\n    toolbar.toggle = function () {\r\n\r\n        if ( !this.opened ) {\r\n\r\n            this.open();\r\n\r\n        } else {\r\n\r\n            this.close();\r\n\r\n        }\r\n\r\n    };\r\n\r\n    toolbar.hidePlusButton = function () {\r\n\r\n        editor.nodes.plusButton.classList.add('hide');\r\n\r\n    };\r\n\r\n    toolbar.showPlusButton = function () {\r\n\r\n        editor.nodes.plusButton.classList.remove('hide');\r\n\r\n    };\r\n\r\n    /**\r\n     * Moving toolbar to the specified node\r\n     */\r\n    toolbar.move = function () {\r\n\r\n        /** Close Toolbox when we move toolbar */\r\n        editor.toolbar.toolbox.close();\r\n\r\n        if (!editor.content.currentNode) {\r\n\r\n            return;\r\n\r\n        }\r\n\r\n        var newYCoordinate = editor.content.currentNode.offsetTop - (editor.toolbar.defaultToolbarHeight / 2) + editor.toolbar.defaultOffset;\r\n\r\n        editor.nodes.toolbar.style.transform = `translate3D(0, ${Math.floor(newYCoordinate)}px, 0)`;\r\n\r\n        /** Close trash actions */\r\n        editor.toolbar.settings.hideRemoveActions();\r\n\r\n    };\r\n\r\n    return toolbar;\r\n\r\n})({});\n\n\n// WEBPACK FOOTER //\n// ./modules/toolbar/toolbar.js","/**\r\n * Toolbar settings\r\n *\r\n * @version 1.0.4\r\n */\r\n\r\nlet editor = codex.editor;\r\n\r\nmodule.exports = (function (settings) {\r\n\r\n    settings.opened = false;\r\n\r\n    settings.setting = null;\r\n    settings.actions = null;\r\n\r\n    settings.cover = null;\r\n\r\n    /**\r\n     * Append and open settings\r\n     */\r\n    settings.open = function (toolType) {\r\n\r\n        /**\r\n         * Append settings content\r\n         * It's stored in tool.settings\r\n         */\r\n        if (!editor.tools[toolType] || !editor.tools[toolType].makeSettings ) {\r\n\r\n            editor.core.log(`Plugin «${toolType}» has no settings`, 'warn');\r\n            // editor.nodes.pluginSettings.innerHTML = `Плагин «${toolType}» не имеет настроек`;\r\n\r\n        } else {\r\n\r\n            /**\r\n             * Draw settings block\r\n             */\r\n            var settingsBlock = editor.tools[toolType].makeSettings();\r\n\r\n            editor.nodes.pluginSettings.appendChild(settingsBlock);\r\n\r\n        }\r\n\r\n        /** Open settings block */\r\n        editor.nodes.blockSettings.classList.add('opened');\r\n        editor.toolbar.settings.addDefaultSettings();\r\n        this.opened = true;\r\n\r\n    };\r\n\r\n    /**\r\n     * Close and clear settings\r\n     */\r\n    settings.close = function () {\r\n\r\n        editor.nodes.blockSettings.classList.remove('opened');\r\n        editor.nodes.pluginSettings.innerHTML = '';\r\n\r\n        this.opened = false;\r\n\r\n    };\r\n\r\n    /**\r\n     * @param {string} toolType - plugin type\r\n     */\r\n    settings.toggle = function ( toolType ) {\r\n\r\n        if ( !this.opened ) {\r\n\r\n            this.open(toolType);\r\n\r\n        } else {\r\n\r\n            this.close();\r\n\r\n        }\r\n\r\n    };\r\n\r\n    /**\r\n     * This function adds default core settings\r\n     */\r\n    settings.addDefaultSettings = function () {\r\n\r\n        /** list of default settings */\r\n        var feedModeToggler;\r\n\r\n        /** Clear block and append initialized settings */\r\n        editor.nodes.defaultSettings.innerHTML = '';\r\n\r\n\r\n        /** Init all default setting buttons */\r\n        feedModeToggler = editor.toolbar.settings.makeFeedModeToggler();\r\n\r\n        /**\r\n         * Fill defaultSettings\r\n         */\r\n\r\n        /**\r\n         * Button that enables/disables Feed-mode\r\n         * Feed-mode means that block will be showed in articles-feed like cover\r\n         */\r\n        editor.nodes.defaultSettings.appendChild(feedModeToggler);\r\n\r\n    };\r\n\r\n    /**\r\n     * Cover setting.\r\n     * This tune highlights block, so that it may be used for showing target block on main page\r\n     * Draw different setting when block is marked for main page\r\n     * If TRUE, then we show button that removes this selection\r\n     * Also defined setting \"Click\" events will be listened and have separate callbacks\r\n     *\r\n     * @return {Element} node/button that we place in default settings block\r\n     */\r\n    settings.makeFeedModeToggler = function () {\r\n\r\n        var isFeedModeActivated = editor.toolbar.settings.isFeedModeActivated(),\r\n            setting,\r\n            data;\r\n\r\n        if (!isFeedModeActivated) {\r\n\r\n            data = {\r\n                innerHTML : '<i class=\"ce-icon-newspaper\"></i>Вывести в ленте'\r\n            };\r\n\r\n        } else {\r\n\r\n            data = {\r\n                innerHTML : '<i class=\"ce-icon-newspaper\"></i>Не выводить в ленте'\r\n            };\r\n\r\n        }\r\n\r\n        setting = editor.draw.node('DIV', editor.ui.className.SETTINGS_ITEM, data);\r\n        setting.addEventListener('click', editor.toolbar.settings.updateFeedMode, false);\r\n\r\n        return setting;\r\n\r\n    };\r\n\r\n    /**\r\n     * Updates Feed-mode\r\n     */\r\n    settings.updateFeedMode = function () {\r\n\r\n        var currentNode = editor.content.currentNode;\r\n\r\n        currentNode.classList.toggle(editor.ui.className.BLOCK_IN_FEED_MODE);\r\n\r\n        editor.toolbar.settings.close();\r\n\r\n    };\r\n\r\n    settings.isFeedModeActivated = function () {\r\n\r\n        var currentBlock = editor.content.currentNode;\r\n\r\n        if (currentBlock) {\r\n\r\n            return currentBlock.classList.contains(editor.ui.className.BLOCK_IN_FEED_MODE);\r\n\r\n        } else {\r\n\r\n            return false;\r\n\r\n        }\r\n\r\n    };\r\n\r\n    /**\r\n     * Here we will draw buttons and add listeners to components\r\n     */\r\n    settings.makeRemoveBlockButton = function () {\r\n\r\n        var removeBlockWrapper  = editor.draw.node('SPAN', 'ce-toolbar__remove-btn', {}),\r\n            settingButton = editor.draw.node('SPAN', 'ce-toolbar__remove-setting', { innerHTML : '<i class=\"ce-icon-trash\"></i>' }),\r\n            actionWrapper = editor.draw.node('DIV', 'ce-toolbar__remove-confirmation', {}),\r\n            confirmAction = editor.draw.node('DIV', 'ce-toolbar__remove-confirm', { textContent : 'Удалить блок' }),\r\n            cancelAction  = editor.draw.node('DIV', 'ce-toolbar__remove-cancel', { textContent : 'Отмена' });\r\n\r\n        settingButton.addEventListener('click', editor.toolbar.settings.removeButtonClicked, false);\r\n\r\n        confirmAction.addEventListener('click', editor.toolbar.settings.confirmRemovingRequest, false);\r\n\r\n        cancelAction.addEventListener('click', editor.toolbar.settings.cancelRemovingRequest, false);\r\n\r\n        actionWrapper.appendChild(confirmAction);\r\n        actionWrapper.appendChild(cancelAction);\r\n\r\n        removeBlockWrapper.appendChild(settingButton);\r\n        removeBlockWrapper.appendChild(actionWrapper);\r\n\r\n        /** Save setting */\r\n        editor.toolbar.settings.setting = settingButton;\r\n        editor.toolbar.settings.actions = actionWrapper;\r\n\r\n        return removeBlockWrapper;\r\n\r\n    };\r\n\r\n    settings.removeButtonClicked = function () {\r\n\r\n        var action = editor.toolbar.settings.actions;\r\n\r\n        if (action.classList.contains('opened')) {\r\n\r\n            editor.toolbar.settings.hideRemoveActions();\r\n\r\n        } else {\r\n\r\n            editor.toolbar.settings.showRemoveActions();\r\n\r\n        }\r\n\r\n        editor.toolbar.toolbox.close();\r\n        editor.toolbar.settings.close();\r\n\r\n    };\r\n\r\n    settings.cancelRemovingRequest = function () {\r\n\r\n        editor.toolbar.settings.actions.classList.remove('opened');\r\n\r\n    };\r\n\r\n    settings.confirmRemovingRequest = function () {\r\n\r\n        var currentBlock = editor.content.currentNode,\r\n            firstLevelBlocksCount;\r\n\r\n        currentBlock.remove();\r\n\r\n        firstLevelBlocksCount = editor.nodes.redactor.childNodes.length;\r\n\r\n        /**\r\n         * If all blocks are removed\r\n         */\r\n        if (firstLevelBlocksCount === 0) {\r\n\r\n            /** update currentNode variable */\r\n            editor.content.currentNode = null;\r\n\r\n            /** Inserting new empty initial block */\r\n            editor.ui.addInitialBlock();\r\n\r\n        }\r\n\r\n        editor.ui.saveInputs();\r\n\r\n        editor.toolbar.close();\r\n\r\n    };\r\n\r\n    settings.showRemoveActions = function () {\r\n\r\n        editor.toolbar.settings.actions.classList.add('opened');\r\n\r\n    };\r\n\r\n    settings.hideRemoveActions = function () {\r\n\r\n        editor.toolbar.settings.actions.classList.remove('opened');\r\n\r\n    };\r\n\r\n    return settings;\r\n\r\n})({});\n\n\n// WEBPACK FOOTER //\n// ./modules/toolbar/settings.js","/**\r\n * Inline toolbar\r\n *\r\n * Contains from tools:\r\n * Bold, Italic, Underline and Anchor\r\n *\r\n * @author Codex Team\r\n * @version 1.0\r\n */\r\n\r\nlet editor = codex.editor;\r\n\r\nmodule.exports = (function (inline) {\r\n\r\n    inline.buttonsOpened = null;\r\n    inline.actionsOpened = null;\r\n    inline.wrappersOffset = null;\r\n\r\n    /**\r\n     * saving selection that need for execCommand for styling\r\n     *\r\n     */\r\n    inline.storedSelection = null;\r\n\r\n    /**\r\n     * @protected\r\n     *\r\n     * Open inline toobar\r\n     */\r\n    inline.show = function () {\r\n\r\n        var currentNode = editor.content.currentNode,\r\n            tool = currentNode.dataset.tool,\r\n            plugin;\r\n\r\n        /**\r\n         * tool allowed to open inline toolbar\r\n         */\r\n        plugin = editor.tools[tool];\r\n\r\n        if (!plugin.showInlineToolbar)\r\n            return;\r\n\r\n        var selectedText = inline.getSelectionText(),\r\n            toolbar      = editor.nodes.inlineToolbar.wrapper;\r\n\r\n        if (selectedText.length > 0) {\r\n\r\n            /** Move toolbar and open */\r\n            editor.toolbar.inline.move();\r\n\r\n            /** Open inline toolbar */\r\n            toolbar.classList.add('opened');\r\n\r\n            /** show buttons of inline toolbar */\r\n            editor.toolbar.inline.showButtons();\r\n\r\n        }\r\n\r\n    };\r\n\r\n    /**\r\n     * @protected\r\n     *\r\n     * Closes inline toolbar\r\n     */\r\n    inline.close = function () {\r\n\r\n        var toolbar = editor.nodes.inlineToolbar.wrapper;\r\n\r\n        toolbar.classList.remove('opened');\r\n\r\n    };\r\n\r\n    /**\r\n     * @private\r\n     *\r\n     * Moving toolbar\r\n     */\r\n    inline.move = function () {\r\n\r\n        if (!this.wrappersOffset) {\r\n\r\n            this.wrappersOffset = this.getWrappersOffset();\r\n\r\n        }\r\n\r\n        var coords          = this.getSelectionCoords(),\r\n            defaultOffset   = 0,\r\n            toolbar         = editor.nodes.inlineToolbar.wrapper,\r\n            newCoordinateX,\r\n            newCoordinateY;\r\n\r\n        if (toolbar.offsetHeight === 0) {\r\n\r\n            defaultOffset = 40;\r\n\r\n        }\r\n\r\n        newCoordinateX = coords.x - this.wrappersOffset.left;\r\n        newCoordinateY = coords.y + window.scrollY - this.wrappersOffset.top - defaultOffset - toolbar.offsetHeight;\r\n\r\n        toolbar.style.transform = `translate3D(${Math.floor(newCoordinateX)}px, ${Math.floor(newCoordinateY)}px, 0)`;\r\n\r\n        /** Close everything */\r\n        editor.toolbar.inline.closeButtons();\r\n        editor.toolbar.inline.closeAction();\r\n\r\n    };\r\n\r\n    /**\r\n     * @private\r\n     *\r\n     * Tool Clicked\r\n     */\r\n\r\n    inline.toolClicked = function (event, type) {\r\n\r\n        /**\r\n         * For simple tools we use default browser function\r\n         * For more complicated tools, we should write our own behavior\r\n         */\r\n        switch (type) {\r\n            case 'createLink' : editor.toolbar.inline.createLinkAction(event, type); break;\r\n            default           : editor.toolbar.inline.defaultToolAction(type); break;\r\n        }\r\n\r\n        /**\r\n         * highlight buttons\r\n         * after making some action\r\n         */\r\n        editor.nodes.inlineToolbar.buttons.childNodes.forEach(editor.toolbar.inline.hightlight);\r\n\r\n    };\r\n\r\n    /**\r\n     * @private\r\n     *\r\n     * Saving wrappers offset in DOM\r\n     */\r\n    inline.getWrappersOffset = function () {\r\n\r\n        var wrapper = editor.nodes.wrapper,\r\n            offset  = this.getOffset(wrapper);\r\n\r\n        this.wrappersOffset = offset;\r\n        return offset;\r\n\r\n    };\r\n\r\n    /**\r\n     * @private\r\n     *\r\n     * Calculates offset of DOM element\r\n     *\r\n     * @param el\r\n     * @returns {{top: number, left: number}}\r\n     */\r\n    inline.getOffset = function ( el ) {\r\n\r\n        var _x = 0;\r\n        var _y = 0;\r\n\r\n        while( el && !isNaN( el.offsetLeft ) && !isNaN( el.offsetTop ) ) {\r\n\r\n            _x += (el.offsetLeft + el.clientLeft);\r\n            _y += (el.offsetTop + el.clientTop);\r\n            el = el.offsetParent;\r\n\r\n        }\r\n        return { top: _y, left: _x };\r\n\r\n    };\r\n\r\n    /**\r\n     * @private\r\n     *\r\n     * Calculates position of selected text\r\n     * @returns {{x: number, y: number}}\r\n     */\r\n    inline.getSelectionCoords = function () {\r\n\r\n        var sel = document.selection, range;\r\n        var x = 0, y = 0;\r\n\r\n        if (sel) {\r\n\r\n            if (sel.type != 'Control') {\r\n\r\n                range = sel.createRange();\r\n                range.collapse(true);\r\n                x = range.boundingLeft;\r\n                y = range.boundingTop;\r\n\r\n            }\r\n\r\n        } else if (window.getSelection) {\r\n\r\n            sel = window.getSelection();\r\n\r\n            if (sel.rangeCount) {\r\n\r\n                range = sel.getRangeAt(0).cloneRange();\r\n                if (range.getClientRects) {\r\n\r\n                    range.collapse(true);\r\n                    var rect = range.getClientRects()[0];\r\n\r\n                    if (!rect) {\r\n\r\n                        return;\r\n\r\n                    }\r\n\r\n                    x = rect.left;\r\n                    y = rect.top;\r\n\r\n                }\r\n\r\n            }\r\n\r\n        }\r\n        return { x: x, y: y };\r\n\r\n    };\r\n\r\n    /**\r\n     * @private\r\n     *\r\n     * Returns selected text as String\r\n     * @returns {string}\r\n     */\r\n    inline.getSelectionText = function () {\r\n\r\n        var selectedText = '';\r\n\r\n        // all modern browsers and IE9+\r\n        if (window.getSelection) {\r\n\r\n            selectedText = window.getSelection().toString();\r\n\r\n        }\r\n\r\n        return selectedText;\r\n\r\n    };\r\n\r\n    /** Opens buttons block */\r\n    inline.showButtons = function () {\r\n\r\n        var buttons = editor.nodes.inlineToolbar.buttons;\r\n\r\n        buttons.classList.add('opened');\r\n\r\n        editor.toolbar.inline.buttonsOpened = true;\r\n\r\n        /** highlight buttons */\r\n        editor.nodes.inlineToolbar.buttons.childNodes.forEach(editor.toolbar.inline.hightlight);\r\n\r\n    };\r\n\r\n    /** Makes buttons disappear */\r\n    inline.closeButtons = function () {\r\n\r\n        var buttons = editor.nodes.inlineToolbar.buttons;\r\n\r\n        buttons.classList.remove('opened');\r\n\r\n        editor.toolbar.inline.buttonsOpened = false;\r\n\r\n    };\r\n\r\n    /** Open buttons defined action if exist */\r\n    inline.showActions = function () {\r\n\r\n        var action = editor.nodes.inlineToolbar.actions;\r\n\r\n        action.classList.add('opened');\r\n\r\n        editor.toolbar.inline.actionsOpened = true;\r\n\r\n    };\r\n\r\n    /** Close actions block */\r\n    inline.closeAction = function () {\r\n\r\n        var action = editor.nodes.inlineToolbar.actions;\r\n\r\n        action.innerHTML = '';\r\n        action.classList.remove('opened');\r\n        editor.toolbar.inline.actionsOpened = false;\r\n\r\n    };\r\n\r\n\r\n    /**\r\n    * Callback for keydowns in inline toolbar \"Insert link...\" input\r\n    */\r\n    let inlineToolbarAnchorInputKeydown_ = function (event) {\r\n\r\n        if (event.keyCode != editor.core.keys.ENTER) {\r\n\r\n            return;\r\n\r\n        }\r\n\r\n        let editable        = editor.content.currentNode,\r\n            storedSelection = editor.toolbar.inline.storedSelection;\r\n\r\n        editor.toolbar.inline.restoreSelection(editable, storedSelection);\r\n        editor.toolbar.inline.setAnchor(this.value);\r\n\r\n        /**\r\n         * Preventing events that will be able to happen\r\n         */\r\n        event.preventDefault();\r\n        event.stopImmediatePropagation();\r\n\r\n        editor.toolbar.inline.clearRange();\r\n\r\n    };\r\n\r\n    /** Action for link creation or for setting anchor */\r\n    inline.createLinkAction = function (event) {\r\n\r\n        var isActive = this.isLinkActive();\r\n\r\n        var editable        = editor.content.currentNode,\r\n            storedSelection = editor.toolbar.inline.saveSelection(editable);\r\n\r\n        /** Save globally selection */\r\n        editor.toolbar.inline.storedSelection = storedSelection;\r\n\r\n        if (isActive) {\r\n\r\n\r\n            /**\r\n             * Changing stored selection. if we want to remove anchor from word\r\n             * we should remove anchor from whole word, not only selected part.\r\n             * The solution is than we get the length of current link\r\n             * Change start position to - end of selection minus length of anchor\r\n             */\r\n            editor.toolbar.inline.restoreSelection(editable, storedSelection);\r\n\r\n            editor.toolbar.inline.defaultToolAction('unlink');\r\n\r\n        } else {\r\n\r\n            /** Create input and close buttons */\r\n            var action = editor.draw.inputForLink();\r\n\r\n            editor.nodes.inlineToolbar.actions.appendChild(action);\r\n\r\n            editor.toolbar.inline.closeButtons();\r\n            editor.toolbar.inline.showActions();\r\n\r\n            /**\r\n             * focus to input\r\n             * Solution: https://developer.mozilla.org/ru/docs/Web/API/HTMLElement/focus\r\n             * Prevents event after showing input and when we need to focus an input which is in unexisted form\r\n             */\r\n            action.focus();\r\n            event.preventDefault();\r\n\r\n            /** Callback to link action */\r\n            action.addEventListener('keydown', inlineToolbarAnchorInputKeydown_, false);\r\n\r\n        }\r\n\r\n    };\r\n\r\n    inline.isLinkActive = function () {\r\n\r\n        var isActive = false;\r\n\r\n        editor.nodes.inlineToolbar.buttons.childNodes.forEach(function (tool) {\r\n\r\n            var dataType = tool.dataset.type;\r\n\r\n            if (dataType == 'link' && tool.classList.contains('hightlighted')) {\r\n\r\n                isActive = true;\r\n\r\n            }\r\n\r\n        });\r\n\r\n        return isActive;\r\n\r\n    };\r\n\r\n    /** default action behavior of tool */\r\n    inline.defaultToolAction = function (type) {\r\n\r\n        document.execCommand(type, false, null);\r\n\r\n    };\r\n\r\n    /**\r\n     * @private\r\n     *\r\n     * Sets URL\r\n     *\r\n     * @param {String} url - URL\r\n     */\r\n    inline.setAnchor = function (url) {\r\n\r\n        document.execCommand('createLink', false, url);\r\n\r\n        /** Close after URL inserting */\r\n        editor.toolbar.inline.closeAction();\r\n\r\n    };\r\n\r\n    /**\r\n     * @private\r\n     *\r\n     * Saves selection\r\n     */\r\n    inline.saveSelection = function (containerEl) {\r\n\r\n        var range = window.getSelection().getRangeAt(0),\r\n            preSelectionRange = range.cloneRange(),\r\n            start;\r\n\r\n        preSelectionRange.selectNodeContents(containerEl);\r\n        preSelectionRange.setEnd(range.startContainer, range.startOffset);\r\n\r\n        start = preSelectionRange.toString().length;\r\n\r\n        return {\r\n            start: start,\r\n            end: start + range.toString().length\r\n        };\r\n\r\n    };\r\n\r\n    /**\r\n     * @private\r\n     *\r\n     * Sets to previous selection (Range)\r\n     *\r\n     * @param {Element} containerEl - editable element where we restore range\r\n     * @param {Object} savedSel - range basic information to restore\r\n     */\r\n    inline.restoreSelection = function (containerEl, savedSel) {\r\n\r\n        var range     = document.createRange(),\r\n            charIndex = 0;\r\n\r\n        range.setStart(containerEl, 0);\r\n        range.collapse(true);\r\n\r\n        var nodeStack = [ containerEl ],\r\n            node,\r\n            foundStart = false,\r\n            stop = false,\r\n            nextCharIndex;\r\n\r\n        while (!stop && (node = nodeStack.pop())) {\r\n\r\n            if (node.nodeType == 3) {\r\n\r\n                nextCharIndex = charIndex + node.length;\r\n\r\n                if (!foundStart && savedSel.start >= charIndex && savedSel.start <= nextCharIndex) {\r\n\r\n                    range.setStart(node, savedSel.start - charIndex);\r\n                    foundStart = true;\r\n\r\n                }\r\n                if (foundStart && savedSel.end >= charIndex && savedSel.end <= nextCharIndex) {\r\n\r\n                    range.setEnd(node, savedSel.end - charIndex);\r\n                    stop = true;\r\n\r\n                }\r\n                charIndex = nextCharIndex;\r\n\r\n            } else {\r\n\r\n                var i = node.childNodes.length;\r\n\r\n                while (i--) {\r\n\r\n                    nodeStack.push(node.childNodes[i]);\r\n\r\n                }\r\n\r\n            }\r\n\r\n        }\r\n\r\n        var sel = window.getSelection();\r\n\r\n        sel.removeAllRanges();\r\n        sel.addRange(range);\r\n\r\n    };\r\n\r\n    /**\r\n     * @private\r\n     *\r\n     * Removes all ranges from window selection\r\n     */\r\n    inline.clearRange = function () {\r\n\r\n        var selection = window.getSelection();\r\n\r\n        selection.removeAllRanges();\r\n\r\n    };\r\n\r\n    /**\r\n     * @private\r\n     *\r\n     * sets or removes hightlight\r\n     */\r\n    inline.hightlight = function (tool) {\r\n\r\n        var dataType = tool.dataset.type;\r\n\r\n        if (document.queryCommandState(dataType)) {\r\n\r\n            editor.toolbar.inline.setButtonHighlighted(tool);\r\n\r\n        } else {\r\n\r\n            editor.toolbar.inline.removeButtonsHighLight(tool);\r\n\r\n        }\r\n\r\n        /**\r\n         *\r\n         * hightlight for anchors\r\n         */\r\n        var selection = window.getSelection(),\r\n            tag = selection.anchorNode.parentNode;\r\n\r\n        if (tag.tagName == 'A' && dataType == 'link') {\r\n\r\n            editor.toolbar.inline.setButtonHighlighted(tool);\r\n\r\n        }\r\n\r\n    };\r\n\r\n    /**\r\n     * @private\r\n     *\r\n     * Mark button if text is already executed\r\n     */\r\n    inline.setButtonHighlighted = function (button) {\r\n\r\n        button.classList.add('hightlighted');\r\n\r\n        /** At link tool we also change icon */\r\n        if (button.dataset.type == 'link') {\r\n\r\n            var icon = button.childNodes[0];\r\n\r\n            icon.classList.remove('ce-icon-link');\r\n            icon.classList.add('ce-icon-unlink');\r\n\r\n        }\r\n\r\n    };\r\n\r\n    /**\r\n     * @private\r\n     *\r\n     * Removes hightlight\r\n     */\r\n    inline.removeButtonsHighLight = function (button) {\r\n\r\n        button.classList.remove('hightlighted');\r\n\r\n        /** At link tool we also change icon */\r\n        if (button.dataset.type == 'link') {\r\n\r\n            var icon = button.childNodes[0];\r\n\r\n            icon.classList.remove('ce-icon-unlink');\r\n            icon.classList.add('ce-icon-link');\r\n\r\n        }\r\n\r\n    };\r\n\r\n\r\n    return inline;\r\n\r\n})({});\n\n\n// WEBPACK FOOTER //\n// ./modules/toolbar/inline.js","/**\r\n * Codex Editor toolbox\r\n *\r\n * All tools be able to appended here\r\n *\r\n * @author Codex Team\r\n * @version 1.0\r\n */\r\n\r\nlet editor = codex.editor;\r\n\r\nmodule.exports = (function (toolbox) {\r\n\r\n    toolbox.opened = false;\r\n\r\n    /** Shows toolbox */\r\n    toolbox.open = function () {\r\n\r\n        /** Close setting if toolbox is opened */\r\n        if (editor.toolbar.settings.opened) {\r\n\r\n            editor.toolbar.settings.close();\r\n\r\n        }\r\n\r\n        /** display toolbox */\r\n        editor.nodes.toolbox.classList.add('opened');\r\n\r\n        /** Animate plus button */\r\n        editor.nodes.plusButton.classList.add('clicked');\r\n\r\n        /** toolbox state */\r\n        editor.toolbar.toolbox.opened = true;\r\n\r\n    };\r\n\r\n    /** Closes toolbox */\r\n    toolbox.close = function () {\r\n\r\n        /** Makes toolbox disapear */\r\n        editor.nodes.toolbox.classList.remove('opened');\r\n\r\n        /** Rotate plus button */\r\n        editor.nodes.plusButton.classList.remove('clicked');\r\n\r\n        /** toolbox state */\r\n        editor.toolbar.toolbox.opened = false;\r\n\r\n    };\r\n\r\n    toolbox.leaf = function () {\r\n\r\n        let currentTool = editor.toolbar.current,\r\n            tools       = Object.keys(editor.tools),\r\n            barButtons  = editor.nodes.toolbarButtons,\r\n            nextToolIndex = 0,\r\n            toolToSelect,\r\n            visibleTool,\r\n            tool;\r\n\r\n        if ( !currentTool ) {\r\n\r\n            /** Get first tool from object*/\r\n            for(tool in editor.tools) {\r\n\r\n                if (editor.tools[tool].displayInToolbox) {\r\n\r\n                    break;\r\n\r\n                }\r\n\r\n                nextToolIndex ++;\r\n\r\n            }\r\n\r\n        } else {\r\n\r\n            nextToolIndex = tools.indexOf(currentTool) + 1;\r\n            visibleTool = tools[nextToolIndex];\r\n\r\n            while (!editor.tools[visibleTool].displayInToolbox) {\r\n\r\n                nextToolIndex++;\r\n                visibleTool = tools[nextToolIndex];\r\n\r\n                if ( nextToolIndex == tools.length ) {\r\n\r\n                    nextToolIndex = 0;\r\n                    visibleTool = tools[nextToolIndex];\r\n\r\n                }\r\n\r\n            }\r\n\r\n        }\r\n\r\n        toolToSelect = tools[nextToolIndex];\r\n\r\n        for ( var button in barButtons ) {\r\n\r\n            barButtons[button].classList.remove('selected');\r\n\r\n        }\r\n\r\n        barButtons[toolToSelect].classList.add('selected');\r\n        editor.toolbar.current = toolToSelect;\r\n\r\n    };\r\n\r\n    /**\r\n     * Transforming selected node type into selected toolbar element type\r\n     * @param {event} event\r\n     */\r\n    toolbox.toolClicked = function (event) {\r\n\r\n        /**\r\n         * UNREPLACEBLE_TOOLS this types of tools are forbidden to replace even they are empty\r\n         */\r\n        var UNREPLACEBLE_TOOLS = ['image', 'link', 'list', 'instagram', 'twitter', 'embed'],\r\n            tool               = editor.tools[editor.toolbar.current],\r\n            workingNode        = editor.content.currentNode,\r\n            currentInputIndex  = editor.caret.inputIndex,\r\n            newBlockContent,\r\n            appendCallback,\r\n            blockData;\r\n\r\n        /** Make block from plugin */\r\n        newBlockContent = tool.render();\r\n\r\n        /** information about block */\r\n        blockData = {\r\n            block     : newBlockContent,\r\n            type      : tool.type,\r\n            stretched : false\r\n        };\r\n\r\n        if (\r\n            workingNode &&\r\n            UNREPLACEBLE_TOOLS.indexOf(workingNode.dataset.tool) === -1 &&\r\n            workingNode.textContent.trim() === ''\r\n        ) {\r\n\r\n            /** Replace current block */\r\n            editor.content.switchBlock(workingNode, newBlockContent, tool.type);\r\n\r\n        } else {\r\n\r\n            /** Insert new Block from plugin */\r\n            editor.content.insertBlock(blockData);\r\n\r\n            /** increase input index */\r\n            currentInputIndex++;\r\n\r\n        }\r\n\r\n        /** Fire tool append callback  */\r\n        appendCallback = tool.appendCallback;\r\n\r\n        if (appendCallback && typeof appendCallback == 'function') {\r\n\r\n            appendCallback.call(event);\r\n\r\n        }\r\n\r\n        window.setTimeout(function () {\r\n\r\n            /** Set caret to current block */\r\n            editor.caret.setToBlock(currentInputIndex);\r\n\r\n        }, 10);\r\n\r\n\r\n        /**\r\n         * Changing current Node\r\n         */\r\n        editor.content.workingNodeChanged();\r\n\r\n        /**\r\n         * Move toolbar when node is changed\r\n         */\r\n        editor.toolbar.move();\r\n\r\n    };\r\n\r\n    return toolbox;\r\n\r\n})({});\n\n\n// WEBPACK FOOTER //\n// ./modules/toolbar/toolbox.js","/**\r\n * Codex Editor tools\r\n * This tools will be appended in toolbox\r\n *\r\n * @author Codex Team\r\n * @version 1.0\r\n */\r\n\r\nvar tools = (function(tools) {\r\n\r\n    return tools;\r\n\r\n})({});\r\n\r\nmodule.exports = tools;\r\n\n\n\n// WEBPACK FOOTER //\n// ./modules/tools.js","/**\r\n * Codex Editor callbacks module\r\n *\r\n * @author Codex Team\r\n * @version 1.3.5\r\n */\r\n\r\nvar callbacks = (function(callbacks) {\r\n\r\n    callbacks.redactorSyncTimeout = null;\r\n\r\n    callbacks.globalKeydown = function(event){\r\n        switch (event.keyCode){\r\n            case codex.core.keys.ENTER : codex.callback.enterKeyPressed(event);     break;\r\n        }\r\n    };\r\n\r\n    callbacks.redactorKeyDown = function(event) {\r\n        switch (event.keyCode){\r\n            case codex.core.keys.TAB   : codex.callback.tabKeyPressed(event);                     break;\r\n            case codex.core.keys.ENTER : codex.callback.enterKeyPressedOnRedactorZone(event);     break;\r\n            case codex.core.keys.ESC   : codex.callback.escapeKeyPressed(event);                  break;\r\n            default                    : codex.callback.defaultKeyPressed(event);                 break;\r\n        }\r\n    };\r\n\r\n    callbacks.globalKeyup = function(event){\r\n        switch (event.keyCode){\r\n            case codex.core.keys.UP    :\r\n            case codex.core.keys.LEFT  :\r\n            case codex.core.keys.RIGHT :\r\n            case codex.core.keys.DOWN  : codex.callback.arrowKeyPressed(event); break;\r\n        }\r\n    };\r\n\r\n    callbacks.tabKeyPressed = function(event){\r\n\r\n        if ( !codex.toolbar.opened ) {\r\n            codex.toolbar.open();\r\n        }\r\n\r\n        if (codex.toolbar.opened && !codex.toolbar.toolbox.opened) {\r\n            codex.toolbar.toolbox.open();\r\n        } else {\r\n            codex.toolbar.toolbox.leaf();\r\n        }\r\n\r\n        event.preventDefault();\r\n    };\r\n\r\n    callbacks.enterKeyPressed = function(event) {\r\n\r\n        if (codex.content.editorAreaHightlighted) {\r\n\r\n            /**\r\n             * it means that we lose input index, saved index before is not correct\r\n             * therefore we need to set caret when we insert new block\r\n             */\r\n            codex.caret.inputIndex = -1;\r\n\r\n            codex.callback.enterPressedOnBlock();\r\n        }\r\n    };\r\n\r\n    /**\r\n     * ENTER key handler\r\n     * Makes new paragraph block\r\n     */\r\n    callbacks.enterKeyPressedOnRedactorZone = function(event){\r\n\r\n        if (event.target.contentEditable == 'true') {\r\n\r\n            /** Update input index */\r\n            codex.caret.saveCurrentInputIndex();\r\n        }\r\n\r\n        var currentInputIndex       = codex.caret.getCurrentInputIndex() || 0,\r\n            workingNode             = codex.content.currentNode,\r\n            tool                    = workingNode.dataset.tool,\r\n            isEnterPressedOnToolbar = codex.toolbar.opened &&\r\n                                        codex.toolbar.current &&\r\n                                        event.target == codex.state.inputs[currentInputIndex];\r\n\r\n        /** The list of tools which needs the default browser behaviour */\r\n        var enableLineBreaks = codex.tools[tool].enableLineBreaks;\r\n\r\n        /** This type of block creates when enter is pressed */\r\n        var NEW_BLOCK_TYPE = codex.settings.initialBlockPlugin;\r\n\r\n        /**\r\n         * When toolbar is opened, select tool instead of making new paragraph\r\n         */\r\n        if ( isEnterPressedOnToolbar ) {\r\n\r\n            event.preventDefault();\r\n\r\n            codex.toolbar.toolbox.toolClicked(event);\r\n\r\n            codex.toolbar.close();\r\n\r\n            /**\r\n             * Stop other listeners callback executions\r\n             */\r\n            event.stopPropagation();\r\n            event.stopImmediatePropagation();\r\n\r\n            return;\r\n\r\n        }\r\n\r\n        /**\r\n         * Allow paragraph lineBreaks with shift enter\r\n         * Or if shiftkey pressed and enter and enabledLineBreaks, the let new block creation\r\n         */\r\n        if ( event.shiftKey || enableLineBreaks ){\r\n\r\n            event.stopPropagation();\r\n            event.stopImmediatePropagation();\r\n            return;\r\n        }\r\n\r\n        var isLastTextNode = false,\r\n            currentSelection = window.getSelection(),\r\n            currentSelectedNode = currentSelection.anchorNode,\r\n            caretAtTheEndOfText = codex.caret.position.atTheEnd(),\r\n            isTextNodeHasParentBetweenContenteditable = false;\r\n\r\n        /**\r\n         * Allow making new <p> in same block by SHIFT+ENTER and forbids to prevent default browser behaviour\r\n         */\r\n        if ( event.shiftKey && !enableLineBreaks ) {\r\n            codex.callback.enterPressedOnBlock(codex.content.currentBlock, event);\r\n            event.preventDefault();\r\n            return;\r\n        }\r\n\r\n        /**\r\n         * Workaround situation when caret at the Text node that has some wrapper Elements\r\n         * Split block cant handle this.\r\n         * We need to save default behavior\r\n         */\r\n        isTextNodeHasParentBetweenContenteditable = currentSelectedNode && currentSelectedNode.parentNode.contentEditable != \"true\";\r\n\r\n        /**\r\n         * Split blocks when input has several nodes and caret placed in textNode\r\n         */\r\n        if (\r\n            currentSelectedNode.nodeType == codex.core.nodeTypes.TEXT &&\r\n            !isTextNodeHasParentBetweenContenteditable &&\r\n            !caretAtTheEndOfText\r\n        ){\r\n\r\n            event.preventDefault();\r\n\r\n            codex.core.log('Splitting Text node...');\r\n\r\n            codex.content.splitBlock(currentInputIndex);\r\n\r\n            /** Show plus button when next input after split is empty*/\r\n            if (!codex.state.inputs[currentInputIndex + 1].textContent.trim()) {\r\n                codex.toolbar.showPlusButton();\r\n            }\r\n\r\n        } else {\r\n\r\n            var islastNode = codex.content.isLastNode(currentSelectedNode);\r\n\r\n            if ( islastNode && caretAtTheEndOfText ) {\r\n\r\n                event.preventDefault();\r\n                event.stopPropagation();\r\n                event.stopImmediatePropagation();\r\n\r\n                codex.core.log('ENTER clicked in last textNode. Create new BLOCK');\r\n\r\n                codex.content.insertBlock({\r\n                    type: NEW_BLOCK_TYPE,\r\n                    block: codex.tools[NEW_BLOCK_TYPE].render()\r\n                }, true);\r\n\r\n                codex.toolbar.move();\r\n                codex.toolbar.open();\r\n\r\n                /** Show plus button with empty block */\r\n                codex.toolbar.showPlusButton();\r\n\r\n            }\r\n\r\n        }\r\n\r\n        /** get all inputs after new appending block */\r\n        codex.ui.saveInputs();\r\n\r\n    };\r\n\r\n    callbacks.escapeKeyPressed = function(event){\r\n\r\n        /** Close all toolbar */\r\n        codex.toolbar.close();\r\n\r\n        /** Close toolbox */\r\n        codex.toolbar.toolbox.close();\r\n\r\n        event.preventDefault();\r\n\r\n    };\r\n\r\n    callbacks.arrowKeyPressed = function(event){\r\n\r\n        codex.content.workingNodeChanged();\r\n\r\n        /* Closing toolbar */\r\n        codex.toolbar.close();\r\n        codex.toolbar.move();\r\n\r\n    };\r\n\r\n    callbacks.defaultKeyPressed = function(event) {\r\n\r\n        codex.toolbar.close();\r\n\r\n        if (!codex.toolbar.inline.actionsOpened) {\r\n            codex.toolbar.inline.close();\r\n            codex.content.clearMark();\r\n        }\r\n    };\r\n\r\n    callbacks.redactorClicked = function (event) {\r\n\r\n        callbacks.detectWhenClickedOnFirstLevelBlockArea();\r\n\r\n        codex.content.workingNodeChanged(event.target);\r\n\r\n        codex.ui.saveInputs();\r\n\r\n        var selectedText = codex.toolbar.inline.getSelectionText();\r\n\r\n        /**\r\n         * If selection range took off, then we hide inline toolbar\r\n         */\r\n        if (selectedText.length === 0) {\r\n            codex.toolbar.inline.close();\r\n        }\r\n\r\n        /** Update current input index in memory when caret focused into existed input */\r\n        if (event.target.contentEditable == 'true') {\r\n\r\n            codex.caret.saveCurrentInputIndex();\r\n\r\n        }\r\n\r\n        if (codex.content.currentNode === null) {\r\n\r\n            /**\r\n             * If inputs in redactor does not exits, then we put input index 0 not -1\r\n             */\r\n            var indexOfLastInput = codex.state.inputs.length > 0 ? codex.state.inputs.length - 1 : 0;\r\n\r\n            /** If we have any inputs */\r\n            if (codex.state.inputs.length) {\r\n\r\n                /** getting firstlevel parent of input */\r\n                var firstLevelBlock  = codex.content.getFirstLevelBlock(codex.state.inputs[indexOfLastInput]);\r\n            }\r\n\r\n            /** If input is empty, then we set caret to the last input */\r\n            if (codex.state.inputs.length && codex.state.inputs[indexOfLastInput].textContent === '' && firstLevelBlock.dataset.tool == codex.settings.initialBlockPlugin) {\r\n\r\n                codex.caret.setToBlock(indexOfLastInput);\r\n\r\n            } else {\r\n\r\n                /** Create new input when caret clicked in redactors area */\r\n                var NEW_BLOCK_TYPE = codex.settings.initialBlockPlugin;\r\n\r\n                codex.content.insertBlock({\r\n                    type  : NEW_BLOCK_TYPE,\r\n                    block : codex.tools[NEW_BLOCK_TYPE].render()\r\n                });\r\n\r\n                /** If there is no inputs except inserted */\r\n                if (codex.state.inputs.length === 1) {\r\n\r\n                    codex.caret.setToBlock(indexOfLastInput);\r\n\r\n                } else {\r\n\r\n                    /** Set caret to this appended input */\r\n                    codex.caret.setToNextBlock(indexOfLastInput);\r\n                }\r\n            }\r\n\r\n            /**\r\n             * Move toolbar to the right position and open\r\n             */\r\n            codex.toolbar.move();\r\n\r\n\r\n            codex.toolbar.open();\r\n\r\n        } else {\r\n\r\n            /**\r\n             * Move toolbar to the new position and open\r\n             */\r\n            codex.toolbar.move();\r\n\r\n            codex.toolbar.open();\r\n\r\n            /** Close all panels */\r\n            codex.toolbar.settings.close();\r\n            codex.toolbar.toolbox.close();\r\n        }\r\n\r\n\r\n        var inputIsEmpty = !codex.content.currentNode.textContent.trim(),\r\n            currentNodeType = codex.content.currentNode.dataset.tool,\r\n            isInitialType = currentNodeType == codex.settings.initialBlockPlugin;\r\n\r\n\r\n        /** Hide plus buttons */\r\n        codex.toolbar.hidePlusButton();\r\n\r\n        /** Mark current block */\r\n        codex.content.markBlock();\r\n\r\n\r\n        if ( isInitialType && inputIsEmpty ) {\r\n\r\n            /** Show plus button */\r\n            codex.toolbar.showPlusButton();\r\n\r\n        }\r\n\r\n\r\n    };\r\n\r\n    /**\r\n     * This method allows to define, is caret in contenteditable element or not.\r\n     * Otherwise, if we get TEXT node from range container, that will means we have input index.\r\n     * In this case we use default browsers behaviour (if plugin allows that) or overwritten action.\r\n     * Therefore, to be sure that we've clicked first-level block area, we should have currentNode, which always\r\n     * specifies to the first-level block. Other cases we just ignore.\r\n     */\r\n    callbacks.detectWhenClickedOnFirstLevelBlockArea = function() {\r\n\r\n        var selection  = window.getSelection(),\r\n            anchorNode = selection.anchorNode,\r\n            flag = false;\r\n\r\n        if (selection.rangeCount == 0) {\r\n\r\n            codex.content.editorAreaHightlighted = true;\r\n\r\n        } else {\r\n\r\n            if (!codex.core.isDomNode(anchorNode)) {\r\n                anchorNode = anchorNode.parentNode;\r\n            }\r\n\r\n            /** Already founded, without loop */\r\n            if (anchorNode.contentEditable == 'true') {\r\n                flag = true;\r\n            }\r\n\r\n            while (anchorNode.contentEditable != 'true') {\r\n                anchorNode = anchorNode.parentNode;\r\n\r\n                if (anchorNode.contentEditable == 'true') {\r\n                    flag = true;\r\n                }\r\n\r\n                if (anchorNode == document.body) {\r\n                    break;\r\n                }\r\n            }\r\n\r\n            /** If editable element founded, flag is \"TRUE\", Therefore we return \"FALSE\" */\r\n            codex.content.editorAreaHightlighted = flag ? false : true;\r\n        }\r\n\r\n    };\r\n\r\n    /**\r\n     * Toolbar button click handler\r\n     * @param this - cursor to the button\r\n     */\r\n    callbacks.toolbarButtonClicked = function (event) {\r\n\r\n        var button = this;\r\n\r\n        codex.toolbar.current = button.dataset.type;\r\n\r\n        codex.toolbar.toolbox.toolClicked(event);\r\n        codex.toolbar.close();\r\n\r\n    };\r\n\r\n    callbacks.redactorInputEvent = function (event) {\r\n\r\n        /**\r\n         * Clear previous sync-timeout\r\n         */\r\n        if (this.redactorSyncTimeout){\r\n            clearTimeout(this.redactorSyncTimeout);\r\n        }\r\n\r\n        /**\r\n         * Start waiting to input finish and sync redactor\r\n         */\r\n        this.redactorSyncTimeout = setTimeout(function() {\r\n\r\n            codex.content.sync();\r\n\r\n        }, 500);\r\n\r\n    };\r\n\r\n    /** Show or Hide toolbox when plus button is clicked */\r\n    callbacks.plusButtonClicked = function() {\r\n\r\n        if (!codex.nodes.toolbox.classList.contains('opened')) {\r\n\r\n            codex.toolbar.toolbox.open();\r\n\r\n        } else {\r\n\r\n            codex.toolbar.toolbox.close();\r\n\r\n        }\r\n    };\r\n\r\n    /**\r\n     * Block handlers for KeyDown events\r\n     */\r\n    callbacks.blockKeydown = function(event, block) {\r\n\r\n        switch (event.keyCode){\r\n\r\n            case codex.core.keys.DOWN:\r\n            case codex.core.keys.RIGHT:\r\n                codex.callback.blockRightOrDownArrowPressed(block);\r\n                break;\r\n\r\n            case codex.core.keys.BACKSPACE:\r\n                codex.callback.backspacePressed(block);\r\n                break;\r\n\r\n            case codex.core.keys.UP:\r\n            case codex.core.keys.LEFT:\r\n                codex.callback.blockLeftOrUpArrowPressed(block);\r\n                break;\r\n\r\n        }\r\n    };\r\n\r\n    /**\r\n     * RIGHT or DOWN keydowns on block\r\n     */\r\n    callbacks.blockRightOrDownArrowPressed = function (block) {\r\n\r\n        var selection   = window.getSelection(),\r\n            inputs      = codex.state.inputs,\r\n            focusedNode = selection.anchorNode,\r\n            focusedNodeHolder;\r\n\r\n        /** Check for caret existance */\r\n        if (!focusedNode){\r\n            return false;\r\n        }\r\n\r\n        /** Looking for closest (parent) contentEditable element of focused node */\r\n        while (focusedNode.contentEditable != 'true') {\r\n\r\n            focusedNodeHolder = focusedNode.parentNode;\r\n            focusedNode       = focusedNodeHolder;\r\n        }\r\n\r\n        /** Input index in DOM level */\r\n        var editableElementIndex = 0;\r\n        while (focusedNode != inputs[editableElementIndex]) {\r\n            editableElementIndex ++;\r\n        }\r\n\r\n        /**\r\n         * Founded contentEditable element doesn't have childs\r\n         * Or maybe New created block\r\n         */\r\n        if (!focusedNode.textContent)\r\n        {\r\n            codex.caret.setToNextBlock(editableElementIndex);\r\n            return;\r\n        }\r\n\r\n        /**\r\n         * Do nothing when caret doesn not reaches the end of last child\r\n         */\r\n        var caretInLastChild    = false,\r\n            caretAtTheEndOfText = false;\r\n\r\n        var lastChild,\r\n            deepestTextnode;\r\n\r\n        lastChild = focusedNode.childNodes[focusedNode.childNodes.length - 1 ];\r\n\r\n        if (codex.core.isDomNode(lastChild)) {\r\n\r\n            deepestTextnode = codex.content.getDeepestTextNodeFromPosition(lastChild, lastChild.childNodes.length);\r\n\r\n        } else {\r\n\r\n            deepestTextnode = lastChild;\r\n\r\n        }\r\n\r\n        caretInLastChild = selection.anchorNode == deepestTextnode;\r\n        caretAtTheEndOfText = deepestTextnode.length == selection.anchorOffset;\r\n\r\n        if ( !caretInLastChild  || !caretAtTheEndOfText ) {\r\n            codex.core.log('arrow [down|right] : caret does not reached the end');\r\n            return false;\r\n        }\r\n\r\n        codex.caret.setToNextBlock(editableElementIndex);\r\n\r\n    };\r\n\r\n    /**\r\n     * LEFT or UP keydowns on block\r\n     */\r\n    callbacks.blockLeftOrUpArrowPressed = function (block) {\r\n\r\n        var selection   = window.getSelection(),\r\n            inputs      = codex.state.inputs,\r\n            focusedNode = selection.anchorNode,\r\n            focusedNodeHolder;\r\n\r\n        /** Check for caret existance */\r\n        if (!focusedNode){\r\n            return false;\r\n        }\r\n\r\n        /**\r\n         * LEFT or UP not at the beginning\r\n         */\r\n        if ( selection.anchorOffset !== 0) {\r\n            return false;\r\n        }\r\n\r\n        /** Looking for parent contentEditable block */\r\n        while (focusedNode.contentEditable != 'true') {\r\n            focusedNodeHolder = focusedNode.parentNode;\r\n            focusedNode       = focusedNodeHolder;\r\n        }\r\n\r\n        /** Input index in DOM level */\r\n        var editableElementIndex = 0;\r\n        while (focusedNode != inputs[editableElementIndex]) {\r\n            editableElementIndex ++;\r\n        }\r\n\r\n        /**\r\n         * Do nothing if caret is not at the beginning of first child\r\n         */\r\n        var caretInFirstChild   = false,\r\n            caretAtTheBeginning = false;\r\n\r\n        var firstChild,\r\n            deepestTextnode;\r\n\r\n        /**\r\n         * Founded contentEditable element doesn't have childs\r\n         * Or maybe New created block\r\n         */\r\n        if (!focusedNode.textContent) {\r\n            codex.caret.setToPreviousBlock(editableElementIndex);\r\n            return;\r\n        }\r\n\r\n        firstChild = focusedNode.childNodes[0];\r\n\r\n        if (codex.core.isDomNode(firstChild)) {\r\n\r\n            deepestTextnode = codex.content.getDeepestTextNodeFromPosition(firstChild, 0);\r\n\r\n        } else {\r\n\r\n            deepestTextnode = firstChild;\r\n\r\n        }\r\n\r\n        caretInFirstChild   = selection.anchorNode == deepestTextnode;\r\n        caretAtTheBeginning = selection.anchorOffset === 0;\r\n\r\n        if ( caretInFirstChild && caretAtTheBeginning ) {\r\n\r\n            codex.caret.setToPreviousBlock(editableElementIndex);\r\n\r\n        }\r\n\r\n    };\r\n\r\n    /**\r\n     * Callback for enter key pressing in first-level block area\r\n     */\r\n    callbacks.enterPressedOnBlock = function (event) {\r\n\r\n        var NEW_BLOCK_TYPE  = codex.settings.initialBlockPlugin;\r\n\r\n        codex.content.insertBlock({\r\n            type  : NEW_BLOCK_TYPE,\r\n            block : codex.tools[NEW_BLOCK_TYPE].render()\r\n        }, true );\r\n\r\n        codex.toolbar.move();\r\n        codex.toolbar.open();\r\n\r\n    };\r\n\r\n    callbacks.backspacePressed = function (block) {\r\n\r\n        var currentInputIndex = codex.caret.getCurrentInputIndex(),\r\n            range,\r\n            selectionLength,\r\n            firstLevelBlocksCount;\r\n\r\n        if (block.textContent.trim()) {\r\n\r\n            range           = codex.content.getRange();\r\n            selectionLength = range.endOffset - range.startOffset;\r\n\r\n\r\n            if (codex.caret.position.atStart() && !selectionLength && codex.state.inputs[currentInputIndex - 1]) {\r\n\r\n                codex.content.mergeBlocks(currentInputIndex);\r\n\r\n            } else {\r\n\r\n                return;\r\n\r\n            }\r\n        }\r\n\r\n        if (!selectionLength) {\r\n            block.remove();\r\n        }\r\n\r\n\r\n        firstLevelBlocksCount = codex.nodes.redactor.childNodes.length;\r\n\r\n        /**\r\n         * If all blocks are removed\r\n         */\r\n        if (firstLevelBlocksCount === 0) {\r\n\r\n            /** update currentNode variable */\r\n            codex.content.currentNode = null;\r\n\r\n            /** Inserting new empty initial block */\r\n            codex.ui.addInitialBlock();\r\n\r\n            /** Updating inputs state after deleting last block */\r\n            codex.ui.saveInputs();\r\n\r\n            /** Set to current appended block */\r\n            setTimeout(function () {\r\n\r\n                codex.caret.setToPreviousBlock(1);\r\n\r\n            }, 10);\r\n\r\n        } else {\r\n\r\n            if (codex.caret.inputIndex !== 0) {\r\n\r\n                /** Target block is not first */\r\n                codex.caret.setToPreviousBlock(codex.caret.inputIndex);\r\n\r\n            } else {\r\n\r\n                /** If we try to delete first block */\r\n                codex.caret.setToNextBlock(codex.caret.inputIndex);\r\n\r\n            }\r\n        }\r\n\r\n        codex.toolbar.move();\r\n\r\n        if (!codex.toolbar.opened) {\r\n            codex.toolbar.open();\r\n        }\r\n\r\n        /** Updating inputs state */\r\n        codex.ui.saveInputs();\r\n\r\n        /** Prevent default browser behaviour */\r\n        event.preventDefault();\r\n\r\n    };\r\n\r\n    /**\r\n     * @deprecated\r\n     *\r\n     * @param event\r\n     */\r\n    callbacks.blockPaste = function(event) {\r\n\r\n        var currentInputIndex = codex.caret.getCurrentInputIndex(),\r\n            node = codex.state.inputs[currentInputIndex];\r\n\r\n        setTimeout(function() {\r\n\r\n            codex.content.sanitize(node);\r\n\r\n            event.preventDefault();\r\n\r\n        }, 10);\r\n\r\n        event.stopImmediatePropagation();\r\n\r\n    };\r\n\r\n    /**\r\n     * This method is used to observe pasted dirty data.\r\n     *\r\n     * Mutation handlers send to separate observers each mutation (added, changed and so on), which will be\r\n     * passed from handler that sanitizes and replaces data.\r\n     *\r\n     * Probably won't be used\r\n     *\r\n     * @deprecated\r\n     *\r\n     * @param event\r\n     * @private\r\n     */\r\n    callbacks._blockPasteCallback = function(event) {\r\n\r\n        var currentInputIndex = codex.caret.getCurrentInputIndex();\r\n\r\n        /**\r\n         * create an observer instance\r\n         */\r\n        var observer = new MutationObserver(codex.callback.handleMutationsOnPaste);\r\n\r\n        /**\r\n         * configuration of the observer:\r\n         */\r\n        var config = {\r\n            attributes: true,\r\n            childList: false,\r\n            characterData: false,\r\n            subtree : true\r\n        };\r\n\r\n        // pass in the target node, as well as the observer options\r\n        observer.observe(codex.state.inputs[currentInputIndex], config);\r\n    };\r\n\r\n    /**\r\n     * This method prevents default behaviour.\r\n     *\r\n     * We get from clipboard pasted data, sanitize, make a fragment that contains of this sanitized nodes.\r\n     * Firstly, we need to memorize the caret position. We can do that by getting the range of selection.\r\n     * After all, we insert clear fragment into caret placed position. Then, we should move the caret to the last node\r\n     *\r\n     * @param event\r\n     */\r\n    callbacks.blockPasteCallback = function(event) {\r\n\r\n        /** Prevent default behaviour */\r\n        event.preventDefault();\r\n\r\n        /** get html pasted data - dirty data */\r\n        var data = event.clipboardData.getData('text/html') || event.clipboardData.getData('text/plain');\r\n\r\n        /** Temporary DIV that is used to work with childs as arrays item */\r\n        var div     = codex.draw.node('DIV', '', {}),\r\n            cleaner = new codex.sanitizer.init(codex.sanitizer.Config.BASIC),\r\n            cleanData,\r\n            fragment;\r\n\r\n        /** Create fragment, that we paste to range after proccesing */\r\n        fragment = document.createDocumentFragment();\r\n\r\n        cleanData = cleaner.clean(data);\r\n\r\n        div.innerHTML = cleanData;\r\n\r\n        var node, lastNode;\r\n\r\n        /**\r\n         * and fill in fragment\r\n         */\r\n        while (( node = div.firstChild) ) {\r\n            lastNode = fragment.appendChild(node);\r\n        }\r\n\r\n        /**\r\n         * work with selection and range\r\n         */\r\n        var selection, range;\r\n        selection = window.getSelection();\r\n\r\n        range = selection.getRangeAt(0);\r\n        range.deleteContents();\r\n\r\n        range.insertNode(fragment);\r\n        // document.execCommand('insertParagraph', false, \"<p>\");\r\n\r\n        /** Preserve the selection */\r\n        if (lastNode) {\r\n            range = range.cloneRange();\r\n            range.setStartAfter(lastNode);\r\n            range.collapse(true);\r\n            selection.removeAllRanges();\r\n            selection.addRange(range);\r\n        }\r\n\r\n    };\r\n\r\n    /**\r\n     * Sends all mutations to paste handler\r\n     */\r\n    callbacks.handleMutationsOnPaste = function(mutations) {\r\n\r\n        var self = this;\r\n\r\n        /**\r\n         * Calling function with context of this function.\r\n         * Also, we should sanitize pasted or changed data one time and ignore\r\n         * changings which makes sanitize method.\r\n         * For that, we need to send Context, MutationObserver.__proto__ that contains\r\n         * observer disconnect method.\r\n         */\r\n        mutations.forEach(function(mutation) {\r\n            codex.content.paste.call(self, mutation);\r\n        });\r\n    };\r\n\r\n    /**\r\n     * Clicks on block settings button\r\n     */\r\n    callbacks.showSettingsButtonClicked = function(){\r\n\r\n        /**\r\n         * Get type of current block\r\n         * It uses to append settings from tool.settings property.\r\n         * ...\r\n         * Type is stored in data-type attribute on block\r\n         */\r\n        var currentToolType = codex.content.currentNode.dataset.tool;\r\n\r\n        codex.toolbar.settings.toggle(currentToolType);\r\n\r\n        /** Close toolbox when settings button is active */\r\n        codex.toolbar.toolbox.close();\r\n        codex.toolbar.settings.hideRemoveActions();\r\n\r\n    };\r\n\r\n    callbacks.showCommentButtonClicked = function() {\r\n\r\n        var block = codex.content.currentNode;\r\n\r\n        codex.comments.add(block);\r\n\r\n    }\r\n\r\n    return callbacks;\r\n\r\n})({});\r\n\r\nmodule.exports  = callbacks;\r\n\n\n\n// WEBPACK FOOTER //\n// ./modules/callbacks.js","/**\r\n * Codex Editor Draw module\r\n *\r\n * @author Codex Team\r\n * @version 1.0.\r\n */\r\n\r\nvar draw = (function(draw) {\r\n\r\n    /**\r\n     * Base editor wrapper\r\n     */\r\n    draw.wrapper = function () {\r\n\r\n        var wrapper = document.createElement('div');\r\n\r\n        wrapper.className += 'codex-editor';\r\n\r\n        return wrapper;\r\n\r\n    };\r\n\r\n    /**\r\n     * Content-editable holder\r\n     */\r\n    draw.redactor = function () {\r\n\r\n        var redactor = document.createElement('div');\r\n\r\n        redactor.className += 'ce-redactor';\r\n\r\n        return redactor;\r\n\r\n    };\r\n\r\n    /**\r\n     * Comments side bar\r\n     */\r\n    draw.commentsSidebar = function() {\r\n\r\n        var sidebar = draw.node('DIV', 'ce-comments-sidebar');\r\n\r\n        return sidebar;\r\n\r\n    }\r\n\r\n    draw.ceBlock = function() {\r\n\r\n        var block = document.createElement('DIV');\r\n\r\n        block.className += 'ce_block';\r\n\r\n        return block;\r\n\r\n    };\r\n\r\n    /**\r\n     * Empty toolbar with toggler\r\n     */\r\n    draw.toolbar = function () {\r\n\r\n        var bar = document.createElement('div');\r\n\r\n        bar.className += 'ce-toolbar';\r\n\r\n        return bar;\r\n    };\r\n\r\n    draw.toolbarContent = function() {\r\n\r\n        var wrapper = document.createElement('DIV');\r\n        wrapper.classList.add('ce-toolbar__content');\r\n\r\n        return wrapper;\r\n    };\r\n\r\n    /**\r\n     * Inline toolbar\r\n     */\r\n    draw.inlineToolbar = function() {\r\n\r\n        var bar = document.createElement('DIV');\r\n\r\n        bar.className += 'ce-toolbar-inline';\r\n\r\n        return bar;\r\n\r\n    };\r\n\r\n    /**\r\n     * Wrapper for inline toobar buttons\r\n     */\r\n    draw.inlineToolbarButtons = function() {\r\n\r\n        var wrapper = document.createElement('DIV');\r\n\r\n        wrapper.className += 'ce-toolbar-inline__buttons';\r\n\r\n        return wrapper;\r\n    };\r\n\r\n    /**\r\n     * For some actions\r\n     */\r\n    draw.inlineToolbarActions = function() {\r\n\r\n        var wrapper = document.createElement('DIV');\r\n\r\n        wrapper.className += 'ce-toolbar-inline__actions';\r\n\r\n        return wrapper;\r\n\r\n    };\r\n\r\n    draw.inputForLink = function() {\r\n\r\n        var input = document.createElement('INPUT');\r\n\r\n        input.type        = 'input';\r\n        input.className  += 'inputForLink';\r\n        input.placeholder = 'Вставьте ссылку ...';\r\n        input.setAttribute('form', 'defaultForm');\r\n\r\n        input.setAttribute('autofocus', 'autofocus');\r\n\r\n        return input;\r\n\r\n    };\r\n\r\n    /**\r\n     * Block with notifications\r\n     */\r\n    draw.alertsHolder = function() {\r\n\r\n        var block = document.createElement('div');\r\n\r\n        block.classList.add('ce_notifications-block');\r\n\r\n        return block;\r\n\r\n    };\r\n\r\n    /**\r\n     * @todo Desc\r\n     */\r\n    draw.blockButtons = function() {\r\n\r\n        var block = document.createElement('div');\r\n\r\n        block.className += 'ce-toolbar__actions';\r\n\r\n        return block;\r\n    };\r\n\r\n    /**\r\n     * Block settings panel\r\n     */\r\n    draw.blockSettings = function () {\r\n\r\n        var settings = document.createElement('div');\r\n\r\n        settings.className += 'ce-settings';\r\n\r\n        return settings;\r\n    };\r\n\r\n    draw.defaultSettings = function() {\r\n\r\n        var div = document.createElement('div');\r\n\r\n        div.classList.add('ce-settings_default');\r\n\r\n        return div;\r\n    };\r\n\r\n    draw.pluginsSettings = function() {\r\n\r\n        var div = document.createElement('div');\r\n\r\n        div.classList.add('ce-settings_plugin');\r\n\r\n        return div;\r\n\r\n    };\r\n\r\n    draw.plusButton = function() {\r\n\r\n        var button = document.createElement('span');\r\n\r\n        button.className = 'ce-toolbar__plus';\r\n        // button.innerHTML = '<i class=\"ce-icon-plus\"></i>';\r\n\r\n        return button;\r\n    };\r\n\r\n    /**\r\n     * Settings button in toolbar\r\n     */\r\n    draw.settingsButton = function () {\r\n\r\n        var toggler = document.createElement('span');\r\n\r\n        toggler.className = 'ce-toolbar__settings-btn';\r\n\r\n        /** Toggler button*/\r\n        toggler.innerHTML = '<i class=\"ce-icon-cog\"></i>';\r\n\r\n        return toggler;\r\n    };\r\n\r\n    /**\r\n     * Comment button in toolbar\r\n     */\r\n    draw.commentButton = function () {\r\n\r\n        var toggler = document.createElement('span');\r\n\r\n        toggler.className = 'ce-toolbar__comment-btn';\r\n\r\n        /** Toggler button*/\r\n        toggler.innerHTML = '<i class=\"ce-icon-newspaper\"></i>';\r\n\r\n        return toggler;\r\n    };\r\n\r\n    /**\r\n     * Redactor tools wrapper\r\n     */\r\n\r\n    draw.toolbox = function() {\r\n\r\n        var wrapper = document.createElement('div');\r\n\r\n        wrapper.className = 'ce-toolbar__tools';\r\n\r\n        return wrapper;\r\n    };\r\n\r\n    /**\r\n     * @protected\r\n     *\r\n     * Draws tool buttons for toolbox\r\n     *\r\n     * @param {String} type\r\n     * @param {String} classname\r\n     * @returns {Element}\r\n     */\r\n    draw.toolbarButton = function (type, classname) {\r\n\r\n        var button     = document.createElement(\"li\"),\r\n            tool_icon  = document.createElement(\"i\"),\r\n            tool_title = document.createElement(\"span\");\r\n\r\n        button.dataset.type = type;\r\n        button.setAttribute('title', type);\r\n\r\n        tool_icon.classList.add(classname);\r\n        tool_title.classList.add('ce_toolbar_tools--title');\r\n\r\n\r\n        button.appendChild(tool_icon);\r\n        button.appendChild(tool_title);\r\n\r\n        return button;\r\n\r\n    };\r\n\r\n    /**\r\n     * @protected\r\n     *\r\n     * Draws tools for inline toolbar\r\n     *\r\n     * @param {String} type\r\n     * @param {String} classname\r\n     */\r\n    draw.toolbarButtonInline = function(type, classname) {\r\n        var button     = document.createElement(\"BUTTON\"),\r\n            tool_icon  = document.createElement(\"I\");\r\n\r\n        button.type = \"button\";\r\n        button.dataset.type = type;\r\n        tool_icon.classList.add(classname);\r\n\r\n        button.appendChild(tool_icon);\r\n\r\n        return button;\r\n    };\r\n\r\n    /**\r\n     * Redactor block\r\n     */\r\n    draw.block = function (tagName, content) {\r\n\r\n        var node = document.createElement(tagName);\r\n\r\n        node.innerHTML = content || '';\r\n\r\n        return node;\r\n\r\n    };\r\n\r\n    /**\r\n     * Creates Node with passed tagName and className\r\n     * @param {string}  tagName\r\n     * @param {string} className\r\n     * @param {object} properties - allow to assign properties\r\n     */\r\n    draw.node = function( tagName , className , properties ){\r\n\r\n        var el = document.createElement( tagName );\r\n\r\n        if ( className ) el.className = className;\r\n\r\n        if ( properties ) {\r\n\r\n            for (var name in properties){\r\n                el[name] = properties[name];\r\n            }\r\n        }\r\n\r\n        return el;\r\n    };\r\n\r\n    draw.pluginsRender = function(type, content) {\r\n\r\n        return {\r\n            type  : type,\r\n            block : cEditor.tools[type].render({\r\n                text : content\r\n            })\r\n        };\r\n    };\r\n\r\n    return draw;\r\n\r\n})({});\r\n\r\nmodule.exports = draw;\r\n\r\n\r\n\n\n\n// WEBPACK FOOTER //\n// ./modules/draw.js","/**\r\n * Codex Editor Caret Module\r\n *\r\n * @author Codex Team\r\n * @version 1.0\r\n */\r\nlet editor = codex.editor;\r\n\r\nmodule.exports = (function (caret) {\r\n\r\n    /**\r\n     * @var {int} InputIndex - editable element in DOM\r\n     */\r\n    caret.inputIndex = null;\r\n\r\n    /**\r\n     * @var {int} offset - caret position in a text node.\r\n     */\r\n    caret.offset = null;\r\n\r\n    /**\r\n     * @var {int} focusedNodeIndex - we get index of child node from first-level block\r\n     */\r\n    caret.focusedNodeIndex = null;\r\n\r\n    /**\r\n     * Creates Document Range and sets caret to the element.\r\n     * @protected\r\n     * @uses caret.save — if you need to save caret position\r\n     * @param {Element} el - Changed Node.\r\n     */\r\n    caret.set = function ( el, index, offset) {\r\n\r\n        offset = offset || caret.offset || 0;\r\n        index  = index  || caret.focusedNodeIndex || 0;\r\n\r\n        var childs = el.childNodes,\r\n            nodeToSet;\r\n\r\n        if ( childs.length === 0 ) {\r\n\r\n            nodeToSet = el;\r\n\r\n        } else {\r\n\r\n            nodeToSet = childs[index];\r\n\r\n        }\r\n\r\n        /** If Element is INPUT */\r\n        if (el.tagName == 'INPUT') {\r\n\r\n            el.focus();\r\n            return;\r\n\r\n        }\r\n\r\n        if (editor.core.isDomNode(nodeToSet)) {\r\n\r\n            nodeToSet = editor.content.getDeepestTextNodeFromPosition(nodeToSet, nodeToSet.childNodes.length);\r\n\r\n        }\r\n\r\n        var range     = document.createRange(),\r\n            selection = window.getSelection();\r\n\r\n        window.setTimeout(function () {\r\n\r\n            range.setStart(nodeToSet, offset);\r\n            range.setEnd(nodeToSet, offset);\r\n\r\n            selection.removeAllRanges();\r\n            selection.addRange(range);\r\n\r\n            editor.caret.saveCurrentInputIndex();\r\n\r\n        }, 20);\r\n\r\n    };\r\n\r\n    /**\r\n     * @protected\r\n     * Updates index of input and saves it in caret object\r\n     */\r\n    caret.saveCurrentInputIndex = function () {\r\n\r\n        /** Index of Input that we paste sanitized content */\r\n        var selection   = window.getSelection(),\r\n            inputs      = editor.state.inputs,\r\n            focusedNode = selection.anchorNode,\r\n            focusedNodeHolder;\r\n\r\n        if (!focusedNode) {\r\n\r\n            return;\r\n\r\n        }\r\n\r\n        /** Looking for parent contentEditable block */\r\n        while (focusedNode.contentEditable != 'true') {\r\n\r\n            focusedNodeHolder = focusedNode.parentNode;\r\n            focusedNode       = focusedNodeHolder;\r\n\r\n        }\r\n\r\n        /** Input index in DOM level */\r\n        var editableElementIndex = 0;\r\n\r\n        while (focusedNode != inputs[editableElementIndex]) {\r\n\r\n            editableElementIndex ++;\r\n\r\n        }\r\n\r\n        caret.inputIndex = editableElementIndex;\r\n\r\n    };\r\n\r\n    /**\r\n     * Returns current input index (caret object)\r\n     */\r\n    caret.getCurrentInputIndex = function () {\r\n\r\n        return caret.inputIndex;\r\n\r\n    };\r\n\r\n    /**\r\n     * @param {int} index - index of first-level block after that we set caret into next input\r\n     */\r\n    caret.setToNextBlock = function (index) {\r\n\r\n        var inputs = editor.state.inputs,\r\n            nextInput = inputs[index + 1];\r\n\r\n        if (!nextInput) {\r\n\r\n            editor.core.log('We are reached the end');\r\n            return;\r\n\r\n        }\r\n\r\n        /**\r\n         * When new Block created or deleted content of input\r\n         * We should add some text node to set caret\r\n         */\r\n        if (!nextInput.childNodes.length) {\r\n\r\n            var emptyTextElement = document.createTextNode('');\r\n\r\n            nextInput.appendChild(emptyTextElement);\r\n\r\n        }\r\n\r\n        editor.caret.inputIndex = index + 1;\r\n        editor.caret.set(nextInput, 0, 0);\r\n        editor.content.workingNodeChanged(nextInput);\r\n\r\n    };\r\n\r\n    /**\r\n     * @param {int} index - index of target input.\r\n     * Sets caret to input with this index\r\n     */\r\n    caret.setToBlock = function (index) {\r\n\r\n        var inputs = editor.state.inputs,\r\n            targetInput = inputs[index];\r\n\r\n        if ( !targetInput ) {\r\n\r\n            return;\r\n\r\n        }\r\n\r\n        /**\r\n         * When new Block created or deleted content of input\r\n         * We should add some text node to set caret\r\n         */\r\n        if (!targetInput.childNodes.length) {\r\n\r\n            var emptyTextElement = document.createTextNode('');\r\n\r\n            targetInput.appendChild(emptyTextElement);\r\n\r\n        }\r\n\r\n        editor.caret.inputIndex = index;\r\n        editor.caret.set(targetInput, 0, 0);\r\n        editor.content.workingNodeChanged(targetInput);\r\n\r\n    };\r\n\r\n    /**\r\n     * @param {int} index - index of input\r\n     */\r\n    caret.setToPreviousBlock = function (index) {\r\n\r\n        index = index || 0;\r\n\r\n        var inputs = editor.state.inputs,\r\n            previousInput = inputs[index - 1],\r\n            lastChildNode,\r\n            lengthOfLastChildNode,\r\n            emptyTextElement;\r\n\r\n\r\n        if (!previousInput) {\r\n\r\n            editor.core.log('We are reached first node');\r\n            return;\r\n\r\n        }\r\n\r\n        lastChildNode = editor.content.getDeepestTextNodeFromPosition(previousInput, previousInput.childNodes.length);\r\n        lengthOfLastChildNode = lastChildNode.length;\r\n\r\n        /**\r\n         * When new Block created or deleted content of input\r\n         * We should add some text node to set caret\r\n         */\r\n        if (!previousInput.childNodes.length) {\r\n\r\n            emptyTextElement = document.createTextNode('');\r\n            previousInput.appendChild(emptyTextElement);\r\n\r\n        }\r\n        editor.caret.inputIndex = index - 1;\r\n        editor.caret.set(previousInput, previousInput.childNodes.length - 1, lengthOfLastChildNode);\r\n        editor.content.workingNodeChanged(inputs[index - 1]);\r\n\r\n    };\r\n\r\n    caret.position = {\r\n\r\n        atStart : function () {\r\n\r\n            var selection       = window.getSelection(),\r\n                anchorOffset    = selection.anchorOffset,\r\n                anchorNode      = selection.anchorNode,\r\n                firstLevelBlock = editor.content.getFirstLevelBlock(anchorNode),\r\n                pluginsRender   = firstLevelBlock.childNodes[0];\r\n\r\n            if (!editor.core.isDomNode(anchorNode)) {\r\n\r\n                anchorNode = anchorNode.parentNode;\r\n\r\n            }\r\n\r\n            var isFirstNode  = anchorNode === pluginsRender.childNodes[0],\r\n                isOffsetZero = anchorOffset === 0;\r\n\r\n            return isFirstNode && isOffsetZero;\r\n\r\n        },\r\n\r\n        atTheEnd : function () {\r\n\r\n            var selection    = window.getSelection(),\r\n                anchorOffset = selection.anchorOffset,\r\n                anchorNode   = selection.anchorNode;\r\n\r\n            /** Caret is at the end of input */\r\n            return !anchorNode || !anchorNode.length || anchorOffset === anchorNode.length;\r\n\r\n        }\r\n    };\r\n\r\n    return caret;\r\n\r\n})({});\n\n\n// WEBPACK FOOTER //\n// ./modules/caret.js","/**\r\n * Codex Editor Notification Module\r\n *\r\n * @author Codex Team\r\n * @version 1.0\r\n */\r\nlet editor = codex.editor;\r\n\r\nmodule.exports = (function (notifications) {\r\n\r\n    /**\r\n     * Error notificator. Shows block with message\r\n     * @protected\r\n     */\r\n    notifications.errorThrown = function (errorMsg, event) {\r\n\r\n        editor.notifications.send('This action is not available currently', event.type, false);\r\n\r\n    };\r\n\r\n    /**\r\n     * Appends notification with different types\r\n     * @param message {string} - Error or alert message\r\n     * @param type {string} - Type of message notification. Ex: Error, Warning, Danger ...\r\n     * @param append {boolean} - can be True or False when notification should be inserted after\r\n     */\r\n    notifications.send = function (message, type, append) {\r\n\r\n        var notification = editor.draw.block('div');\r\n\r\n        notification.textContent = message;\r\n        notification.classList.add('ce_notification-item', 'ce_notification-' + type, 'flipInX');\r\n\r\n        if (!append) {\r\n\r\n            editor.nodes.notifications.innerHTML = '';\r\n\r\n        }\r\n\r\n        editor.nodes.notifications.appendChild(notification);\r\n\r\n        window.setTimeout(function () {\r\n\r\n            notification.remove();\r\n\r\n        }, 3000);\r\n\r\n    };\r\n\r\n    return notifications;\r\n\r\n})({});\n\n\n// WEBPACK FOOTER //\n// ./modules/notifications.js","/**\r\n * Codex Editor Parser Module\r\n *\r\n * @author Codex Team\r\n * @version 1.1\r\n */\r\nlet editor = codex.editor;\r\n\r\nmodule.exports = (function (parser) {\r\n\r\n    /** inserting text */\r\n    parser.insertPastedContent = function (blockType, tag) {\r\n\r\n        editor.content.insertBlock({\r\n            type :  blockType.type,\r\n            block : blockType.render({\r\n                text : tag.innerHTML\r\n            })\r\n        });\r\n\r\n    };\r\n\r\n    /**\r\n     * Check DOM node for display style: separated block or child-view\r\n     */\r\n    parser.isFirstLevelBlock = function (node) {\r\n\r\n        return node.nodeType == editor.core.nodeTypes.TAG &&\r\n            node.classList.contains(editor.ui.className.BLOCK_CLASSNAME);\r\n\r\n    };\r\n\r\n    return parser;\r\n\r\n})({});\r\n\n\n\n// WEBPACK FOOTER //\n// ./modules/parser.js","/**\r\n * Codex Sanitizer\r\n */\r\n\r\nvar janitor = require('html-janitor');\r\n\r\nmodule.exports = (function (sanitizer) {\r\n\r\n    /**\r\n     * Basic config\r\n     */\r\n    var Config = {\r\n\r\n        BASIC : {\r\n\r\n            tags: {\r\n                p: {},\r\n                a: {\r\n                    href: true,\r\n                    target: '_blank',\r\n                    rel: 'nofollow'\r\n                },\r\n                i: {},\r\n                b: {},\r\n                strong: {},\r\n                em: {},\r\n                span: {}\r\n            }\r\n        }\r\n    };\r\n\r\n    sanitizer.Config = Config;\r\n\r\n    sanitizer.init = janitor;\r\n\r\n    return sanitizer;\r\n\r\n})({});\n\n\n// WEBPACK FOOTER //\n// ./modules/sanitizer.js","(function (root, factory) {\n  if (typeof define === 'function' && define.amd) {\n    define('html-janitor', factory);\n  } else if (typeof exports === 'object') {\n    module.exports = factory();\n  } else {\n    root.HTMLJanitor = factory();\n  }\n}(this, function () {\n\n  /**\n   * @param {Object} config.tags Dictionary of allowed tags.\n   * @param {boolean} config.keepNestedBlockElements Default false.\n   */\n  function HTMLJanitor(config) {\n\n    var tagDefinitions = config['tags'];\n    var tags = Object.keys(tagDefinitions);\n\n    var validConfigValues = tags\n      .map(function(k) { return typeof tagDefinitions[k]; })\n      .every(function(type) { return type === 'object' || type === 'boolean' || type === 'function'; });\n\n    if(!validConfigValues) {\n      throw new Error(\"The configuration was invalid\");\n    }\n\n    this.config = config;\n  }\n\n  // TODO: not exhaustive?\n  var blockElementNames = ['P', 'LI', 'TD', 'TH', 'DIV', 'H1', 'H2', 'H3', 'H4', 'H5', 'H6', 'PRE'];\n  function isBlockElement(node) {\n    return blockElementNames.indexOf(node.nodeName) !== -1;\n  }\n\n  var inlineElementNames = ['A', 'B', 'STRONG', 'I', 'EM', 'SUB', 'SUP', 'U', 'STRIKE'];\n  function isInlineElement(node) {\n    return inlineElementNames.indexOf(node.nodeName) !== -1;\n  }\n\n  HTMLJanitor.prototype.clean = function (html) {\n    var sandbox = document.createElement('div');\n    sandbox.innerHTML = html;\n\n    this._sanitize(sandbox);\n\n    return sandbox.innerHTML;\n  };\n\n  HTMLJanitor.prototype._sanitize = function (parentNode) {\n    var treeWalker = createTreeWalker(parentNode);\n    var node = treeWalker.firstChild();\n    if (!node) { return; }\n\n    do {\n      // Ignore nodes that have already been sanitized\n      if (node._sanitized) {\n        continue;\n      }\n\n      if (node.nodeType === Node.TEXT_NODE) {\n        // If this text node is just whitespace and the previous or next element\n        // sibling is a block element, remove it\n        // N.B.: This heuristic could change. Very specific to a bug with\n        // `contenteditable` in Firefox: http://jsbin.com/EyuKase/1/edit?js,output\n        // FIXME: make this an option?\n        if (node.data.trim() === ''\n            && ((node.previousElementSibling && isBlockElement(node.previousElementSibling))\n                 || (node.nextElementSibling && isBlockElement(node.nextElementSibling)))) {\n          parentNode.removeChild(node);\n          this._sanitize(parentNode);\n          break;\n        } else {\n          continue;\n        }\n      }\n\n      // Remove all comments\n      if (node.nodeType === Node.COMMENT_NODE) {\n        parentNode.removeChild(node);\n        this._sanitize(parentNode);\n        break;\n      }\n\n      var isInline = isInlineElement(node);\n      var containsBlockElement;\n      if (isInline) {\n        containsBlockElement = Array.prototype.some.call(node.childNodes, isBlockElement);\n      }\n\n      // Block elements should not be nested (e.g. <li><p>...); if\n      // they are, we want to unwrap the inner block element.\n      var isNotTopContainer = !! parentNode.parentNode;\n      var isNestedBlockElement =\n            isBlockElement(parentNode) &&\n            isBlockElement(node) &&\n            isNotTopContainer;\n\n      var nodeName = node.nodeName.toLowerCase();\n\n      var allowedAttrs = getAllowedAttrs(this.config, nodeName, node);\n\n      var isInvalid = isInline && containsBlockElement;\n\n      // Drop tag entirely according to the whitelist *and* if the markup\n      // is invalid.\n      if (isInvalid || shouldRejectNode(node, allowedAttrs)\n          || (!this.config.keepNestedBlockElements && isNestedBlockElement)) {\n        // Do not keep the inner text of SCRIPT/STYLE elements.\n        if (! (node.nodeName === 'SCRIPT' || node.nodeName === 'STYLE')) {\n          while (node.childNodes.length > 0) {\n            parentNode.insertBefore(node.childNodes[0], node);\n          }\n        }\n        parentNode.removeChild(node);\n\n        this._sanitize(parentNode);\n        break;\n      }\n\n      // Sanitize attributes\n      for (var a = 0; a < node.attributes.length; a += 1) {\n        var attr = node.attributes[a];\n\n        if (shouldRejectAttr(attr, allowedAttrs, node)) {\n          node.removeAttribute(attr.name);\n          // Shift the array to continue looping.\n          a = a - 1;\n        }\n      }\n\n      // Sanitize children\n      this._sanitize(node);\n\n      // Mark node as sanitized so it's ignored in future runs\n      node._sanitized = true;\n    } while ((node = treeWalker.nextSibling()));\n  };\n\n  function createTreeWalker(node) {\n    return document.createTreeWalker(node,\n                                     NodeFilter.SHOW_TEXT | NodeFilter.SHOW_ELEMENT | NodeFilter.SHOW_COMMENT,\n                                     null, false);\n  }\n\n  function getAllowedAttrs(config, nodeName, node){\n    if (typeof config.tags[nodeName] === 'function') {\n      return config.tags[nodeName](node);\n    } else {\n      return config.tags[nodeName];\n    }\n  }\n\n  function shouldRejectNode(node, allowedAttrs){\n    if (typeof allowedAttrs === 'undefined') {\n      return true;\n    } else if (typeof allowedAttrs === 'boolean') {\n      return !allowedAttrs;\n    }\n\n    return false;\n  }\n\n  function shouldRejectAttr(attr, allowedAttrs, node){\n    var attrName = attr.name.toLowerCase();\n\n    if (allowedAttrs === true){\n      return false;\n    } else if (typeof allowedAttrs[attrName] === 'function'){\n      return !allowedAttrs[attrName](attr.value, node);\n    } else if (typeof allowedAttrs[attrName] === 'undefined'){\n      return true;\n    } else if (allowedAttrs[attrName] === false) {\n      return true;\n    } else if (typeof allowedAttrs[attrName] === 'string') {\n      return (allowedAttrs[attrName] !== attr.value);\n    }\n\n    return false;\n  }\n\n  return HTMLJanitor;\n\n}));\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/html-janitor/src/html-janitor.js\n// module id = 19\n// module chunks = 0","var comments = function(comments) {\r\n\r\n    var draw = {\r\n\r\n        commentsField: function(blockId) {\r\n\r\n            var field = codex.draw.node('DIV', 'ce-comments-field');\r\n\r\n            field.dataset.blockId = blockId;\r\n\r\n            return field;\r\n\r\n        },\r\n\r\n        input: function(text) {\r\n\r\n            var wrapper     = codex.draw.node('DIV', 'ce-comment'),\r\n                input       = codex.draw.node('DIV', 'ce-comment__input', {'contentEditable': 'true', 'textContent':text||''}),\r\n                deleteBtn   = codex.draw.node('DIV', 'ce-comment__delete', {'textContent': 'Delete'}),\r\n                postBtn     = codex.draw.node('DIV', 'ce-comment__post', {'textContent': text?'Save':'Comment'});\r\n\r\n            postBtn.addEventListener('click', callbacks.commentClicked);\r\n            deleteBtn.addEventListener('click', callbacks.deleteClicked);\r\n\r\n            wrapper.appendChild(input);\r\n            wrapper.appendChild(postBtn);\r\n            wrapper.appendChild(deleteBtn);\r\n\r\n            wrapper.dataset.edited = text?'edited ':'';\r\n\r\n            return wrapper;\r\n\r\n        },\r\n\r\n        comment: function(data) {\r\n\r\n            if (!data.text) return;\r\n\r\n            var wrapper     = codex.draw.node('DIV', 'ce-comment'),\r\n                text        = codex.draw.node('DIV', 'ce-comment__text', {'textContent': data.text}),\r\n                date        = new Date().toLocaleDateString('en-US',{\r\n                                                                        month: 'short',\r\n                                                                        day: 'numeric',\r\n                                                                        hour: 'numeric',\r\n                                                                        minute: 'numeric',\r\n                                                                        hour12: false\r\n                                                                    }),\r\n                time        = codex.draw.node('DIV', 'ce-comment__time', {'textContent': date}),\r\n                deleteBtn   = codex.draw.node('DIV', 'ce-comment__delete', {'textContent': 'Delete'}),\r\n                editBtn     = codex.draw.node('DIV', 'ce-comment__edit', {'textContent': 'Edit'});\r\n\r\n            editBtn.addEventListener('click', callbacks.editClicked);\r\n            deleteBtn.addEventListener('click', callbacks.deleteClicked);\r\n\r\n            wrapper.dataset.edited = data.edited;\r\n            time.dataset.edited = data.edited;\r\n\r\n            wrapper.appendChild(text);\r\n            wrapper.appendChild(time);\r\n            wrapper.appendChild(editBtn);\r\n            wrapper.appendChild(deleteBtn);\r\n\r\n            return wrapper;\r\n\r\n        }\r\n\r\n    };\r\n\r\n    var callbacks = {\r\n\r\n        commentClicked: function(e) {\r\n\r\n            var field   = e.path[2],\r\n                wrapper = e.path[1],\r\n                input   = wrapper.querySelector('.ce-comment__input');\r\n\r\n            if (input.textContent.trim() == '') return;\r\n\r\n            var comment = draw.comment({\r\n                            text: input.textContent,\r\n                            edited: wrapper.dataset.edited\r\n            });\r\n\r\n            field.replaceChild(comment, wrapper);\r\n\r\n        },\r\n\r\n        editClicked: function(e) {\r\n\r\n\r\n            var field   = e.path[2],\r\n                wrapper = e.path[1],\r\n                text   = wrapper.querySelector('.ce-comment__text');\r\n\r\n            var comment = draw.input(text.textContent);\r\n\r\n            field.replaceChild(comment, wrapper);\r\n\r\n        },\r\n\r\n        deleteClicked: function(e) {\r\n\r\n            var field   = e.path[2],\r\n                wrapper = e.path[1];\r\n\r\n            field.removeChild(wrapper);\r\n\r\n        }\r\n\r\n    };\r\n\r\n    var methods = {\r\n\r\n        getCoords: function(block) {\r\n\r\n            var rect = block.getBoundingClientRect();\r\n\r\n            return {\r\n                x: pageXOffset + rect.left,\r\n                y: pageYOffset + rect.top\r\n            }\r\n\r\n        }\r\n\r\n    }\r\n\r\n    comments.add = function(block) {\r\n\r\n        var blockId = block.dataset.id;\r\n\r\n        var field = codex.nodes.commentsSidebar.querySelector('.ce-comments-field[data-block-id=\"'+blockId+'\"]') ||\r\n                    draw.commentsField(blockId);\r\n\r\n        var comment = draw.input();\r\n\r\n        comment.querySelector('.ce-comment__input').focus();\r\n\r\n        field.appendChild(comment);\r\n\r\n        var blockCoords = methods.getCoords(block);\r\n\r\n        field.style.top = blockCoords.y + 'px';\r\n\r\n        codex.nodes.commentsSidebar.appendChild(field);\r\n\r\n    };\r\n\r\n\r\n    return comments;\r\n\r\n}({});\r\n\r\nmodule.exports = comments;\n\n\n// WEBPACK FOOTER //\n// ./modules/comments.js"],"sourceRoot":""}