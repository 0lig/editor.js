{"version":3,"sources":["webpack:///webpack/bootstrap c000f5fe1aad7d93de97","webpack:///./index.js","webpack:///./editor.js","webpack:///./modules/core.js","webpack:///./modules/ui.js","webpack:///./modules/transport.js","webpack:///./modules/renderer.js","webpack:///./modules/saver.js","webpack:///./modules/content.js","webpack:///./modules/toolbar/toolbar.js","webpack:///./modules/toolbar/settings.js","webpack:///./modules/toolbar/inline.js","webpack:///./modules/toolbar/toolbox.js","webpack:///./modules/tools.js","webpack:///./modules/callbacks.js","webpack:///./modules/draw.js","webpack:///./modules/caret.js","webpack:///./modules/notifications.js","webpack:///./modules/parser.js","webpack:///./modules/sanitizer.js","webpack:///./~/html-janitor/src/html-janitor.js"],"names":["editor","require","module","exports","codex","init","core","ui","transport","renderer","saver","content","toolbar","tools","callback","draw","caret","notifications","parser","sanitizer","version","settings","textareaId","uploadImagesUrl","initialBlockPlugin","nodes","textarea","wrapper","inlineToolbar","buttons","actions","toolbox","plusButton","showSettingsButton","showTrashButton","blockSettings","pluginSettings","defaultSettings","toolbarButtons","redactor","state","jsonOutput","blocks","inputs","start","userSettings","prepare","then","make","addTools","bindEvents","preparePlugins","makeBlocksFromData","saveInputs","catch","error","log","Promise","resolve","reject","data","document","getElementById","undefined","Error","msg","type","arg","window","console","e","insertAfter","target","element","parentNode","insertBefore","nextSibling","nodeTypes","TAG","TEXT","COMMENT","keys","BACKSPACE","TAB","ENTER","SHIFT","CTRL","ALT","ESC","SPACE","LEFT","UP","DOWN","RIGHT","DELETE","META","isDomNode","el","nodeType","ajax","url","XMLHTTP","XMLHttpRequest","ActiveXObject","success_function","params","obj","async","success","test","encodeURIComponent","withCredentials","beforeSend","call","open","setRequestHeader","onreadystatechange","readyState","status","responseText","send","importScript","scriptPath","instanceName","script","createElement","src","defer","id","head","appendChild","className","BLOCK_CLASSNAME","BLOCK_CONTENT","BLOCK_STRETCHED","BLOCK_HIGHLIGHTED","BLOCK_IN_FEED_MODE","SETTINGS_ITEM","toolbarContent","ceBlock","blockButtons","alertsHolder","body","settingsButton","makeRemoveBlockButton","pluginsSettings","makeInlineToolbar","addDefaultSettings","container","inlineToolbarButtons","inlineToolbarActions","tool","tool_button","name","displayInToolbox","iconClassname","render","toolbarButton","addInlineToolbarTools","bold","icon","command","italic","underline","link","toolButton","toolbarButtonInline","setInlineToolbarButtonBehaviour","addEventListener","errorMsg","lineNumber","errorThrown","event","globalKeydown","redactorKeyDown","globalKeyup","redactorClicked","plusButtonClicked","showSettingsButtonClicked","redactorInputEvent","button","toolbarButtonClicked","config","addBlockHandlers","block","blockKeydown","blockPasteCallback","inline","show","elements","querySelectorAll","addInitialBlock","initialBlockType","initialBlock","setAttribute","insertBlock","workingNodeChanged","toolClicked","input","arguments","fileSelected","clearInput","files","filesLength","length","formdData","FormData","file","i","append","selectAndUpload","args","click","xhr","onload","items","appendBlocks","nodeSequence","index","appendNodeAtIndex","getNodeAsync","createBlockFromData","blockData","blocksList","pluginName","cover","stretched","isStretched","saveBlocks","html","innerHTML","childNodes","makeQueue","queue","getBlockData","makeFormDataFromBlocks","dataset","save","blockContent","pluginsContent","savedData","output","validate","result","classList","contains","push","currentNode","editorAreaHightlighted","sync","getNodeFocused","selection","getSelection","focused","anchorNode","focusNode","parentElement","isFirstLevelBlock","parent","markBlock","add","clearMark","remove","getFirstLevelBlock","node","targetNode","replaceBlock","function_name","targetBlock","newBlock","replaceChild","needPlaceCaret","workingBlock","newBlockContent","blockType","composeNewBlock","currentInputIndex","getCurrentInputIndex","editableElement","querySelector","emptyText","createTextNode","set","move","showPlusButton","setTimeout","setToNextBlock","switchBlock","blockToReplace","newBlockComposed","getDeepestTextNodeFromPosition","position","blockChilds","text","textContent","trim","removeChild","looking_from_start","getRange","getRangeAt","splitBlock","inputIndex","anchorNodeText","caretOffset","anchorOffset","textBeforeCaret","textNodeBeforeCaret","textAfterCaret","textNodeAfterCaret","currentBlock","substring","previousChilds","nextChilds","reachedCurrent","child","previousChildsLength","nextChildsLength","newNode","NEW_BLOCK_TYPE","mergeBlocks","targetInputIndex","targetInput","currentInputContent","paste","mutation","workingNode","allowedToPaste","sanitize","pasteTextContent","addedNodes","textNode","disconnect","cleaner","satinizer","Config","BASIC","clean","outerHTML","div","replaceWith","isLastNode","allChecked","allSiblingsEmpty_","sibling","defaultToolbarHeight","defaultOffset","opened","current","close","toggle","hidePlusButton","toolbarHeight","clientHeight","newYCoordinate","offsetTop","style","transform","Math","floor","hideRemoveActions","setting","toolType","makeSettings","settingsBlock","feedModeToggler","makeFeedModeToggler","isFeedModeActivated","updateFeedMode","removeBlockWrapper","settingButton","actionWrapper","confirmAction","cancelAction","removeButtonClicked","confirmRemovingRequest","cancelRemovingRequest","action","showRemoveActions","firstLevelBlocksCount","buttonsOpened","actionsOpened","wrappersOffset","storedSelection","plugin","showInlineToolbar","selectedText","getSelectionText","showButtons","getWrappersOffset","coords","getSelectionCoords","newCoordinateX","newCoordinateY","offsetHeight","x","left","y","scrollY","top","closeButtons","closeAction","createLinkAction","defaultToolAction","forEach","hightlight","offset","getOffset","_x","_y","isNaN","offsetLeft","clientLeft","clientTop","offsetParent","sel","range","createRange","collapse","boundingLeft","boundingTop","rangeCount","cloneRange","getClientRects","rect","toString","showActions","isActive","isLinkActive","editable","saveSelection","restoreSelection","inputForLink","focus","preventDefault","keyCode","setAnchor","value","stopImmediatePropagation","clearRange","dataType","execCommand","containerEl","preSelectionRange","selectNodeContents","setEnd","startContainer","startOffset","end","savedSel","charIndex","setStart","nodeStack","foundStart","stop","nextCharIndex","pop","removeAllRanges","addRange","queryCommandState","setButtonHighlighted","removeButtonsHighLight","tag","tagName","leaf","currentTool","Object","barButtons","nextToolIndex","hiddenToolsAmount","toolToSelect","indexOf","toolIsLastInToolbox","UNREPLACEBLE_TOOLS","appendCallback","setToBlock","callbacks","redactorSyncTimeout","enterKeyPressed","tabKeyPressed","enterKeyPressedOnRedactorZone","escapeKeyPressed","defaultKeyPressed","arrowKeyPressed","enterPressedOnBlock","contentEditable","saveCurrentInputIndex","isEnterPressedOnToolbar","enableLineBreaks","stopPropagation","shiftKey","isLastTextNode","currentSelection","currentSelectedNode","caretAtTheEndOfText","atTheEnd","isTextNodeHasParentBetweenContenteditable","islastNode","detectWhenClickedOnFirstLevelBlockArea","indexOfLastInput","firstLevelBlock","inputIsEmpty","currentNodeType","flag","clearTimeout","blockRightOrDownArrowPressed","backspacePressed","blockLeftOrUpArrowPressed","focusedNode","focusedNodeHolder","editableElementIndex","caretInLastChild","lastChild","deepestTextnode","caretInFirstChild","caretAtTheBeginning","firstChild","setToPreviousBlock","selectionLength","endOffset","atStart","blockPaste","_blockPasteCallback","observer","MutationObserver","handleMutationsOnPaste","attributes","childList","characterData","subtree","observe","clipboardData","getData","cleanData","fragment","createDocumentFragment","lastNode","deleteContents","insertNode","setStartAfter","mutations","self","currentToolType","bar","placeholder","toggler","classname","tool_icon","tool_title","properties","pluginsRender","cEditor","focusedNodeIndex","childs","nodeToSet","nextInput","emptyTextElement","assert","previousInput","lastChildNode","lengthOfLastChildNode","isFirstNode","isOffsetZero","message","notification","insertPastedContent","janitor","tags","p","a","href","rel","ul","b","strong","em","span"],"mappings":"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","file":"codex-editor.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap c000f5fe1aad7d93de97","/**\r\n *\r\n */\r\n\r\n'use strict';\r\n\r\nvar editor = require('./editor');\r\nmodule.exports = editor;\r\n\n\n\n// WEBPACK FOOTER //\n// ./index.js","/**\r\n *\r\n * Codex Editor\r\n *\r\n * @author Codex Team\r\n * @version 1.3.0\r\n */\r\n\r\nvar codex = (function(codex){\r\n\r\n    var init = function() {\r\n\r\n        codex.core          = require('./modules/core');\r\n        codex.ui            = require('./modules/ui');\r\n        codex.transport     = require('./modules/transport');\r\n        codex.renderer      = require('./modules/renderer');\r\n        codex.saver         = require('./modules/saver');\r\n        codex.content       = require('./modules/content');\r\n        codex.toolbar       = require('./modules/toolbar/toolbar');\r\n        codex.tools         = require('./modules/tools');\r\n        codex.callback      = require('./modules/callbacks');\r\n        codex.draw          = require('./modules/draw');\r\n        codex.caret         = require('./modules/caret');\r\n        codex.notifications = require('./modules/notifications');\r\n        codex.parser        = require('./modules/parser');\r\n        codex.sanitizer     = require('./modules/sanitizer');\r\n    };\r\n\r\n    codex.version = VERSION;\r\n\r\n    /**\r\n     * @public\r\n     *\r\n     * holds initial settings\r\n     */\r\n    codex.settings = {\r\n        tools     : ['paragraph', 'header', 'picture', 'list', 'quote', 'code', 'twitter', 'instagram', 'smile'],\r\n        textareaId: 'codex-editor',\r\n        uploadImagesUrl: '/editor/transport/',\r\n\r\n        // Type of block showing on empty editor\r\n        initialBlockPlugin: \"paragraph\"\r\n    };\r\n\r\n    /**\r\n     * public\r\n     *\r\n     * Static nodes\r\n     */\r\n    codex.nodes = {\r\n        textarea          : null,\r\n        wrapper           : null,\r\n        toolbar           : null,\r\n        inlineToolbar     : {\r\n            wrapper : null,\r\n            buttons : null,\r\n            actions : null\r\n        },\r\n        toolbox           : null,\r\n        notifications     : null,\r\n        plusButton        : null,\r\n        showSettingsButton: null,\r\n        showTrashButton   : null,\r\n        blockSettings     : null,\r\n        pluginSettings    : null,\r\n        defaultSettings   : null,\r\n        toolbarButtons    : {}, // { type : DomEl, ... }\r\n        redactor          : null\r\n    };\r\n\r\n    /**\r\n     * @public\r\n     *\r\n     * Output state\r\n     */\r\n    codex.state = {\r\n        jsonOutput: [],\r\n        blocks    : [],\r\n        inputs    : []\r\n    };\r\n\r\n    /**\r\n     * Initialization\r\n     * @uses Promise cEditor.core.prepare\r\n     * @param {} userSettings are :\r\n     *          - tools [],\r\n     *          - textareaId String\r\n     *          ...\r\n     *\r\n     * Load user defined tools\r\n     * Tools must contain this important objects :\r\n     *  @param {String} type - this is a type of plugin. It can be used as plugin name\r\n     *  @param {String} iconClassname - this a icon in toolbar\r\n     *  @param {Object} make - what should plugin do, when it is clicked\r\n     *  @param {Object} appendCallback - callback after clicking\r\n     *  @param {Element} settings - what settings does it have\r\n     *  @param {Object} render - plugin get JSON, and should return HTML\r\n     *  @param {Object} save - plugin gets HTML content, returns JSON\r\n     *  @param {Boolean} displayInToolbox - will be displayed in toolbox. Default value is TRUE\r\n     *  @param {Boolean} enableLineBreaks - inserts new block or break lines. Default value is FALSE\r\n     *\r\n     * @example\r\n     *   -  type             : 'header',\r\n     *   -  iconClassname    : 'ce-icon-header',\r\n     *   -  make             : headerTool.make,\r\n     *   -  appendCallback   : headerTool.appendCallback,\r\n     *   -  settings         : headerTool.makeSettings(),\r\n     *   -  render           : headerTool.render,\r\n     *   -  save             : headerTool.save,\r\n     *   -  displayInToolbox : true,\r\n     *   -  enableLineBreaks : false\r\n     */\r\n    codex.start = function (userSettings) {\r\n\r\n        init();\r\n\r\n        this.core.prepare(userSettings)\r\n\r\n        // If all ok, make UI, bind events and parse initial-content\r\n            .then(this.ui.make)\r\n            .then(this.ui.addTools)\r\n            .then(this.ui.bindEvents)\r\n            .then(this.ui.preparePlugins)\r\n            .then(this.transport.prepare)\r\n            .then(this.renderer.makeBlocksFromData)\r\n            .then(this.ui.saveInputs)\r\n            .catch(function (error) {\r\n                codex.core.log('Initialization failed with error: %o', 'warn', error);\r\n            });\r\n\r\n    };\r\n\r\n    return codex;\r\n\r\n})({});\r\n\r\nmodule.exports = codex;\r\n\r\n\r\n\r\n\n\n\n// WEBPACK FOOTER //\n// ./editor.js","/**\r\n * Codex Editor Core\r\n *\r\n * @author Codex Team\r\n * @version 1.1.2\r\n */\r\n\r\nvar core = (function(core) {\r\n\r\n    /**\r\n     * @public\r\n     *\r\n     * Editor preparing method\r\n     * @return Promise\r\n     */\r\n    core.prepare = function (userSettings) {\r\n\r\n        return new Promise(function(resolve, reject) {\r\n\r\n            if ( userSettings ){\r\n\r\n                codex.settings.tools = userSettings.tools || codex.settings.tools;\r\n\r\n            }\r\n\r\n            if (userSettings.data) {\r\n                codex.state.blocks = userSettings.data;\r\n            }\r\n\r\n            if (userSettings.initialBlockPlugin) {\r\n                codex.settings.initialBlockPlugin = userSettings.initialBlockPlugin;\r\n            }\r\n\r\n            if (userSettings.uploadImagesUrl) {\r\n                codex.settings.uploadImagesUrl = userSettings.uploadImagesUrl;\r\n            }\r\n\r\n            codex.nodes.textarea = document.getElementById(userSettings.textareaId || codex.settings.textareaId);\r\n\r\n            if (typeof codex.nodes.textarea === undefined || codex.nodes.textarea === null) {\r\n                reject(Error(\"Textarea wasn't found by ID: #\" + userSettings.textareaId));\r\n            } else {\r\n                resolve();\r\n            }\r\n\r\n        });\r\n\r\n    };\r\n\r\n    /**\r\n     * Logging method\r\n     * @param type = ['log', 'info', 'warn']\r\n     */\r\n    core.log = function (msg, type, arg) {\r\n\r\n        type = type || 'log';\r\n\r\n        if (!arg) {\r\n            arg  = msg || 'undefined';\r\n            msg  = '[codex-editor]:      %o';\r\n        } else {\r\n            msg  = '[codex-editor]:      ' + msg;\r\n        }\r\n\r\n        try{\r\n            if ( 'console' in window && console[ type ] ){\r\n                if ( arg ) console[ type ]( msg , arg );\r\n                else console[ type ]( msg );\r\n            }\r\n\r\n        }catch(e){}\r\n\r\n    };\r\n\r\n    /**\r\n     * @protected\r\n     *\r\n     * Helper for insert one element after another\r\n     */\r\n    core.insertAfter = function (target, element) {\r\n        target.parentNode.insertBefore(element, target.nextSibling);\r\n    };\r\n\r\n    /**\r\n     * @const\r\n     *\r\n     * Readable DOM-node types map\r\n     */\r\n    core.nodeTypes = {\r\n        TAG     : 1,\r\n        TEXT    : 3,\r\n        COMMENT : 8\r\n    };\r\n\r\n    /**\r\n     * @const\r\n     * Readable keys map\r\n     */\r\n    core.keys = { BACKSPACE: 8, TAB: 9, ENTER: 13, SHIFT: 16, CTRL: 17, ALT: 18, ESC: 27, SPACE: 32, LEFT: 37, UP: 38, DOWN: 40, RIGHT: 39, DELETE: 46, META: 91 };\r\n\r\n    /**\r\n     * @protected\r\n     *\r\n     * Check object for DOM node\r\n     */\r\n    core.isDomNode = function (el) {\r\n        return el && typeof el === 'object' && el.nodeType && el.nodeType == this.nodeTypes.TAG;\r\n    };\r\n\r\n    /**\r\n     * Native Ajax\r\n     */\r\n    core.ajax = function (data) {\r\n\r\n        if (!data || !data.url){\r\n            return;\r\n        }\r\n\r\n        var XMLHTTP          = window.XMLHttpRequest ? new XMLHttpRequest() : new ActiveXObject(\"Microsoft.XMLHTTP\"),\r\n            success_function = function(){},\r\n            params = '',\r\n            obj;\r\n\r\n        data.async           = true;\r\n        data.type            = data.type || 'GET';\r\n        data.data            = data.data || '';\r\n        data['content-type'] = data['content-type'] || 'application/json; charset=utf-8';\r\n        success_function     = data.success || success_function ;\r\n\r\n        if (data.type == 'GET' && data.data) {\r\n\r\n            data.url = /\\?/.test(data.url) ? data.url + '&' + data.data : data.url + '?' + data.data;\r\n\r\n        } else {\r\n\r\n            for(obj in data.data) {\r\n                params += (obj + '=' + encodeURIComponent(data.data[obj]) + '&');\r\n            }\r\n        }\r\n\r\n        if (data.withCredentials) {\r\n            XMLHTTP.withCredentials = true;\r\n        }\r\n\r\n        if (data.beforeSend && typeof data.beforeSend == 'function') {\r\n            data.beforeSend.call();\r\n        }\r\n\r\n        XMLHTTP.open( data.type, data.url, data.async );\r\n        XMLHTTP.setRequestHeader(\"X-Requested-With\", \"XMLHttpRequest\");\r\n        XMLHTTP.setRequestHeader(\"Content-type\", \"application/x-www-form-urlencoded\");\r\n\r\n        XMLHTTP.onreadystatechange = function() {\r\n            if (XMLHTTP.readyState == 4 && XMLHTTP.status == 200) {\r\n                success_function(XMLHTTP.responseText);\r\n            }\r\n        };\r\n\r\n        XMLHTTP.send(params);\r\n    };\r\n\r\n    /** Appends script to head of document */\r\n    core.importScript = function(scriptPath, instanceName) {\r\n\r\n        /** Script is already loaded */\r\n        if ( !instanceName || (instanceName && document.getElementById('ce-script-' + instanceName)) ) {\r\n            codex.core.log(\"Instance name of script is missed or script is already loaded\", \"warn\");\r\n            return;\r\n        }\r\n\r\n\r\n        var script   = document.createElement('SCRIPT');\r\n        script.type = \"text/javascript\";\r\n        script.src = scriptPath;\r\n        script.async = true;\r\n        script.defer = true;\r\n\r\n        if (instanceName) {\r\n            script.id = \"ce-script-\" + instanceName;\r\n        }\r\n\r\n        document.head.appendChild(script);\r\n        return script;\r\n    };\r\n\r\n    return core;\r\n\r\n})({});\r\n\r\nmodule.exports = core;\r\n\r\n\r\n\n\n\n// WEBPACK FOOTER //\n// ./modules/core.js","/**\r\n * Codex Editor UI module\r\n *\r\n * @author Codex Team\r\n * @version 1.1\r\n */\r\n\r\nvar ui = (function(ui){\r\n\r\n    /**\r\n     * Basic editor classnames\r\n     */\r\n    ui.className = {\r\n\r\n        /**\r\n         * @const {string} BLOCK_CLASSNAME - redactor blocks name\r\n         */\r\n        BLOCK_CLASSNAME : 'ce-block',\r\n\r\n        /**\r\n         * @const {String} wrapper for plugins content\r\n         */\r\n        BLOCK_CONTENT : 'ce-block__content',\r\n\r\n        /**\r\n         * @const {String} BLOCK_STRETCHED - makes block stretched\r\n         */\r\n        BLOCK_STRETCHED : 'ce-block--stretched',\r\n\r\n        /**\r\n         * @const {String} BLOCK_HIGHLIGHTED - adds background\r\n         */\r\n        BLOCK_HIGHLIGHTED : 'ce-block--focused',\r\n\r\n        /**\r\n         * @const {String} - highlights covered blocks\r\n         */\r\n        BLOCK_IN_FEED_MODE : 'ce-block--feed-mode',\r\n\r\n        /**\r\n         * @const {String} - for all default settings\r\n         */\r\n        SETTINGS_ITEM : 'ce-settings__item'\r\n\r\n    };\r\n\r\n    /**\r\n     * @protected\r\n     *\r\n     * Making main interface\r\n     */\r\n    ui.make = function () {\r\n\r\n        var wrapper,\r\n            toolbar,\r\n            toolbarContent,\r\n            inlineToolbar,\r\n            redactor,\r\n            ceBlock,\r\n            notifications,\r\n            blockButtons,\r\n            blockSettings,\r\n            showSettingsButton,\r\n            showTrashButton,\r\n            toolbox,\r\n            plusButton;\r\n\r\n        /** Make editor wrapper */\r\n        wrapper = codex.draw.wrapper();\r\n\r\n        /** Append editor wrapper after initial textarea */\r\n        codex.core.insertAfter(codex.nodes.textarea, wrapper);\r\n\r\n        /** Append block with notifications to the document */\r\n        notifications = codex.draw.alertsHolder();\r\n        codex.nodes.notifications = document.body.appendChild(notifications);\r\n\r\n        /** Make toolbar and content-editable redactor */\r\n        toolbar               = codex.draw.toolbar();\r\n        toolbarContent        = codex.draw.toolbarContent();\r\n        inlineToolbar         = codex.draw.inlineToolbar();\r\n        plusButton            = codex.draw.plusButton();\r\n        showSettingsButton    = codex.draw.settingsButton();\r\n        showTrashButton       = codex.toolbar.settings.makeRemoveBlockButton();\r\n        blockSettings         = codex.draw.blockSettings();\r\n        blockButtons          = codex.draw.blockButtons();\r\n        toolbox               = codex.draw.toolbox();\r\n        redactor              = codex.draw.redactor();\r\n\r\n        /** settings */\r\n        var defaultSettings = codex.draw.defaultSettings(),\r\n            pluginSettings  = codex.draw.pluginsSettings();\r\n\r\n        /** Add default and plugins settings */\r\n        blockSettings.appendChild(pluginSettings);\r\n        blockSettings.appendChild(defaultSettings);\r\n\r\n        /** Make blocks buttons\r\n         * This block contains settings button and remove block button\r\n         */\r\n        blockButtons.appendChild(showSettingsButton);\r\n        blockButtons.appendChild(showTrashButton);\r\n        blockButtons.appendChild(blockSettings);\r\n\r\n        /** Append plus button */\r\n        toolbarContent.appendChild(plusButton);\r\n\r\n        /** Appending toolbar tools */\r\n        toolbarContent.appendChild(toolbox);\r\n\r\n        /** Appending first-level block buttons */\r\n        toolbar.appendChild(blockButtons);\r\n\r\n        /** Append toolbarContent to toolbar */\r\n        toolbar.appendChild(toolbarContent);\r\n\r\n        wrapper.appendChild(toolbar);\r\n\r\n        wrapper.appendChild(redactor);\r\n\r\n        /** Save created ui-elements to static nodes state */\r\n        codex.nodes.wrapper            = wrapper;\r\n        codex.nodes.toolbar            = toolbar;\r\n        codex.nodes.plusButton         = plusButton;\r\n        codex.nodes.toolbox            = toolbox;\r\n        codex.nodes.blockSettings      = blockSettings;\r\n        codex.nodes.pluginSettings     = pluginSettings;\r\n        codex.nodes.defaultSettings    = defaultSettings;\r\n        codex.nodes.showSettingsButton = showSettingsButton;\r\n        codex.nodes.showTrashButton    = showTrashButton;\r\n\r\n        codex.nodes.redactor = redactor;\r\n\r\n        codex.ui.makeInlineToolbar(inlineToolbar);\r\n\r\n        /** fill in default settings */\r\n        codex.toolbar.settings.addDefaultSettings();\r\n    };\r\n\r\n    ui.makeInlineToolbar = function(container) {\r\n\r\n        /** Append to redactor new inline block */\r\n        codex.nodes.inlineToolbar.wrapper = container;\r\n\r\n        /** Draw toolbar buttons */\r\n        codex.nodes.inlineToolbar.buttons = codex.draw.inlineToolbarButtons();\r\n\r\n        /** Buttons action or settings */\r\n        codex.nodes.inlineToolbar.actions = codex.draw.inlineToolbarActions();\r\n\r\n        /** Append to inline toolbar buttons as part of it */\r\n        codex.nodes.inlineToolbar.wrapper.appendChild(codex.nodes.inlineToolbar.buttons);\r\n        codex.nodes.inlineToolbar.wrapper.appendChild(codex.nodes.inlineToolbar.actions);\r\n\r\n        codex.nodes.wrapper.appendChild(codex.nodes.inlineToolbar.wrapper);\r\n    };\r\n\r\n    /**\r\n     * @private\r\n     * Append tools passed in codex.tools\r\n     */\r\n    ui.addTools = function () {\r\n\r\n        var tool,\r\n            tool_button;\r\n\r\n        for(var name in codex.settings.tools) {\r\n            tool = codex.settings.tools[name];\r\n            codex.tools[name] = tool;;\r\n        }\r\n\r\n        /** Make toolbar buttons */\r\n        for (var name in codex.tools){\r\n\r\n            tool = codex.tools[name];\r\n\r\n            if (!tool.displayInToolbox) {\r\n                continue;\r\n            }\r\n\r\n            if (!tool.iconClassname) {\r\n                codex.core.log('Toolbar icon classname missed. Tool %o skipped', 'warn', name);\r\n                continue;\r\n            }\r\n\r\n            if (typeof tool.render != 'function') {\r\n                codex.core.log('render method missed. Tool %o skipped', 'warn', name);\r\n                continue;\r\n            }\r\n\r\n            /**\r\n             * if tools is for toolbox\r\n             */\r\n            tool_button = codex.draw.toolbarButton(name, tool.iconClassname);\r\n\r\n            codex.nodes.toolbox.appendChild(tool_button);\r\n\r\n            /** Save tools to static nodes */\r\n            codex.nodes.toolbarButtons[name] = tool_button;\r\n        }\r\n\r\n\r\n        /**\r\n         * Add inline toolbar tools\r\n         */\r\n        codex.ui.addInlineToolbarTools();\r\n\r\n\r\n    };\r\n\r\n    ui.addInlineToolbarTools = function() {\r\n\r\n        var tools = {\r\n\r\n            bold: {\r\n                icon    : 'ce-icon-bold',\r\n                command : 'bold'\r\n            },\r\n\r\n            italic: {\r\n                icon    : 'ce-icon-italic',\r\n                command : 'italic'\r\n            },\r\n\r\n            underline: {\r\n                icon    : 'ce-icon-underline',\r\n                command : 'underline'\r\n            },\r\n\r\n            link: {\r\n                icon    : 'ce-icon-link',\r\n                command : 'createLink'\r\n            }\r\n        };\r\n\r\n        var toolButton,\r\n            tool;\r\n\r\n        for(var name in tools) {\r\n\r\n            tool = tools[name];\r\n\r\n            toolButton = codex.draw.toolbarButtonInline(name, tool.icon);\r\n\r\n            codex.nodes.inlineToolbar.buttons.appendChild(toolButton);\r\n            /**\r\n             * Add callbacks to this buttons\r\n             */\r\n            codex.ui.setInlineToolbarButtonBehaviour(toolButton, tool.command);\r\n        }\r\n\r\n    };\r\n\r\n    /**\r\n     * @private\r\n     * Bind editor UI events\r\n     */\r\n    ui.bindEvents = function () {\r\n\r\n        codex.core.log('ui.bindEvents fired', 'info');\r\n\r\n        window.addEventListener('error', function (errorMsg, url, lineNumber) {\r\n            codex.notifications.errorThrown(errorMsg, event);\r\n        }, false );\r\n\r\n        /** All keydowns on Document */\r\n        document.addEventListener('keydown', codex.callback.globalKeydown, false );\r\n\r\n        /** All keydowns on Redactor zone */\r\n        codex.nodes.redactor.addEventListener('keydown', codex.callback.redactorKeyDown, false);\r\n\r\n        /** All keydowns on Document */\r\n        document.addEventListener('keyup', codex.callback.globalKeyup, false );\r\n\r\n        /**\r\n         * Mouse click to radactor\r\n         */\r\n        codex.nodes.redactor.addEventListener('click', codex.callback.redactorClicked, false );\r\n\r\n        /**\r\n         * Clicks to the Plus button\r\n         */\r\n        codex.nodes.plusButton.addEventListener('click', codex.callback.plusButtonClicked, false);\r\n\r\n        /**\r\n         * Clicks to SETTINGS button in toolbar\r\n         */\r\n        codex.nodes.showSettingsButton.addEventListener('click', codex.callback.showSettingsButtonClicked, false );\r\n\r\n        /**\r\n         *  @deprecated ( but now in use for syncronization );\r\n         *  Any redactor changes: keyboard input, mouse cut/paste, drag-n-drop text\r\n         */\r\n        codex.nodes.redactor.addEventListener('input', codex.callback.redactorInputEvent, false );\r\n\r\n        /** Bind click listeners on toolbar buttons */\r\n        for (var button in codex.nodes.toolbarButtons){\r\n            codex.nodes.toolbarButtons[button].addEventListener('click', codex.callback.toolbarButtonClicked, false);\r\n        }\r\n\r\n    };\r\n\r\n    /**\r\n     * Initialize plugins before using\r\n     * Ex. Load scripts or call some internal methods\r\n     */\r\n    ui.preparePlugins = function() {\r\n\r\n        for(var tool in codex.tools) {\r\n\r\n            if (typeof codex.tools[tool].prepare != 'function')\r\n                continue;\r\n\r\n            codex.tools[tool].prepare(codex.tools[tool].config || {});\r\n\r\n        }\r\n    };\r\n\r\n    ui.addBlockHandlers = function(block) {\r\n\r\n        if (!block) return;\r\n\r\n        /**\r\n         * Block keydowns\r\n         */\r\n        block.addEventListener('keydown', function(event) {\r\n            codex.callback.blockKeydown(event, block);\r\n        }, false);\r\n\r\n        /**\r\n         * Pasting content from another source\r\n         * We have two type of sanitization\r\n         * First - uses deep-first search algorithm to get sub nodes,\r\n         * sanitizes whole Block_content and replaces cleared nodes\r\n         * This method is deprecated\r\n         * Method is used in codex.callback.blockPaste(event)\r\n         *\r\n         * Secont - uses Mutation observer.\r\n         * Observer \"observe\" DOM changes and send changings to callback.\r\n         * Callback gets changed node, not whole Block_content.\r\n         * Inserted or changed node, which we've gotten have been cleared and replaced with diry node\r\n         *\r\n         * Method is used in codex.callback.blockPasteViaSanitize(event)\r\n         *\r\n         * @uses html-janitor\r\n         * @example codex.callback.blockPasteViaSanitize(event), the second method.\r\n         *\r\n         */\r\n        block.addEventListener('paste', codex.callback.blockPasteCallback, false);\r\n\r\n        block.addEventListener('mouseup', function(){\r\n            codex.toolbar.inline.show();\r\n        }, false);\r\n\r\n    };\r\n\r\n    /** getting all contenteditable elements */\r\n    ui.saveInputs = function() {\r\n\r\n        var redactor = codex.nodes.redactor,\r\n            elements = [];\r\n\r\n        /** Save all inputs in global variable state */\r\n        codex.state.inputs = redactor.querySelectorAll('[contenteditable], input');\r\n    };\r\n\r\n    /**\r\n     * Adds first initial block on empty redactor\r\n     */\r\n    ui.addInitialBlock = function(){\r\n\r\n        var initialBlockType = codex.settings.initialBlockPlugin,\r\n            initialBlock;\r\n\r\n        if ( !codex.tools[initialBlockType] ){\r\n            codex.core.log('Plugin %o was not implemented and can\\'t be used as initial block', 'warn', initialBlockType);\r\n            return;\r\n        }\r\n\r\n        initialBlock = codex.tools[initialBlockType].render();\r\n\r\n        initialBlock.setAttribute('data-placeholder', 'Расскажите свою историю...');\r\n\r\n        codex.content.insertBlock({\r\n            type  : initialBlockType,\r\n            block : initialBlock\r\n        });\r\n\r\n        codex.content.workingNodeChanged(initialBlock);\r\n\r\n    };\r\n\r\n    ui.setInlineToolbarButtonBehaviour = function(button, type) {\r\n\r\n        button.addEventListener('mousedown', function(event) {\r\n\r\n            codex.toolbar.inline.toolClicked(event, type);\r\n\r\n        }, false);\r\n    };\r\n\r\n    return ui;\r\n\r\n})({});\r\n\r\nmodule.exports = ui;\n\n\n// WEBPACK FOOTER //\n// ./modules/ui.js","/**\r\n *\r\n * Codex.Editor Transport Module\r\n *\r\n * @author Codex Team\r\n * @version 1.0\r\n */\r\n\r\nvar transport = (function(transport){\r\n\r\n    transport.input = null;\r\n\r\n    /**\r\n     * @property {Object} arguments - keep plugin settings and defined callbacks\r\n     */\r\n    transport.arguments = null;\r\n\r\n    transport.prepare = function(){\r\n\r\n        var input = document.createElement('INPUT');\r\n\r\n        input.type = 'file';\r\n        input.addEventListener('change', codex.transport.fileSelected);\r\n\r\n        codex.transport.input = input;\r\n\r\n    };\r\n\r\n    /** Clear input when files is uploaded */\r\n    transport.clearInput = function() {\r\n\r\n        /** Remove old input */\r\n        this.input = null;\r\n\r\n        /** Prepare new one */\r\n        this.prepare();\r\n    };\r\n\r\n    /**\r\n     * Callback for file selection\r\n     */\r\n    transport.fileSelected = function(event){\r\n\r\n        var input       = this,\r\n            files       = input.files,\r\n            filesLength = files.length,\r\n            formdData   = new FormData(),\r\n            file,\r\n            i;\r\n\r\n        formdData.append('files', files[0], files[0].name);\r\n\r\n        codex.transport.ajax({\r\n            data : formdData,\r\n            beforeSend : codex.transport.arguments.beforeSend,\r\n            success    : codex.transport.arguments.success,\r\n            error      : codex.transport.arguments.error\r\n        });\r\n    };\r\n\r\n    /**\r\n     * Use plugin callbacks\r\n     * @protected\r\n     */\r\n    transport.selectAndUpload = function (args) {\r\n\r\n        this.arguments = args;\r\n        this.input.click();\r\n\r\n    };\r\n\r\n    /**\r\n     * Ajax requests module\r\n     */\r\n    transport.ajax = function(params){\r\n\r\n        var xhr = new XMLHttpRequest(),\r\n            beforeSend = typeof params.beforeSend == 'function' ? params.beforeSend : function(){},\r\n            success    = typeof params.success    == 'function' ? params.success : function(){},\r\n            error      = typeof params.error      == 'function' ? params.error   : function(){};\r\n\r\n        beforeSend();\r\n\r\n        xhr.open('POST', codex.settings.uploadImagesUrl, true);\r\n\r\n        xhr.setRequestHeader(\"X-Requested-With\", \"XMLHttpRequest\");\r\n\r\n        xhr.onload = function () {\r\n            if (xhr.status === 200) {\r\n                success(xhr.responseText);\r\n            } else {\r\n                console.log(\"request error: %o\", xhr);\r\n                error();\r\n            }\r\n        };\r\n\r\n        xhr.send(params.data);\r\n        this.clearInput();\r\n\r\n    };\r\n\r\n    return transport;\r\n\r\n})({});\r\n\r\nmodule.exports  = transport;\n\n\n// WEBPACK FOOTER //\n// ./modules/transport.js","/**\r\n * Codex Editor Renderer Module\r\n *\r\n * @author Codex Team\r\n * @version 1.0\r\n */\r\n\r\nvar renderer = (function(renderer) {\r\n\r\n    /**\r\n     * Asyncronously parses input JSON to redactor blocks\r\n     */\r\n    renderer.makeBlocksFromData = function () {\r\n\r\n        /**\r\n         * If redactor is empty, add first paragraph to start writing\r\n         */\r\n        if (!codex.state.blocks.items.length) {\r\n\r\n            codex.ui.addInitialBlock();\r\n            return;\r\n\r\n        }\r\n\r\n        Promise.resolve()\r\n\r\n        /** First, get JSON from state */\r\n            .then(function() {\r\n                return codex.state.blocks;\r\n            })\r\n\r\n            /** Then, start to iterate they */\r\n            .then(codex.renderer.appendBlocks)\r\n\r\n            /** Write log if something goes wrong */\r\n            .catch(function(error) {\r\n                codex.core.log('Error while parsing JSON: %o', 'error', error);\r\n            });\r\n\r\n    };\r\n\r\n    /**\r\n     * Parses JSON to blocks\r\n     * @param {object} data\r\n     * @return Primise -> nodeList\r\n     */\r\n    renderer.appendBlocks = function (data) {\r\n\r\n        var blocks = data.items;\r\n\r\n        /**\r\n         * Sequence of one-by-one blocks appending\r\n         * Uses to save blocks order after async-handler\r\n         */\r\n        var nodeSequence = Promise.resolve();\r\n\r\n        for (var index = 0; index < blocks.length ; index++ ) {\r\n\r\n            /** Add node to sequence at specified index */\r\n            codex.renderer.appendNodeAtIndex(nodeSequence, blocks, index);\r\n\r\n        }\r\n\r\n    };\r\n\r\n    /**\r\n     * Append node at specified index\r\n     */\r\n    renderer.appendNodeAtIndex = function (nodeSequence, blocks, index) {\r\n\r\n        /** We need to append node to sequence */\r\n        nodeSequence\r\n\r\n        /** first, get node async-aware */\r\n            .then(function() {\r\n\r\n                return codex.renderer.getNodeAsync(blocks , index);\r\n\r\n            })\r\n\r\n            /**\r\n             * second, compose editor-block from JSON object\r\n             */\r\n            .then(codex.renderer.createBlockFromData)\r\n\r\n            /**\r\n             * now insert block to redactor\r\n             */\r\n            .then(function(blockData){\r\n\r\n                /**\r\n                 * blockData has 'block', 'type' and 'stretched' information\r\n                 */\r\n                codex.content.insertBlock(blockData);\r\n\r\n                /** Pass created block to next step */\r\n                return blockData.block;\r\n\r\n            })\r\n\r\n            /** Log if something wrong with node */\r\n            .catch(function(error) {\r\n                codex.core.log('Node skipped while parsing because %o', 'error', error);\r\n            });\r\n\r\n    };\r\n\r\n    /**\r\n     * Asynchronously returns block data from blocksList by index\r\n     * @return Promise to node\r\n     */\r\n    renderer.getNodeAsync = function (blocksList, index) {\r\n\r\n        return Promise.resolve().then(function() {\r\n\r\n            return blocksList[index];\r\n\r\n        });\r\n    };\r\n\r\n    /**\r\n     * Creates editor block by JSON-data\r\n     *\r\n     * @uses render method of each plugin\r\n     *\r\n     * @param {object} blockData looks like\r\n     *                            { header : {\r\n     *                                            text: '',\r\n     *                                            type: 'H3', ...\r\n     *                                        }\r\n     *                            }\r\n     * @return {object} with type and Element\r\n     */\r\n    renderer.createBlockFromData = function (blockData) {\r\n\r\n        /** New parser */\r\n        var pluginName = blockData.type,\r\n            cover      = blockData.cover;\r\n\r\n        /** Get first key of object that stores plugin name */\r\n        // for (var pluginName in blockData) break;\r\n\r\n        /** Check for plugin existance */\r\n        if (!codex.tools[pluginName]) {\r\n            throw Error(`Plugin «${pluginName}» not found`);\r\n        }\r\n\r\n        /** Check for plugin having render method */\r\n        if (typeof codex.tools[pluginName].render != 'function') {\r\n\r\n            throw Error(`Plugin «${pluginName}» must have «render» method`);\r\n        }\r\n\r\n        /** New Parser */\r\n        var block = codex.tools[pluginName].render(blockData.data);\r\n\r\n        /** is first-level block stretched */\r\n        var stretched = codex.tools[pluginName].isStretched || false;\r\n\r\n        /** Retrun type and block */\r\n        return {\r\n            type      : pluginName,\r\n            block     : block,\r\n            stretched : stretched,\r\n            cover     : cover\r\n        };\r\n\r\n    };\r\n\r\n    return renderer;\r\n\r\n})({});\r\n\r\nmodule.exports = renderer;\n\n\n// WEBPACK FOOTER //\n// ./modules/renderer.js","/**\r\n * Codex Editor Saver\r\n *\r\n * @author Codex Team\r\n * @version 1.0.2\r\n */\r\n\r\nvar saver = (function(saver) {\r\n\r\n    /**\r\n     * Saves blocks\r\n     * @private\r\n     */\r\n    saver.saveBlocks = function () {\r\n\r\n        /** Save html content of redactor to memory */\r\n        codex.state.html = codex.nodes.redactor.innerHTML;\r\n\r\n        /** Empty jsonOutput state */\r\n        codex.state.jsonOutput = [];\r\n\r\n        Promise.resolve()\r\n\r\n            .then(function() {\r\n                return codex.nodes.redactor.childNodes;\r\n            })\r\n            /** Making a sequence from separate blocks */\r\n            .then(codex.saver.makeQueue)\r\n\r\n            .then(function() {\r\n                // codex.nodes.textarea.innerHTML = codex.state.html;\r\n            })\r\n\r\n            .catch( function(error) {\r\n                console.log('Something happend');\r\n            });\r\n\r\n    };\r\n\r\n    saver.makeQueue = function(blocks) {\r\n\r\n        var queue = Promise.resolve();\r\n\r\n        for(var index = 0; index < blocks.length; index++) {\r\n\r\n            /** Add node to sequence at specified index */\r\n            codex.saver.getBlockData(queue, blocks, index);\r\n\r\n        }\r\n\r\n    };\r\n\r\n    /** Gets every block and makes From Data */\r\n    saver.getBlockData = function(queue, blocks, index) {\r\n\r\n        queue.then(function() {\r\n            return codex.saver.getNodeAsync(blocks, index);\r\n        })\r\n\r\n            .then(codex.saver.makeFormDataFromBlocks);\r\n\r\n    };\r\n\r\n\r\n    /**\r\n     * Asynchronously returns block data from blocksList by index\r\n     * @return Promise to node\r\n     */\r\n    saver.getNodeAsync = function (blocksList, index) {\r\n\r\n        return Promise.resolve().then(function() {\r\n\r\n            return blocksList[index];\r\n\r\n        });\r\n    };\r\n\r\n    saver.makeFormDataFromBlocks = function(block) {\r\n\r\n        var pluginName = block.dataset.tool;\r\n\r\n        /** Check for plugin existance */\r\n        if (!codex.tools[pluginName]) {\r\n            throw Error(`Plugin «${pluginName}» not found`);\r\n        }\r\n\r\n        /** Check for plugin having render method */\r\n        if (typeof codex.tools[pluginName].save != 'function') {\r\n\r\n            throw Error(`Plugin «${pluginName}» must have save method`);\r\n        }\r\n\r\n        /** Result saver */\r\n        var blockContent   = block.childNodes[0],\r\n            pluginsContent = blockContent.childNodes[0],\r\n            savedData      = codex.tools[pluginName].save(pluginsContent),\r\n            output;\r\n\r\n\r\n        output = {\r\n            type: pluginName,\r\n            data: savedData\r\n        };\r\n\r\n        if (codex.tools[pluginName].validate) {\r\n            var result = codex.tools[pluginName].validate(savedData);\r\n\r\n            /**\r\n             * Do not allow invalid data\r\n             */\r\n            if (!result)\r\n                return;\r\n        }\r\n        \r\n        /** Marks Blocks that will be in main page */\r\n        output.cover = block.classList.contains(codex.ui.className.BLOCK_IN_FEED_MODE);\r\n\r\n        codex.state.jsonOutput.push(output);\r\n    };\r\n\r\n    return saver;\r\n\r\n})({});\r\n\r\nmodule.exports = saver;\n\n\n// WEBPACK FOOTER //\n// ./modules/saver.js","/**\r\n * Codex Editor Content Module\r\n * Works with DOM\r\n *\r\n * @author Codex Team\r\n * @version 1.3.6\r\n */\r\n\r\nvar content = (function(content) {\r\n\r\n    /**\r\n     * Links to current active block\r\n     * @type {null | Element}\r\n     */\r\n    content.currentNode = null;\r\n\r\n    /**\r\n     * clicked in redactor area\r\n     * @type {null | Boolean}\r\n     */\r\n    content.editorAreaHightlighted = null;\r\n\r\n    /**\r\n     * Synchronizes redactor with original textarea\r\n     */\r\n    content.sync = function () {\r\n\r\n        codex.core.log('syncing...');\r\n\r\n        /**\r\n         * Save redactor content to codex.state\r\n         */\r\n        codex.state.html = codex.nodes.redactor.innerHTML;\r\n\r\n    };\r\n\r\n    /**\r\n     * @deprecated\r\n     */\r\n    content.getNodeFocused = function() {\r\n\r\n        var selection = window.getSelection(),\r\n            focused;\r\n\r\n        if (selection.anchorNode === null) {\r\n            return null;\r\n        }\r\n\r\n        if ( selection.anchorNode.nodeType == codex.core.nodeTypes.TAG ) {\r\n            focused = selection.anchorNode;\r\n        } else {\r\n            focused = selection.focusNode.parentElement;\r\n        }\r\n\r\n        if ( !codex.parser.isFirstLevelBlock(focused) ) {\r\n\r\n            /** Iterate with parent nodes to find first-level*/\r\n            var parent = focused.parentNode;\r\n\r\n            while (parent && !codex.parser.isFirstLevelBlock(parent)){\r\n                parent = parent.parentNode;\r\n            }\r\n\r\n            focused = parent;\r\n        }\r\n\r\n        if (focused != codex.nodes.redactor){\r\n            return focused;\r\n        }\r\n\r\n        return null;\r\n\r\n    };\r\n\r\n    /**\r\n     * Appends background to the block\r\n     */\r\n    content.markBlock = function() {\r\n\r\n        codex.content.currentNode.classList.add(codex.ui.className.BLOCK_HIGHLIGHTED);\r\n    };\r\n\r\n    /**\r\n     * Clear background\r\n     */\r\n    content.clearMark = function() {\r\n\r\n        if (codex.content.currentNode) {\r\n            codex.content.currentNode.classList.remove(codex.ui.className.BLOCK_HIGHLIGHTED);\r\n        }\r\n\r\n    };\r\n\r\n    /**\r\n     * @private\r\n     *\r\n     * Finds first-level block\r\n     * @param {Element} node - selected or clicked in redactors area node\r\n     */\r\n    content.getFirstLevelBlock = function(node) {\r\n\r\n        if (!codex.core.isDomNode(node)) {\r\n            node = node.parentNode;\r\n        }\r\n\r\n        if (node === codex.nodes.redactor || node === document.body) {\r\n\r\n            return null;\r\n\r\n        } else {\r\n\r\n            while(!node.classList.contains(codex.ui.className.BLOCK_CLASSNAME)) {\r\n                node = node.parentNode;\r\n            }\r\n\r\n            return node;\r\n        }\r\n\r\n    };\r\n\r\n    /**\r\n     * Trigger this event when working node changed\r\n     * @param {Element} targetNode - first-level of this node will be current\r\n     * If targetNode is first-level then we set it as current else we look for parents to find first-level\r\n     */\r\n    content.workingNodeChanged = function (targetNode) {\r\n\r\n        /** Clear background from previous marked block before we change */\r\n        codex.content.clearMark();\r\n\r\n        if (!targetNode) {\r\n            return;\r\n        }\r\n\r\n        this.currentNode = this.getFirstLevelBlock(targetNode);\r\n\r\n    };\r\n\r\n    /**\r\n     * Replaces one redactor block with another\r\n     * @protected\r\n     * @param {Element} targetBlock - block to replace. Mostly currentNode.\r\n     * @param {Element} newBlock\r\n     * @param {string} newBlockType - type of new block; we need to store it to data-attribute\r\n     *\r\n     * [!] Function does not saves old block content.\r\n     *     You can get it manually and pass with newBlock.innerHTML\r\n     */\r\n    content.replaceBlock = function function_name(targetBlock, newBlock) {\r\n\r\n        if (!targetBlock || !newBlock){\r\n            codex.core.log('replaceBlock: missed params');\r\n            return;\r\n        }\r\n\r\n        /** If target-block is not a frist-level block, then we iterate parents to find it */\r\n        while(!targetBlock.classList.contains(codex.ui.className.BLOCK_CLASSNAME)) {\r\n            targetBlock = targetBlock.parentNode;\r\n        }\r\n\r\n        /** Replacing */\r\n        codex.nodes.redactor.replaceChild(newBlock, targetBlock);\r\n\r\n        /**\r\n         * Set new node as current\r\n         */\r\n        codex.content.workingNodeChanged(newBlock);\r\n\r\n        /**\r\n         * Add block handlers\r\n         */\r\n        codex.ui.addBlockHandlers(newBlock);\r\n\r\n        /**\r\n         * Save changes\r\n         */\r\n        codex.ui.saveInputs();\r\n\r\n    };\r\n\r\n    /**\r\n     * @private\r\n     *\r\n     * Inserts new block to redactor\r\n     * Wrapps block into a DIV with BLOCK_CLASSNAME class\r\n     *\r\n     * @param blockData          {object}\r\n     * @param blockData.block    {Element}   element with block content\r\n     * @param blockData.type     {string}    block plugin\r\n     * @param needPlaceCaret     {bool}      pass true to set caret in new block\r\n     *\r\n     */\r\n    content.insertBlock = function( blockData, needPlaceCaret ) {\r\n\r\n        var workingBlock    = codex.content.currentNode,\r\n            newBlockContent = blockData.block,\r\n            blockType       = blockData.type,\r\n            cover           = blockData.cover,\r\n            isStretched     = blockData.stretched;\r\n\r\n        var newBlock = codex.content.composeNewBlock(newBlockContent, blockType, isStretched);\r\n\r\n        if (cover === true) {\r\n            newBlock.classList.add(codex.ui.className.BLOCK_IN_FEED_MODE);\r\n        }\r\n\r\n        if (workingBlock) {\r\n\r\n            codex.core.insertAfter(workingBlock, newBlock);\r\n\r\n        } else {\r\n            /**\r\n             * If redactor is empty, append as first child\r\n             */\r\n            codex.nodes.redactor.appendChild(newBlock);\r\n\r\n        }\r\n\r\n        /**\r\n         * Block handler\r\n         */\r\n        codex.ui.addBlockHandlers(newBlock);\r\n\r\n        /**\r\n         * Set new node as current\r\n         */\r\n        codex.content.workingNodeChanged(newBlock);\r\n\r\n        /**\r\n         * Save changes\r\n         */\r\n        codex.ui.saveInputs();\r\n\r\n\r\n        if ( needPlaceCaret ) {\r\n\r\n            /**\r\n             * If we don't know input index then we set default value -1\r\n             */\r\n            var currentInputIndex = codex.caret.getCurrentInputIndex() || -1;\r\n\r\n\r\n            if (currentInputIndex == -1) {\r\n\r\n\r\n                var editableElement = newBlock.querySelector('[contenteditable]'),\r\n                    emptyText       = document.createTextNode('');\r\n\r\n                editableElement.appendChild(emptyText);\r\n                codex.caret.set(editableElement, 0, 0);\r\n\r\n                codex.toolbar.move();\r\n                codex.toolbar.showPlusButton();\r\n\r\n\r\n            } else {\r\n\r\n                /** Timeout for browsers execution */\r\n                setTimeout(function () {\r\n\r\n                    /** Setting to the new input */\r\n                    codex.caret.setToNextBlock(currentInputIndex);\r\n                    codex.toolbar.move();\r\n                    codex.toolbar.open();\r\n\r\n                }, 10);\r\n\r\n            }\r\n\r\n        }\r\n\r\n        /**\r\n         * Block is inserted, wait for new click that defined focusing on editors area\r\n         * @type {boolean}\r\n         */\r\n        content.editorAreaHightlighted = false;\r\n\r\n    };\r\n\r\n    /**\r\n     * Replaces blocks with saving content\r\n     * @protected\r\n     * @param {Element} noteToReplace\r\n     * @param {Element} newNode\r\n     * @param {Element} blockType\r\n     */\r\n    content.switchBlock = function(blockToReplace, newBlock, tool){\r\n\r\n        var newBlockComposed = codex.content.composeNewBlock(newBlock, tool);\r\n\r\n        /** Replacing */\r\n        codex.content.replaceBlock(blockToReplace, newBlockComposed);\r\n\r\n        /** Save new Inputs when block is changed */\r\n        codex.ui.saveInputs();\r\n    };\r\n\r\n    /**\r\n     * Iterates between child noted and looking for #text node on deepest level\r\n     * @private\r\n     * @param {Element} block - node where find\r\n     * @param {int} postiton - starting postion\r\n     *      Example: childNodex.length to find from the end\r\n     *               or 0 to find from the start\r\n     * @return {Text} block\r\n     * @uses DFS\r\n     */\r\n    content.getDeepestTextNodeFromPosition = function (block, position) {\r\n\r\n        /**\r\n         * Clear Block from empty and useless spaces with trim.\r\n         * Such nodes we should remove\r\n         */\r\n        var blockChilds = block.childNodes,\r\n            index,\r\n            node,\r\n            text;\r\n\r\n        for(index = 0; index < blockChilds.length; index++)\r\n        {\r\n            node = blockChilds[index];\r\n\r\n            if (node.nodeType == codex.core.nodeTypes.TEXT) {\r\n\r\n                text = node.textContent.trim();\r\n\r\n                /** Text is empty. We should remove this child from node before we start DFS\r\n                 * decrease the quantity of childs.\r\n                 */\r\n                if (text === '') {\r\n\r\n                    block.removeChild(node);\r\n                    position--;\r\n                }\r\n            }\r\n        }\r\n\r\n        if (block.childNodes.length === 0) {\r\n            return document.createTextNode('');\r\n        }\r\n\r\n        /** Setting default position when we deleted all empty nodes */\r\n        if ( position < 0 )\r\n            position = 1;\r\n\r\n        var looking_from_start = false;\r\n\r\n        /** For looking from START */\r\n        if (position === 0) {\r\n            looking_from_start = true;\r\n            position = 1;\r\n        }\r\n\r\n        while ( position ) {\r\n\r\n            /** initial verticle of node. */\r\n            if ( looking_from_start ) {\r\n                block = block.childNodes[0];\r\n            } else {\r\n                block = block.childNodes[position - 1];\r\n            }\r\n\r\n            if ( block.nodeType == codex.core.nodeTypes.TAG ){\r\n\r\n                position = block.childNodes.length;\r\n\r\n            } else if (block.nodeType == codex.core.nodeTypes.TEXT ){\r\n\r\n                position = 0;\r\n            }\r\n\r\n        }\r\n\r\n        return block;\r\n    };\r\n\r\n    /**\r\n     * @private\r\n     */\r\n    content.composeNewBlock = function (block, tool, isStretched) {\r\n\r\n        var newBlock     = codex.draw.node('DIV', codex.ui.className.BLOCK_CLASSNAME, {}),\r\n            blockContent = codex.draw.node('DIV', codex.ui.className.BLOCK_CONTENT, {});\r\n\r\n        blockContent.appendChild(block);\r\n        newBlock.appendChild(blockContent);\r\n\r\n        if (isStretched) {\r\n            blockContent.classList.add(codex.ui.className.BLOCK_STRETCHED);\r\n        }\r\n\r\n        newBlock.dataset.tool = tool;\r\n        return newBlock;\r\n    };\r\n\r\n    /**\r\n     * Returns Range object of current selection\r\n     */\r\n    content.getRange = function() {\r\n\r\n        var selection = window.getSelection().getRangeAt(0);\r\n\r\n        return selection;\r\n    };\r\n\r\n    /**\r\n     * Divides block in two blocks (after and before caret)\r\n     * @private\r\n     * @param {Int} inputIndex - target input index\r\n     */\r\n    content.splitBlock = function(inputIndex) {\r\n\r\n        var selection      = window.getSelection(),\r\n            anchorNode     = selection.anchorNode,\r\n            anchorNodeText = anchorNode.textContent,\r\n            caretOffset    = selection.anchorOffset,\r\n            textBeforeCaret,\r\n            textNodeBeforeCaret,\r\n            textAfterCaret,\r\n            textNodeAfterCaret;\r\n\r\n        var currentBlock = codex.content.currentNode.querySelector('[contentEditable]');\r\n\r\n\r\n        textBeforeCaret     = anchorNodeText.substring(0, caretOffset);\r\n        textAfterCaret      = anchorNodeText.substring(caretOffset);\r\n\r\n        textNodeBeforeCaret = document.createTextNode(textBeforeCaret);\r\n\r\n        if (textAfterCaret) {\r\n            textNodeAfterCaret  = document.createTextNode(textAfterCaret);\r\n        }\r\n\r\n        var previousChilds = [],\r\n            nextChilds     = [],\r\n            reachedCurrent = false;\r\n\r\n        if (textNodeAfterCaret) {\r\n            nextChilds.push(textNodeAfterCaret);\r\n        }\r\n\r\n        for ( var i = 0, child; !!(child = currentBlock.childNodes[i]); i++) {\r\n\r\n            if ( child != anchorNode ) {\r\n                if ( !reachedCurrent ){\r\n                    previousChilds.push(child);\r\n                } else {\r\n                    nextChilds.push(child);\r\n                }\r\n            } else {\r\n                reachedCurrent = true;\r\n            }\r\n\r\n        }\r\n\r\n        /** Clear current input */\r\n        codex.state.inputs[inputIndex].innerHTML = '';\r\n\r\n        /**\r\n         * Append all childs founded before anchorNode\r\n         */\r\n        var previousChildsLength = previousChilds.length;\r\n\r\n        for(i = 0; i < previousChildsLength; i++) {\r\n            codex.state.inputs[inputIndex].appendChild(previousChilds[i]);\r\n        }\r\n\r\n        codex.state.inputs[inputIndex].appendChild(textNodeBeforeCaret);\r\n\r\n        /**\r\n         * Append text node which is after caret\r\n         */\r\n        var nextChildsLength = nextChilds.length,\r\n            newNode          = document.createElement('div');\r\n\r\n        for(i = 0; i < nextChildsLength; i++) {\r\n            newNode.appendChild(nextChilds[i]);\r\n        }\r\n\r\n        newNode = newNode.innerHTML;\r\n\r\n        /** This type of block creates when enter is pressed */\r\n        var NEW_BLOCK_TYPE = codex.settings.initialBlockPlugin;\r\n\r\n        /**\r\n         * Make new paragraph with text after caret\r\n         */\r\n        codex.content.insertBlock({\r\n            type  : NEW_BLOCK_TYPE,\r\n            block : codex.tools[NEW_BLOCK_TYPE].render({\r\n                text : newNode\r\n            })\r\n        }, true );\r\n\r\n    };\r\n\r\n    /**\r\n     * Merges two blocks — current and target\r\n     * If target index is not exist, then previous will be as target\r\n     */\r\n    content.mergeBlocks = function(currentInputIndex, targetInputIndex) {\r\n\r\n        /** If current input index is zero, then prevent method execution */\r\n        if (currentInputIndex === 0) {\r\n            return;\r\n        }\r\n\r\n        var targetInput,\r\n            currentInputContent = codex.state.inputs[currentInputIndex].innerHTML;\r\n\r\n        if (!targetInputIndex) {\r\n\r\n            targetInput = codex.state.inputs[currentInputIndex - 1];\r\n\r\n        } else {\r\n\r\n            targetInput = codex.state.inputs[targetInputIndex];\r\n\r\n        }\r\n\r\n        targetInput.innerHTML += currentInputContent;\r\n    };\r\n\r\n    /**\r\n     * @private\r\n     *\r\n     * Callback for HTML Mutations\r\n     * @param {Array} mutation - Mutation Record\r\n     */\r\n    content.paste = function(mutation) {\r\n\r\n        var workingNode = codex.content.currentNode,\r\n            tool        = workingNode.dataset.tool;\r\n\r\n        if (codex.tools[tool].allowedToPaste) {\r\n            codex.content.sanitize.call(this, mutation.target);\r\n        } else {\r\n            codex.content.pasteTextContent(mutation.addedNodes);\r\n        }\r\n\r\n    };\r\n\r\n    /**\r\n     * @private\r\n     *\r\n     * gets only text/plain content of node\r\n     * @param {Element} target - HTML node\r\n     */\r\n    content.pasteTextContent = function(nodes) {\r\n\r\n        var node = nodes[0],\r\n            textNode;\r\n\r\n        if (!node) {\r\n            return;\r\n        }\r\n\r\n        if (node.nodeType == codex.core.nodeTypes.TEXT) {\r\n            textNode = document.createTextNode(node);\r\n        } else {\r\n            textNode = document.createTextNode(node.textContent);\r\n        }\r\n\r\n        if (codex.core.isDomNode(node)) {\r\n            node.parentNode.replaceChild(textNode, node);\r\n        }\r\n    };\r\n\r\n    /**\r\n     * @private\r\n     *\r\n     * Sanitizes HTML content\r\n     * @param {Element} target - inserted element\r\n     * @uses Sanitize library html-janitor\r\n     */\r\n    content.sanitize = function(target) {\r\n\r\n        if (!target) {\r\n            return;\r\n        }\r\n\r\n        var node = target[0];\r\n\r\n        if (!node) {\r\n            return;\r\n        }\r\n\r\n        /**\r\n         * Disconnect Observer\r\n         * hierarchy of function calls inherits context of observer\r\n         */\r\n        this.disconnect();\r\n\r\n        /**\r\n         * Don't sanitize text node\r\n         */\r\n        if (node.nodeType == codex.core.nodeTypes.TEXT) {\r\n            return;\r\n        }\r\n\r\n        /**\r\n         * Clear dirty content\r\n         */\r\n        var cleaner = codex.sanitizer.init(codex.satinizer.Config.BASIC),\r\n            clean = cleaner.clean(target.outerHTML);\r\n\r\n        var div = codex.draw.node('DIV', [], { innerHTML: clean });\r\n        node.replaceWith(div.childNodes[0]);\r\n\r\n\r\n    };\r\n\r\n    /**\r\n     * Iterates all right siblings and parents, which has right siblings\r\n     * while it does not reached the first-level block\r\n     *\r\n     * @param {Element} node\r\n     * @return {boolean}\r\n     */\r\n    content.isLastNode = function(node) {\r\n\r\n        // console.log('погнали перебор родителей');\r\n\r\n        var allChecked = false;\r\n\r\n        while ( !allChecked ) {\r\n\r\n            // console.log('Смотрим на %o', node);\r\n            // console.log('Проверим, пустые ли соседи справа');\r\n\r\n            if ( !allSiblingsEmpty_(node) ){\r\n\r\n                // console.log('Есть непустые соседи. Узел не последний. Выходим.');\r\n                return false;\r\n\r\n            }\r\n\r\n            node = node.parentNode;\r\n\r\n            /**\r\n             * Проверяем родителей до тех пор, пока не найдем блок первого уровня\r\n             */\r\n            if ( node.classList.contains(codex.ui.className.BLOCK_CONTENT) ){\r\n                allChecked = true;\r\n            }\r\n\r\n        }\r\n\r\n        return true;\r\n\r\n    };\r\n\r\n    /**\r\n     * Checks if all element right siblings is empty\r\n     * @param node\r\n     */\r\n    var allSiblingsEmpty_ = function (node) {\r\n\r\n        /**\r\n         * Нужно убедиться, что после пустого соседа ничего нет\r\n         */\r\n        var sibling = node.nextSibling;\r\n\r\n        // console.log('Погнали проверять соседей ');\r\n\r\n        while ( sibling ) {\r\n\r\n            // console.log('Опаньки! нашли соседа: %o', sibling);\r\n\r\n            if (sibling.textContent.length){\r\n\r\n                // console.log('Соседи не пустые, то есть мы не в конце.');\r\n                return false;\r\n\r\n            }\r\n            //\r\n            // console.log('Сосед пустой. Возможно мы в конце.');\r\n            // console.log('Смотрим следующего');\r\n\r\n            sibling = sibling.nextSibling;\r\n\r\n        }\r\n\r\n        // console.log('Все соседи пустые. -------');\r\n\r\n        return true;\r\n\r\n    };\r\n\r\n    return content;\r\n\r\n})({});\r\n\r\nmodule.exports = content;\n\n\n// WEBPACK FOOTER //\n// ./modules/content.js","/**\r\n * Codex Editor toolbar module\r\n *\r\n * Contains:\r\n *  - Inline toolbox\r\n *  - Toolbox within plus button\r\n *  - Settings section\r\n *\r\n * @author Codex Team\r\n * @version 1.0\r\n */\r\nvar toolbar = (function(toolbar) {\r\n\r\n    toolbar.init = function() {\r\n        toolbar.settings = require('./settings');\r\n        toolbar.inline   = require('./inline');\r\n        toolbar.toolbox  = require('./toolbox');\r\n    };\r\n\r\n    /**\r\n     * Margin between focused node and toolbar\r\n     */\r\n    toolbar.defaultToolbarHeight = 49;\r\n\r\n    toolbar.defaultOffset = 34;\r\n\r\n    toolbar.opened = false;\r\n\r\n    toolbar.current = null;\r\n\r\n    /**\r\n     * @protected\r\n     */\r\n    toolbar.open = function (){\r\n\r\n        codex.nodes.toolbar.classList.add('opened');\r\n        this.opened = true;\r\n\r\n    };\r\n\r\n    /**\r\n     * @protected\r\n     */\r\n    toolbar.close = function(){\r\n\r\n        codex.nodes.toolbar.classList.remove('opened');\r\n\r\n        toolbar.opened  = false;\r\n        toolbar.current = null;\r\n\r\n        for (var button in codex.nodes.toolbarButtons){\r\n            codex.nodes.toolbarButtons[button].classList.remove('selected');\r\n        }\r\n\r\n        /** Close toolbox when toolbar is not displayed */\r\n        codex.toolbar.toolbox.close();\r\n        codex.toolbar.settings.close();\r\n\r\n    };\r\n\r\n    toolbar.toggle = function(){\r\n\r\n        if ( !this.opened ){\r\n\r\n            this.open();\r\n\r\n        } else {\r\n\r\n            this.close();\r\n\r\n        }\r\n\r\n    };\r\n\r\n    toolbar.hidePlusButton = function() {\r\n        codex.nodes.plusButton.classList.add('hide');\r\n    };\r\n\r\n    toolbar.showPlusButton = function() {\r\n        codex.nodes.plusButton.classList.remove('hide');\r\n    };\r\n\r\n    /**\r\n     * Moving toolbar to the specified node\r\n     */\r\n    toolbar.move = function() {\r\n\r\n        /** Close Toolbox when we move toolbar */\r\n        codex.toolbar.toolbox.close();\r\n\r\n        if (!codex.content.currentNode) {\r\n            return;\r\n        }\r\n\r\n        var toolbarHeight = codex.nodes.toolbar.clientHeight || codex.toolbar.defaultToolbarHeight,\r\n            newYCoordinate = codex.content.currentNode.offsetTop - (codex.toolbar.defaultToolbarHeight / 2) + codex.toolbar.defaultOffset;\r\n\r\n        codex.nodes.toolbar.style.transform = `translate3D(0, ${Math.floor(newYCoordinate)}px, 0)`;\r\n\r\n        /** Close trash actions */\r\n        codex.toolbar.settings.hideRemoveActions();\r\n\r\n    };\r\n\r\n    return toolbar;\r\n\r\n})({});\r\n\r\ntoolbar.init();\r\n\r\nmodule.exports = toolbar;\r\n\r\n\n\n\n// WEBPACK FOOTER //\n// ./modules/toolbar/toolbar.js","/**\r\n * Toolbar settings\r\n *\r\n * @version 1.0.4\r\n */\r\n\r\nvar settings = (function(settings) {\r\n\r\n    settings.init = function() {\r\n        require('../content');\r\n    };\r\n\r\n    settings.opened = false;\r\n\r\n    settings.setting = null;\r\n    settings.actions = null;\r\n\r\n    settings.cover = null;\r\n\r\n    /**\r\n     * Append and open settings\r\n     */\r\n    settings.open = function(toolType){\r\n\r\n        /**\r\n         * Append settings content\r\n         * It's stored in tool.settings\r\n         */\r\n        if (!codex.tools[toolType] || !codex.tools[toolType].makeSettings ) {\r\n\r\n            codex.core.log(`Plugin «${toolType}» has no settings`, 'warn');\r\n            // codex.nodes.pluginSettings.innerHTML = `Плагин «${toolType}» не имеет настроек`;\r\n\r\n        } else {\r\n\r\n            /**\r\n             * Draw settings block\r\n             */\r\n            var settingsBlock = codex.tools[toolType].makeSettings();\r\n            codex.nodes.pluginSettings.appendChild(settingsBlock);\r\n        }\r\n\r\n        var currentBlock = codex.content.currentNode;\r\n\r\n        /** Open settings block */\r\n        codex.nodes.blockSettings.classList.add('opened');\r\n        codex.toolbar.settings.addDefaultSettings();\r\n        this.opened = true;\r\n    };\r\n\r\n    /**\r\n     * Close and clear settings\r\n     */\r\n    settings.close = function(){\r\n\r\n        codex.nodes.blockSettings.classList.remove('opened');\r\n        codex.nodes.pluginSettings.innerHTML = '';\r\n\r\n        this.opened = false;\r\n\r\n    };\r\n\r\n    /**\r\n     * @param {string} toolType - plugin type\r\n     */\r\n    settings.toggle = function( toolType ){\r\n\r\n        if ( !this.opened ){\r\n\r\n            this.open(toolType);\r\n\r\n        } else {\r\n\r\n            this.close();\r\n\r\n        }\r\n\r\n    };\r\n\r\n    /**\r\n     * This function adds default core settings\r\n     */\r\n    settings.addDefaultSettings = function() {\r\n\r\n        /** list of default settings */\r\n        var feedModeToggler;\r\n\r\n        /** Clear block and append initialized settings */\r\n        codex.nodes.defaultSettings.innerHTML = '';\r\n\r\n\r\n        /** Init all default setting buttons */\r\n        feedModeToggler = codex.toolbar.settings.makeFeedModeToggler();\r\n\r\n        /**\r\n         * Fill defaultSettings\r\n         */\r\n\r\n        /**\r\n         * Button that enables/disables Feed-mode\r\n         * Feed-mode means that block will be showed in articles-feed like cover\r\n         */\r\n        codex.nodes.defaultSettings.appendChild(feedModeToggler);\r\n\r\n    };\r\n\r\n    /**\r\n     * Cover setting.\r\n     * This tune highlights block, so that it may be used for showing target block on main page\r\n     * Draw different setting when block is marked for main page\r\n     * If TRUE, then we show button that removes this selection\r\n     * Also defined setting \"Click\" events will be listened and have separate callbacks\r\n     *\r\n     * @return {Element} node/button that we place in default settings block\r\n     */\r\n    settings.makeFeedModeToggler = function() {\r\n\r\n        var isFeedModeActivated = codex.toolbar.settings.isFeedModeActivated(),\r\n            setting,\r\n            data;\r\n\r\n        if (!isFeedModeActivated) {\r\n\r\n            data = {\r\n                innerHTML : '<i class=\"ce-icon-newspaper\"></i>Вывести в ленте'\r\n            };\r\n\r\n        } else {\r\n\r\n            data = {\r\n                innerHTML : '<i class=\"ce-icon-newspaper\"></i>Не выводить в ленте'\r\n            };\r\n\r\n        }\r\n\r\n        setting = codex.draw.node('DIV', codex.ui.className.SETTINGS_ITEM, data);\r\n        setting.addEventListener('click', codex.toolbar.settings.updateFeedMode, false);\r\n\r\n        return setting;\r\n    };\r\n\r\n    /**\r\n     * Updates Feed-mode\r\n     */\r\n    settings.updateFeedMode = function() {\r\n\r\n        var currentNode = codex.content.currentNode;\r\n\r\n        currentNode.classList.toggle(codex.ui.className.BLOCK_IN_FEED_MODE);\r\n\r\n        codex.toolbar.settings.close();\r\n    };\r\n\r\n    settings.isFeedModeActivated = function() {\r\n\r\n        var currentBlock = codex.content.currentNode;\r\n\r\n        if (currentBlock) {\r\n            return currentBlock.classList.contains(codex.ui.className.BLOCK_IN_FEED_MODE);\r\n        } else {\r\n            return false;\r\n        }\r\n    };\r\n\r\n    /**\r\n     * Here we will draw buttons and add listeners to components\r\n     */\r\n    settings.makeRemoveBlockButton = function() {\r\n\r\n        var removeBlockWrapper  = codex.draw.node('SPAN', 'ce-toolbar__remove-btn', {}),\r\n            settingButton = codex.draw.node('SPAN', 'ce-toolbar__remove-setting', { innerHTML : '<i class=\"ce-icon-trash\"></i>' }),\r\n            actionWrapper = codex.draw.node('DIV', 'ce-toolbar__remove-confirmation', {}),\r\n            confirmAction = codex.draw.node('DIV', 'ce-toolbar__remove-confirm', { textContent : 'Удалить блок' }),\r\n            cancelAction  = codex.draw.node('DIV', 'ce-toolbar__remove-cancel', { textContent : 'Отмена' });\r\n\r\n        settingButton.addEventListener('click', codex.toolbar.settings.removeButtonClicked, false);\r\n\r\n        confirmAction.addEventListener('click', codex.toolbar.settings.confirmRemovingRequest, false);\r\n\r\n        cancelAction.addEventListener('click', codex.toolbar.settings.cancelRemovingRequest, false);\r\n\r\n        actionWrapper.appendChild(confirmAction);\r\n        actionWrapper.appendChild(cancelAction);\r\n\r\n        removeBlockWrapper.appendChild(settingButton);\r\n        removeBlockWrapper.appendChild(actionWrapper);\r\n\r\n        /** Save setting */\r\n        codex.toolbar.settings.setting = settingButton;\r\n        codex.toolbar.settings.actions = actionWrapper;\r\n\r\n        return removeBlockWrapper;\r\n\r\n    };\r\n\r\n    settings.removeButtonClicked = function() {\r\n\r\n        var action = codex.toolbar.settings.actions;\r\n\r\n        if (action.classList.contains('opened')) {\r\n            codex.toolbar.settings.hideRemoveActions();\r\n        } else {\r\n            codex.toolbar.settings.showRemoveActions();\r\n        }\r\n\r\n        codex.toolbar.toolbox.close();\r\n        codex.toolbar.settings.close();\r\n\r\n    };\r\n\r\n    settings.cancelRemovingRequest = function() {\r\n\r\n        codex.toolbar.settings.actions.classList.remove('opened');\r\n    };\r\n\r\n    settings.confirmRemovingRequest = function() {\r\n\r\n        var currentBlock = codex.content.currentNode,\r\n            firstLevelBlocksCount;\r\n\r\n        currentBlock.remove();\r\n\r\n        firstLevelBlocksCount = codex.nodes.redactor.childNodes.length;\r\n\r\n        /**\r\n         * If all blocks are removed\r\n         */\r\n        if (firstLevelBlocksCount === 0) {\r\n\r\n            /** update currentNode variable */\r\n            codex.content.currentNode = null;\r\n\r\n            /** Inserting new empty initial block */\r\n            codex.ui.addInitialBlock();\r\n        }\r\n\r\n        codex.ui.saveInputs();\r\n\r\n        codex.toolbar.close();\r\n    };\r\n\r\n    settings.showRemoveActions = function() {\r\n        codex.toolbar.settings.actions.classList.add('opened');\r\n    };\r\n\r\n    settings.hideRemoveActions = function() {\r\n        codex.toolbar.settings.actions.classList.remove('opened');\r\n    };\r\n\r\n    return settings;\r\n\r\n})({});\r\n\r\nsettings.init();\r\n\r\nmodule.exports = settings;\n\n\n// WEBPACK FOOTER //\n// ./modules/toolbar/settings.js","/**\r\n * Inline toolbar\r\n *\r\n * Contains from tools:\r\n * Bold, Italic, Underline and Anchor\r\n *\r\n * @author Codex Team\r\n * @version 1.0\r\n */\r\nvar inline = (function(inline) {\r\n\r\n    inline.init = function() {\r\n\r\n    };\r\n\r\n    inline.buttonsOpened = null;\r\n    inline.actionsOpened = null;\r\n    inline.wrappersOffset = null;\r\n\r\n    /**\r\n     * saving selection that need for execCommand for styling\r\n     *\r\n     */\r\n    inline.storedSelection = null;\r\n\r\n    /**\r\n     * @protected\r\n     *\r\n     * Open inline toobar\r\n     */\r\n    inline.show = function() {\r\n\r\n        var currentNode = codex.content.currentNode,\r\n            tool = currentNode.dataset.tool,\r\n            plugin;\r\n\r\n        /**\r\n         * tool allowed to open inline toolbar\r\n         */\r\n        plugin = codex.tools[tool];\r\n\r\n        if (!plugin.showInlineToolbar)\r\n            return;\r\n\r\n        var selectedText = this.getSelectionText(),\r\n            toolbar      = codex.nodes.inlineToolbar.wrapper,\r\n            buttons      = codex.nodes.inlineToolbar.buttons;\r\n\r\n        if (selectedText.length > 0) {\r\n\r\n            /** Move toolbar and open */\r\n            codex.toolbar.inline.move();\r\n\r\n            /** Open inline toolbar */\r\n            toolbar.classList.add('opened');\r\n\r\n            /** show buttons of inline toolbar */\r\n            codex.toolbar.inline.showButtons();\r\n        }\r\n\r\n    };\r\n\r\n    /**\r\n     * @protected\r\n     *\r\n     * Closes inline toolbar\r\n     */\r\n    inline.close = function() {\r\n        var toolbar = codex.nodes.inlineToolbar.wrapper;\r\n        toolbar.classList.remove('opened');\r\n    };\r\n\r\n    /**\r\n     * @private\r\n     *\r\n     * Moving toolbar\r\n     */\r\n    inline.move = function() {\r\n\r\n        if (!this.wrappersOffset) {\r\n            this.wrappersOffset = this.getWrappersOffset();\r\n        }\r\n\r\n        var coords          = this.getSelectionCoords(),\r\n            defaultOffset   = 0,\r\n            toolbar         = codex.nodes.inlineToolbar.wrapper,\r\n            newCoordinateX,\r\n            newCoordinateY;\r\n\r\n        if (toolbar.offsetHeight === 0) {\r\n            defaultOffset = 40;\r\n        }\r\n\r\n        newCoordinateX = coords.x - this.wrappersOffset.left;\r\n        newCoordinateY = coords.y + window.scrollY - this.wrappersOffset.top - defaultOffset - toolbar.offsetHeight;\r\n\r\n        toolbar.style.transform = `translate3D(${Math.floor(newCoordinateX)}px, ${Math.floor(newCoordinateY)}px, 0)`;\r\n\r\n        /** Close everything */\r\n        codex.toolbar.inline.closeButtons();\r\n        codex.toolbar.inline.closeAction();\r\n\r\n    };\r\n\r\n    /**\r\n     * @private\r\n     *\r\n     * Tool Clicked\r\n     */\r\n\r\n    inline.toolClicked = function(event, type) {\r\n\r\n        /**\r\n         * For simple tools we use default browser function\r\n         * For more complicated tools, we should write our own behavior\r\n         */\r\n        switch (type) {\r\n            case 'createLink' : codex.toolbar.inline.createLinkAction(event, type); break;\r\n            default           : codex.toolbar.inline.defaultToolAction(type); break;\r\n        }\r\n\r\n        /**\r\n         * highlight buttons\r\n         * after making some action\r\n         */\r\n        codex.nodes.inlineToolbar.buttons.childNodes.forEach(codex.toolbar.inline.hightlight);\r\n    };\r\n\r\n    /**\r\n     * @private\r\n     *\r\n     * Saving wrappers offset in DOM\r\n     */\r\n    inline.getWrappersOffset = function() {\r\n\r\n        var wrapper = codex.nodes.wrapper,\r\n            offset  = this.getOffset(wrapper);\r\n\r\n        this.wrappersOffset = offset;\r\n        return offset;\r\n\r\n    };\r\n\r\n    /**\r\n     * @private\r\n     *\r\n     * Calculates offset of DOM element\r\n     *\r\n     * @param el\r\n     * @returns {{top: number, left: number}}\r\n     */\r\n    inline.getOffset = function ( el ) {\r\n\r\n        var _x = 0;\r\n        var _y = 0;\r\n\r\n        while( el && !isNaN( el.offsetLeft ) && !isNaN( el.offsetTop ) ) {\r\n            _x += (el.offsetLeft + el.clientLeft);\r\n            _y += (el.offsetTop + el.clientTop);\r\n            el = el.offsetParent;\r\n        }\r\n        return { top: _y, left: _x };\r\n    };\r\n\r\n    /**\r\n     * @private\r\n     *\r\n     * Calculates position of selected text\r\n     * @returns {{x: number, y: number}}\r\n     */\r\n    inline.getSelectionCoords = function() {\r\n\r\n        var sel = document.selection, range;\r\n        var x = 0, y = 0;\r\n\r\n        if (sel) {\r\n\r\n            if (sel.type != \"Control\") {\r\n                range = sel.createRange();\r\n                range.collapse(true);\r\n                x = range.boundingLeft;\r\n                y = range.boundingTop;\r\n            }\r\n\r\n        } else if (window.getSelection) {\r\n\r\n            sel = window.getSelection();\r\n\r\n            if (sel.rangeCount) {\r\n\r\n                range = sel.getRangeAt(0).cloneRange();\r\n                if (range.getClientRects) {\r\n                    range.collapse(true);\r\n                    var rect = range.getClientRects()[0];\r\n\r\n                    if (!rect) {\r\n                        return;\r\n                    }\r\n\r\n                    x = rect.left;\r\n                    y = rect.top;\r\n                }\r\n\r\n            }\r\n        }\r\n        return { x: x, y: y };\r\n    };\r\n\r\n    /**\r\n     * @private\r\n     *\r\n     * Returns selected text as String\r\n     * @returns {string}\r\n     */\r\n    inline.getSelectionText = function getSelectionText(){\r\n\r\n        var selectedText = \"\";\r\n\r\n        if (window.getSelection){ // all modern browsers and IE9+\r\n            selectedText = window.getSelection().toString();\r\n        }\r\n\r\n        return selectedText;\r\n    };\r\n\r\n    /** Opens buttons block */\r\n    inline.showButtons = function() {\r\n\r\n        var buttons = codex.nodes.inlineToolbar.buttons;\r\n        buttons.classList.add('opened');\r\n\r\n        codex.toolbar.inline.buttonsOpened = true;\r\n\r\n        /** highlight buttons */\r\n        codex.nodes.inlineToolbar.buttons.childNodes.forEach(codex.toolbar.inline.hightlight);\r\n\r\n    };\r\n\r\n    /** Makes buttons disappear */\r\n    inline.closeButtons = function() {\r\n        var buttons = codex.nodes.inlineToolbar.buttons;\r\n        buttons.classList.remove('opened');\r\n\r\n        codex.toolbar.inline.buttonsOpened = false;\r\n    };\r\n\r\n    /** Open buttons defined action if exist */\r\n    inline.showActions = function() {\r\n        var action = codex.nodes.inlineToolbar.actions;\r\n        action.classList.add('opened');\r\n\r\n        codex.toolbar.inline.actionsOpened = true;\r\n    };\r\n\r\n    /** Close actions block */\r\n    inline.closeAction = function() {\r\n        var action = codex.nodes.inlineToolbar.actions;\r\n        action.innerHTML = '';\r\n        action.classList.remove('opened');\r\n        codex.toolbar.inline.actionsOpened = false;\r\n    };\r\n\r\n    /** Action for link creation or for setting anchor */\r\n    inline.createLinkAction = function(event, type) {\r\n\r\n        var isActive = this.isLinkActive();\r\n\r\n        var editable        = codex.content.currentNode,\r\n            storedSelection = codex.toolbar.inline.storedSelection;\r\n\r\n        if (isActive) {\r\n\r\n            var selection   = window.getSelection(),\r\n                anchorNode  = selection.anchorNode;\r\n\r\n            storedSelection = codex.toolbar.inline.saveSelection(editable);\r\n\r\n            /**\r\n             * Changing stored selection. if we want to remove anchor from word\r\n             * we should remove anchor from whole word, not only selected part.\r\n             * The solution is than we get the length of current link\r\n             * Change start position to - end of selection minus length of anchor\r\n             */\r\n            codex.toolbar.inline.restoreSelection(editable, storedSelection);\r\n\r\n            codex.toolbar.inline.defaultToolAction('unlink');\r\n\r\n        } else {\r\n\r\n            /** Create input and close buttons */\r\n            var action = codex.draw.inputForLink();\r\n            codex.nodes.inlineToolbar.actions.appendChild(action);\r\n\r\n            codex.toolbar.inline.closeButtons();\r\n            codex.toolbar.inline.showActions();\r\n\r\n            storedSelection = codex.toolbar.inline.saveSelection(editable);\r\n\r\n            /**\r\n             * focus to input\r\n             * Solution: https://developer.mozilla.org/ru/docs/Web/API/HTMLElement/focus\r\n             * Prevents event after showing input and when we need to focus an input which is in unexisted form\r\n             */\r\n            action.focus();\r\n            event.preventDefault();\r\n\r\n            /** Callback to link action */\r\n            action.addEventListener('keydown', function(event){\r\n\r\n                if (event.keyCode == codex.core.keys.ENTER) {\r\n\r\n                    codex.toolbar.inline.restoreSelection(editable, storedSelection);\r\n                    codex.toolbar.inline.setAnchor(action.value);\r\n\r\n                    /**\r\n                     * Preventing events that will be able to happen\r\n                     */\r\n                    event.preventDefault();\r\n                    event.stopImmediatePropagation();\r\n\r\n                    codex.toolbar.inline.clearRange();\r\n                }\r\n\r\n            }, false);\r\n        }\r\n    };\r\n\r\n    inline.isLinkActive = function() {\r\n\r\n        var isActive = false;\r\n\r\n        codex.nodes.inlineToolbar.buttons.childNodes.forEach(function(tool) {\r\n            var dataType = tool.dataset.type;\r\n\r\n            if (dataType == 'link' && tool.classList.contains('hightlighted')) {\r\n                isActive = true;\r\n            }\r\n        });\r\n\r\n        return isActive;\r\n    };\r\n\r\n    /** default action behavior of tool */\r\n    inline.defaultToolAction = function(type) {\r\n        document.execCommand(type, false, null);\r\n    };\r\n\r\n    /**\r\n     * @private\r\n     *\r\n     * Sets URL\r\n     *\r\n     * @param {String} url - URL\r\n     */\r\n    inline.setAnchor = function(url) {\r\n\r\n        document.execCommand('createLink', false, url);\r\n\r\n        /** Close after URL inserting */\r\n        codex.toolbar.inline.closeAction();\r\n    };\r\n\r\n    /**\r\n     * @private\r\n     *\r\n     * Saves selection\r\n     */\r\n    inline.saveSelection = function(containerEl) {\r\n\r\n        var range = window.getSelection().getRangeAt(0),\r\n            preSelectionRange = range.cloneRange(),\r\n            start;\r\n\r\n        preSelectionRange.selectNodeContents(containerEl);\r\n        preSelectionRange.setEnd(range.startContainer, range.startOffset);\r\n\r\n        start = preSelectionRange.toString().length;\r\n\r\n        return {\r\n            start: start,\r\n            end: start + range.toString().length\r\n        };\r\n    };\r\n\r\n    /**\r\n     * @private\r\n     *\r\n     * Sets to previous selection (Range)\r\n     *\r\n     * @param {Element} containerEl - editable element where we restore range\r\n     * @param {Object} savedSel - range basic information to restore\r\n     */\r\n    inline.restoreSelection = function(containerEl, savedSel) {\r\n\r\n        var range     = document.createRange(),\r\n            charIndex = 0;\r\n\r\n        range.setStart(containerEl, 0);\r\n        range.collapse(true);\r\n\r\n        var nodeStack = [containerEl],\r\n            node,\r\n            foundStart = false,\r\n            stop = false,\r\n            nextCharIndex;\r\n\r\n        while (!stop && (node = nodeStack.pop())) {\r\n\r\n            if (node.nodeType == 3) {\r\n\r\n                nextCharIndex = charIndex + node.length;\r\n\r\n                if (!foundStart && savedSel.start >= charIndex && savedSel.start <= nextCharIndex) {\r\n                    range.setStart(node, savedSel.start - charIndex);\r\n                    foundStart = true;\r\n                }\r\n                if (foundStart && savedSel.end >= charIndex && savedSel.end <= nextCharIndex) {\r\n                    range.setEnd(node, savedSel.end - charIndex);\r\n                    stop = true;\r\n                }\r\n                charIndex = nextCharIndex;\r\n            } else {\r\n                var i = node.childNodes.length;\r\n                while (i--) {\r\n                    nodeStack.push(node.childNodes[i]);\r\n                }\r\n            }\r\n        }\r\n\r\n        var sel = window.getSelection();\r\n        sel.removeAllRanges();\r\n        sel.addRange(range);\r\n    };\r\n\r\n    /**\r\n     * @private\r\n     *\r\n     * Removes all ranges from window selection\r\n     */\r\n    inline.clearRange = function() {\r\n        var selection = window.getSelection();\r\n        selection.removeAllRanges();\r\n    };\r\n\r\n    /**\r\n     * @private\r\n     *\r\n     * sets or removes hightlight\r\n     */\r\n    inline.hightlight = function(tool) {\r\n        var dataType = tool.dataset.type;\r\n\r\n        if (document.queryCommandState(dataType)) {\r\n            codex.toolbar.inline.setButtonHighlighted(tool);\r\n        } else {\r\n            codex.toolbar.inline.removeButtonsHighLight(tool);\r\n        }\r\n\r\n        /**\r\n         *\r\n         * hightlight for anchors\r\n         */\r\n        var selection = window.getSelection(),\r\n            tag = selection.anchorNode.parentNode;\r\n\r\n        if (tag.tagName == 'A' && dataType == 'link') {\r\n            codex.toolbar.inline.setButtonHighlighted(tool);\r\n        }\r\n    };\r\n\r\n    /**\r\n     * @private\r\n     *\r\n     * Mark button if text is already executed\r\n     */\r\n    inline.setButtonHighlighted = function(button) {\r\n        button.classList.add('hightlighted');\r\n\r\n        /** At link tool we also change icon */\r\n        if (button.dataset.type == 'link') {\r\n            var icon = button.childNodes[0];\r\n            icon.classList.remove('ce-icon-link');\r\n            icon.classList.add('ce-icon-unlink');\r\n        }\r\n    };\r\n\r\n    /**\r\n     * @private\r\n     *\r\n     * Removes hightlight\r\n     */\r\n    inline.removeButtonsHighLight = function(button) {\r\n        button.classList.remove('hightlighted');\r\n\r\n        /** At link tool we also change icon */\r\n        if (button.dataset.type == 'link') {\r\n            var icon = button.childNodes[0];\r\n            icon.classList.remove('ce-icon-unlink');\r\n            icon.classList.add('ce-icon-link');\r\n        }\r\n    };\r\n\r\n\r\n    return inline;\r\n})({});\r\n\r\ninline.init();\r\n\r\nmodule.exports = inline;\n\n\n// WEBPACK FOOTER //\n// ./modules/toolbar/inline.js","/**\r\n * Codex Editor toolbox\r\n *\r\n * All tools be able to appended here\r\n *\r\n * @author Codex Team\r\n * @version 1.0\r\n */\r\n \r\nvar toolbox = (function(toolbox) {\r\n\r\n    toolbox.init = function () {\r\n\r\n        require('./toolbar');\r\n\r\n    };\r\n\r\n    toolbox.opened = false;\r\n\r\n    /** Shows toolbox */\r\n    toolbox.open = function() {\r\n\r\n        /** Close setting if toolbox is opened */\r\n        if (codex.toolbar.settings.opened) {\r\n\r\n            codex.toolbar.settings.close();\r\n\r\n        }\r\n\r\n        /** display toolbox */\r\n        codex.nodes.toolbox.classList.add('opened');\r\n\r\n        /** Animate plus button */\r\n        codex.nodes.plusButton.classList.add('clicked');\r\n\r\n        /** toolbox state */\r\n        codex.toolbar.toolbox.opened = true;\r\n\r\n    };\r\n\r\n    /** Closes toolbox */\r\n    toolbox.close = function() {\r\n\r\n        /** Makes toolbox disapear */\r\n        codex.nodes.toolbox.classList.remove('opened');\r\n\r\n        /** Rotate plus button */\r\n        codex.nodes.plusButton.classList.remove('clicked');\r\n\r\n        /** toolbox state */\r\n        codex.toolbar.toolbox.opened = false;\r\n\r\n    };\r\n\r\n    toolbox.leaf = function(){\r\n\r\n        var currentTool = codex.toolbar.current,\r\n            tools       = Object.keys(codex.tools),\r\n            barButtons  = codex.nodes.toolbarButtons,\r\n            nextToolIndex,\r\n            hiddenToolsAmount = 0,\r\n            toolToSelect;\r\n\r\n        /** Count toolbox hidden tools */\r\n        for( var tool in codex.tools ) {\r\n\r\n            if (!codex.tools[tool].displayInToolbox) {\r\n\r\n                hiddenToolsAmount ++;\r\n\r\n            }\r\n\r\n\r\n        }\r\n\r\n        if ( !currentTool ) {\r\n\r\n            /** Get first tool from object*/\r\n            for (toolToSelect in barButtons) break;\r\n\r\n        } else {\r\n\r\n            nextToolIndex = tools.indexOf(currentTool) + 1;\r\n\r\n            var toolIsLastInToolbox = nextToolIndex == tools.length - (hiddenToolsAmount - 2);\r\n\r\n            if ( toolIsLastInToolbox ) {\r\n\r\n                nextToolIndex = 0;\r\n\r\n                /** getting first displayed tool */\r\n                for( var tool in codex.tools ) {\r\n\r\n                    if (codex.tools[tool].displayInToolbox){\r\n\r\n                        break;\r\n\r\n                    }\r\n\r\n                    nextToolIndex ++;\r\n                }\r\n\r\n            }\r\n\r\n            toolToSelect = tools[nextToolIndex];\r\n\r\n        }\r\n\r\n        for (var button in barButtons) barButtons[button].classList.remove('selected');\r\n        barButtons[toolToSelect].classList.add('selected');\r\n        codex.toolbar.current = toolToSelect;\r\n\r\n    };\r\n\r\n    /**\r\n     * Transforming selected node type into selected toolbar element type\r\n     * @param {event} event\r\n     */\r\n    toolbox.toolClicked = function() {\r\n\r\n        /**\r\n         * UNREPLACEBLE_TOOLS this types of tools are forbidden to replace even they are empty\r\n         */\r\n        var UNREPLACEBLE_TOOLS = ['image', 'link', 'list', 'instagram', 'twitter'],\r\n            tool               = codex.tools[codex.toolbar.current],\r\n            workingNode        = codex.content.currentNode,\r\n            currentInputIndex  = codex.caret.inputIndex,\r\n            newBlockContent,\r\n            appendCallback,\r\n            blockData;\r\n\r\n        /** Make block from plugin */\r\n        newBlockContent = tool.render();\r\n\r\n        /** information about block */\r\n        blockData = {\r\n            block     : newBlockContent,\r\n            type      : tool.type,\r\n            stretched : false\r\n        };\r\n\r\n        if (\r\n            workingNode &&\r\n            UNREPLACEBLE_TOOLS.indexOf(workingNode.dataset.tool) === -1 &&\r\n            workingNode.textContent.trim() === ''\r\n        ){\r\n\r\n            /** Replace current block */\r\n            codex.content.switchBlock(workingNode, newBlockContent, tool.type);\r\n\r\n        } else {\r\n\r\n            /** Insert new Block from plugin */\r\n            codex.content.insertBlock(blockData);\r\n\r\n            /** increase input index */\r\n            currentInputIndex++;\r\n\r\n        }\r\n\r\n        /** Fire tool append callback  */\r\n        appendCallback = tool.appendCallback;\r\n\r\n        if (appendCallback && typeof appendCallback == 'function') {\r\n\r\n            appendCallback.call(event);\r\n\r\n        }\r\n\r\n        setTimeout(function() {\r\n\r\n            /** Set caret to current block */\r\n            codex.caret.setToBlock(currentInputIndex);\r\n\r\n        }, 10);\r\n\r\n\r\n        /**\r\n         * Changing current Node\r\n         */\r\n        codex.content.workingNodeChanged();\r\n\r\n        /**\r\n         * Move toolbar when node is changed\r\n         */\r\n        codex.toolbar.move();\r\n    };\r\n\r\n    return toolbox;\r\n\r\n})({});\r\n\r\ntoolbox.init();\r\n\r\nmodule.exports = toolbox;\n\n\n// WEBPACK FOOTER //\n// ./modules/toolbar/toolbox.js","/**\r\n * Codex Editor tools\r\n * This tools will be appended in toolbox\r\n *\r\n * @author Codex Team\r\n * @version 1.0\r\n */\r\n\r\nvar tools = (function(tools) {\r\n\r\n    return tools;\r\n\r\n})({});\r\n\r\nmodule.exports = tools;\r\n\n\n\n// WEBPACK FOOTER //\n// ./modules/tools.js","/**\r\n * Codex Editor callbacks module\r\n *\r\n * @author Codex Team\r\n * @version 1.3.4\r\n */\r\n\r\nvar callbacks = (function(callbacks) {\r\n\r\n    callbacks.redactorSyncTimeout = null;\r\n\r\n    callbacks.globalKeydown = function(event){\r\n        switch (event.keyCode){\r\n            case codex.core.keys.ENTER : codex.callback.enterKeyPressed(event);     break;\r\n        }\r\n    };\r\n\r\n    callbacks.redactorKeyDown = function(event) {\r\n        switch (event.keyCode){\r\n            case codex.core.keys.TAB   : codex.callback.tabKeyPressed(event);                     break;\r\n            case codex.core.keys.ENTER : codex.callback.enterKeyPressedOnRedactorZone(event);     break;\r\n            case codex.core.keys.ESC   : codex.callback.escapeKeyPressed(event);                  break;\r\n            default                    : codex.callback.defaultKeyPressed(event);                 break;\r\n        }\r\n    };\r\n\r\n    callbacks.globalKeyup = function(event){\r\n        switch (event.keyCode){\r\n            case codex.core.keys.UP    :\r\n            case codex.core.keys.LEFT  :\r\n            case codex.core.keys.RIGHT :\r\n            case codex.core.keys.DOWN  : codex.callback.arrowKeyPressed(event); break;\r\n        }\r\n    };\r\n\r\n    callbacks.tabKeyPressed = function(event){\r\n\r\n        if ( !codex.toolbar.opened ) {\r\n            codex.toolbar.open();\r\n        }\r\n\r\n        if (codex.toolbar.opened && !codex.toolbar.toolbox.opened) {\r\n            codex.toolbar.toolbox.open();\r\n        } else {\r\n            codex.toolbar.toolbox.leaf();\r\n        }\r\n\r\n        event.preventDefault();\r\n    };\r\n\r\n    callbacks.enterKeyPressed = function(event) {\r\n\r\n        if (codex.content.editorAreaHightlighted) {\r\n\r\n            /**\r\n             * it means that we lose input index, saved index before is not correct\r\n             * therefore we need to set caret when we insert new block\r\n             */\r\n            codex.caret.inputIndex = -1;\r\n\r\n            codex.callback.enterPressedOnBlock();\r\n        }\r\n    };\r\n\r\n    /**\r\n     * ENTER key handler\r\n     * Makes new paragraph block\r\n     */\r\n    callbacks.enterKeyPressedOnRedactorZone = function(event){\r\n\r\n        if (event.target.contentEditable == 'true') {\r\n\r\n            /** Update input index */\r\n            codex.caret.saveCurrentInputIndex();\r\n        }\r\n\r\n        var currentInputIndex       = codex.caret.getCurrentInputIndex() || 0,\r\n            workingNode             = codex.content.currentNode,\r\n            tool                    = workingNode.dataset.tool,\r\n            isEnterPressedOnToolbar = codex.toolbar.opened &&\r\n                                        codex.toolbar.current &&\r\n                                        event.target == codex.state.inputs[currentInputIndex];\r\n\r\n        /** The list of tools which needs the default browser behaviour */\r\n        var enableLineBreaks = codex.tools[tool].enableLineBreaks;\r\n\r\n        /** This type of block creates when enter is pressed */\r\n        var NEW_BLOCK_TYPE = codex.settings.initialBlockPlugin;\r\n\r\n        /**\r\n         * When toolbar is opened, select tool instead of making new paragraph\r\n         */\r\n        if ( isEnterPressedOnToolbar ) {\r\n\r\n            event.preventDefault();\r\n\r\n            codex.toolbar.toolbox.toolClicked(event);\r\n\r\n            codex.toolbar.close();\r\n\r\n            /**\r\n             * Stop other listeners callback executions\r\n             */\r\n            event.stopPropagation();\r\n            event.stopImmediatePropagation();\r\n\r\n            return;\r\n\r\n        }\r\n\r\n        /**\r\n         * Allow paragraph lineBreaks with shift enter\r\n         * Or if shiftkey pressed and enter and enabledLineBreaks, the let new block creation\r\n         */\r\n        if ( event.shiftKey || enableLineBreaks ){\r\n\r\n            event.stopPropagation();\r\n            event.stopImmediatePropagation();\r\n            return;\r\n        }\r\n\r\n        var isLastTextNode = false,\r\n            currentSelection = window.getSelection(),\r\n            currentSelectedNode = currentSelection.anchorNode,\r\n            caretAtTheEndOfText = codex.caret.position.atTheEnd(),\r\n            isTextNodeHasParentBetweenContenteditable = false;\r\n\r\n        /**\r\n         * Allow making new <p> in same block by SHIFT+ENTER and forbids to prevent default browser behaviour\r\n         */\r\n        if ( event.shiftKey && !enableLineBreaks ) {\r\n            codex.callback.enterPressedOnBlock(codex.content.currentBlock, event);\r\n            event.preventDefault();\r\n            return;\r\n        }\r\n\r\n        /**\r\n         * Workaround situation when caret at the Text node that has some wrapper Elements\r\n         * Split block cant handle this.\r\n         * We need to save default behavior\r\n         */\r\n        isTextNodeHasParentBetweenContenteditable = currentSelectedNode && currentSelectedNode.parentNode.contentEditable != \"true\";\r\n\r\n        /**\r\n         * Split blocks when input has several nodes and caret placed in textNode\r\n         */\r\n        if (\r\n            currentSelectedNode.nodeType == codex.core.nodeTypes.TEXT &&\r\n            !isTextNodeHasParentBetweenContenteditable &&\r\n            !caretAtTheEndOfText\r\n        ){\r\n\r\n            event.preventDefault();\r\n\r\n            codex.core.log('Splitting Text node...');\r\n\r\n            codex.content.splitBlock(currentInputIndex);\r\n\r\n            /** Show plus button when next input after split is empty*/\r\n            if (!codex.state.inputs[currentInputIndex + 1].textContent.trim()) {\r\n                codex.toolbar.showPlusButton();\r\n            }\r\n\r\n        } else {\r\n\r\n            var islastNode = codex.content.isLastNode(currentSelectedNode);\r\n\r\n            if ( islastNode && caretAtTheEndOfText ) {\r\n\r\n                event.preventDefault();\r\n                event.stopPropagation();\r\n                event.stopImmediatePropagation();\r\n\r\n                codex.core.log('ENTER clicked in last textNode. Create new BLOCK');\r\n\r\n                codex.content.insertBlock({\r\n                    type: NEW_BLOCK_TYPE,\r\n                    block: codex.tools[NEW_BLOCK_TYPE].render()\r\n                }, true);\r\n\r\n                codex.toolbar.move();\r\n                codex.toolbar.open();\r\n\r\n                /** Show plus button with empty block */\r\n                codex.toolbar.showPlusButton();\r\n\r\n            }\r\n\r\n        }\r\n\r\n        /** get all inputs after new appending block */\r\n        codex.ui.saveInputs();\r\n\r\n    };\r\n\r\n    callbacks.escapeKeyPressed = function(event){\r\n\r\n        /** Close all toolbar */\r\n        codex.toolbar.close();\r\n\r\n        /** Close toolbox */\r\n        codex.toolbar.toolbox.close();\r\n\r\n        event.preventDefault();\r\n\r\n    };\r\n\r\n    callbacks.arrowKeyPressed = function(event){\r\n\r\n        codex.content.workingNodeChanged();\r\n\r\n        /* Closing toolbar */\r\n        codex.toolbar.close();\r\n        codex.toolbar.move();\r\n\r\n    };\r\n\r\n    callbacks.defaultKeyPressed = function(event) {\r\n\r\n        codex.toolbar.close();\r\n\r\n        if (!codex.toolbar.inline.actionsOpened) {\r\n            codex.toolbar.inline.close();\r\n            codex.content.clearMark();\r\n        }\r\n    };\r\n\r\n    callbacks.redactorClicked = function (event) {\r\n\r\n        callbacks.detectWhenClickedOnFirstLevelBlockArea();\r\n\r\n        codex.content.workingNodeChanged(event.target);\r\n\r\n        codex.ui.saveInputs();\r\n\r\n        var selectedText = codex.toolbar.inline.getSelectionText();\r\n\r\n        /**\r\n         * If selection range took off, then we hide inline toolbar\r\n         */\r\n        if (selectedText.length === 0) {\r\n            codex.toolbar.inline.close();\r\n        }\r\n\r\n        /** Update current input index in memory when caret focused into existed input */\r\n        if (event.target.contentEditable == 'true') {\r\n\r\n            codex.caret.saveCurrentInputIndex();\r\n\r\n        }\r\n\r\n        if (codex.content.currentNode === null) {\r\n\r\n            /**\r\n             * If inputs in redactor does not exits, then we put input index 0 not -1\r\n             */\r\n            var indexOfLastInput = codex.state.inputs.length > 0 ? codex.state.inputs.length - 1 : 0;\r\n\r\n            /** If we have any inputs */\r\n            if (codex.state.inputs.length) {\r\n\r\n                /** getting firstlevel parent of input */\r\n                var firstLevelBlock  = codex.content.getFirstLevelBlock(codex.state.inputs[indexOfLastInput]);\r\n            }\r\n\r\n            /** If input is empty, then we set caret to the last input */\r\n            if (codex.state.inputs.length && codex.state.inputs[indexOfLastInput].textContent === '' && firstLevelBlock.dataset.tool == codex.settings.initialBlockPlugin) {\r\n\r\n                codex.caret.setToBlock(indexOfLastInput);\r\n\r\n            } else {\r\n\r\n                /** Create new input when caret clicked in redactors area */\r\n                var NEW_BLOCK_TYPE = codex.settings.initialBlockPlugin;\r\n\r\n                codex.content.insertBlock({\r\n                    type  : NEW_BLOCK_TYPE,\r\n                    block : codex.tools[NEW_BLOCK_TYPE].render()\r\n                });\r\n\r\n                /** If there is no inputs except inserted */\r\n                if (codex.state.inputs.length === 1) {\r\n\r\n                    codex.caret.setToBlock(indexOfLastInput);\r\n\r\n                } else {\r\n\r\n                    /** Set caret to this appended input */\r\n                    codex.caret.setToNextBlock(indexOfLastInput);\r\n                }\r\n            }\r\n\r\n            /**\r\n             * Move toolbar to the right position and open\r\n             */\r\n            codex.toolbar.move();\r\n\r\n\r\n            codex.toolbar.open();\r\n\r\n        } else {\r\n\r\n            /**\r\n             * Move toolbar to the new position and open\r\n             */\r\n            codex.toolbar.move();\r\n\r\n            codex.toolbar.open();\r\n\r\n            /** Close all panels */\r\n            codex.toolbar.settings.close();\r\n            codex.toolbar.toolbox.close();\r\n        }\r\n\r\n\r\n        var inputIsEmpty = !codex.content.currentNode.textContent.trim();\r\n\r\n        if (inputIsEmpty) {\r\n\r\n            /** Show plus button */\r\n            codex.toolbar.showPlusButton();\r\n\r\n        } else {\r\n\r\n            /** Hide plus buttons */\r\n            codex.toolbar.hidePlusButton();\r\n\r\n        }\r\n\r\n        var currentNodeType = codex.content.currentNode.dataset.tool;\r\n\r\n        /** Mark current block*/\r\n        if (currentNodeType != codex.settings.initialBlockPlugin || !inputIsEmpty) {\r\n\r\n            codex.content.markBlock();\r\n\r\n        }\r\n\r\n    };\r\n\r\n    /**\r\n     * This method allows to define, is caret in contenteditable element or not.\r\n     * Otherwise, if we get TEXT node from range container, that will means we have input index.\r\n     * In this case we use default browsers behaviour (if plugin allows that) or overwritten action.\r\n     * Therefore, to be sure that we've clicked first-level block area, we should have currentNode, which always\r\n     * specifies to the first-level block. Other cases we just ignore.\r\n     */\r\n    callbacks.detectWhenClickedOnFirstLevelBlockArea = function() {\r\n\r\n        var selection  = window.getSelection(),\r\n            anchorNode = selection.anchorNode,\r\n            flag = false;\r\n\r\n        if (selection.rangeCount == 0) {\r\n\r\n            codex.content.editorAreaHightlighted = true;\r\n\r\n        } else {\r\n\r\n            if (!codex.core.isDomNode(anchorNode)) {\r\n                anchorNode = anchorNode.parentNode;\r\n            }\r\n\r\n            /** Already founded, without loop */\r\n            if (anchorNode.contentEditable == 'true') {\r\n                flag = true;\r\n            }\r\n\r\n            while (anchorNode.contentEditable != 'true') {\r\n                anchorNode = anchorNode.parentNode;\r\n\r\n                if (anchorNode.contentEditable == 'true') {\r\n                    flag = true;\r\n                }\r\n\r\n                if (anchorNode == document.body) {\r\n                    break;\r\n                }\r\n            }\r\n\r\n            /** If editable element founded, flag is \"TRUE\", Therefore we return \"FALSE\" */\r\n            codex.content.editorAreaHightlighted = flag ? false : true;\r\n        }\r\n\r\n    };\r\n\r\n    /**\r\n     * Toolbar button click handler\r\n     * @param this - cursor to the button\r\n     */\r\n    callbacks.toolbarButtonClicked = function (event) {\r\n\r\n        var button = this;\r\n\r\n        codex.toolbar.current = button.dataset.type;\r\n\r\n        codex.toolbar.toolbox.toolClicked(event);\r\n        codex.toolbar.close();\r\n\r\n    };\r\n\r\n    callbacks.redactorInputEvent = function (event) {\r\n\r\n        /**\r\n         * Clear previous sync-timeout\r\n         */\r\n        if (this.redactorSyncTimeout){\r\n            clearTimeout(this.redactorSyncTimeout);\r\n        }\r\n\r\n        /**\r\n         * Start waiting to input finish and sync redactor\r\n         */\r\n        this.redactorSyncTimeout = setTimeout(function() {\r\n\r\n            codex.content.sync();\r\n\r\n        }, 500);\r\n\r\n    };\r\n\r\n    /** Show or Hide toolbox when plus button is clicked */\r\n    callbacks.plusButtonClicked = function() {\r\n\r\n        if (!codex.nodes.toolbox.classList.contains('opened')) {\r\n\r\n            codex.toolbar.toolbox.open();\r\n\r\n        } else {\r\n\r\n            codex.toolbar.toolbox.close();\r\n\r\n        }\r\n    };\r\n\r\n    /**\r\n     * Block handlers for KeyDown events\r\n     */\r\n    callbacks.blockKeydown = function(event, block) {\r\n\r\n        switch (event.keyCode){\r\n\r\n            case codex.core.keys.DOWN:\r\n            case codex.core.keys.RIGHT:\r\n                codex.callback.blockRightOrDownArrowPressed(block);\r\n                break;\r\n\r\n            case codex.core.keys.BACKSPACE:\r\n                codex.callback.backspacePressed(block);\r\n                break;\r\n\r\n            case codex.core.keys.UP:\r\n            case codex.core.keys.LEFT:\r\n                codex.callback.blockLeftOrUpArrowPressed(block);\r\n                break;\r\n\r\n        }\r\n    };\r\n\r\n    /**\r\n     * RIGHT or DOWN keydowns on block\r\n     */\r\n    callbacks.blockRightOrDownArrowPressed = function (block) {\r\n\r\n        var selection   = window.getSelection(),\r\n            inputs      = codex.state.inputs,\r\n            focusedNode = selection.anchorNode,\r\n            focusedNodeHolder;\r\n\r\n        /** Check for caret existance */\r\n        if (!focusedNode){\r\n            return false;\r\n        }\r\n\r\n        /** Looking for closest (parent) contentEditable element of focused node */\r\n        while (focusedNode.contentEditable != 'true') {\r\n\r\n            focusedNodeHolder = focusedNode.parentNode;\r\n            focusedNode       = focusedNodeHolder;\r\n        }\r\n\r\n        /** Input index in DOM level */\r\n        var editableElementIndex = 0;\r\n        while (focusedNode != inputs[editableElementIndex]) {\r\n            editableElementIndex ++;\r\n        }\r\n\r\n        /**\r\n         * Founded contentEditable element doesn't have childs\r\n         * Or maybe New created block\r\n         */\r\n        if (!focusedNode.textContent)\r\n        {\r\n            codex.caret.setToNextBlock(editableElementIndex);\r\n            return;\r\n        }\r\n\r\n        /**\r\n         * Do nothing when caret doesn not reaches the end of last child\r\n         */\r\n        var caretInLastChild    = false,\r\n            caretAtTheEndOfText = false;\r\n\r\n        var lastChild,\r\n            deepestTextnode;\r\n\r\n        lastChild = focusedNode.childNodes[focusedNode.childNodes.length - 1 ];\r\n\r\n        if (codex.core.isDomNode(lastChild)) {\r\n\r\n            deepestTextnode = codex.content.getDeepestTextNodeFromPosition(lastChild, lastChild.childNodes.length);\r\n\r\n        } else {\r\n\r\n            deepestTextnode = lastChild;\r\n\r\n        }\r\n\r\n        caretInLastChild = selection.anchorNode == deepestTextnode;\r\n        caretAtTheEndOfText = deepestTextnode.length == selection.anchorOffset;\r\n\r\n        if ( !caretInLastChild  || !caretAtTheEndOfText ) {\r\n            codex.core.log('arrow [down|right] : caret does not reached the end');\r\n            return false;\r\n        }\r\n\r\n        codex.caret.setToNextBlock(editableElementIndex);\r\n\r\n    };\r\n\r\n    /**\r\n     * LEFT or UP keydowns on block\r\n     */\r\n    callbacks.blockLeftOrUpArrowPressed = function (block) {\r\n\r\n        var selection   = window.getSelection(),\r\n            inputs      = codex.state.inputs,\r\n            focusedNode = selection.anchorNode,\r\n            focusedNodeHolder;\r\n\r\n        /** Check for caret existance */\r\n        if (!focusedNode){\r\n            return false;\r\n        }\r\n\r\n        /**\r\n         * LEFT or UP not at the beginning\r\n         */\r\n        if ( selection.anchorOffset !== 0) {\r\n            return false;\r\n        }\r\n\r\n        /** Looking for parent contentEditable block */\r\n        while (focusedNode.contentEditable != 'true') {\r\n            focusedNodeHolder = focusedNode.parentNode;\r\n            focusedNode       = focusedNodeHolder;\r\n        }\r\n\r\n        /** Input index in DOM level */\r\n        var editableElementIndex = 0;\r\n        while (focusedNode != inputs[editableElementIndex]) {\r\n            editableElementIndex ++;\r\n        }\r\n\r\n        /**\r\n         * Do nothing if caret is not at the beginning of first child\r\n         */\r\n        var caretInFirstChild   = false,\r\n            caretAtTheBeginning = false;\r\n\r\n        var firstChild,\r\n            deepestTextnode;\r\n\r\n        /**\r\n         * Founded contentEditable element doesn't have childs\r\n         * Or maybe New created block\r\n         */\r\n        if (!focusedNode.textContent) {\r\n            codex.caret.setToPreviousBlock(editableElementIndex);\r\n            return;\r\n        }\r\n\r\n        firstChild = focusedNode.childNodes[0];\r\n\r\n        if (codex.core.isDomNode(firstChild)) {\r\n\r\n            deepestTextnode = codex.content.getDeepestTextNodeFromPosition(firstChild, 0);\r\n\r\n        } else {\r\n\r\n            deepestTextnode = firstChild;\r\n\r\n        }\r\n\r\n        caretInFirstChild   = selection.anchorNode == deepestTextnode;\r\n        caretAtTheBeginning = selection.anchorOffset === 0;\r\n\r\n        if ( caretInFirstChild && caretAtTheBeginning ) {\r\n\r\n            codex.caret.setToPreviousBlock(editableElementIndex);\r\n\r\n        }\r\n\r\n    };\r\n\r\n    /**\r\n     * Callback for enter key pressing in first-level block area\r\n     */\r\n    callbacks.enterPressedOnBlock = function (event) {\r\n\r\n        var NEW_BLOCK_TYPE  = codex.settings.initialBlockPlugin;\r\n\r\n        codex.content.insertBlock({\r\n            type  : NEW_BLOCK_TYPE,\r\n            block : codex.tools[NEW_BLOCK_TYPE].render()\r\n        }, true );\r\n\r\n        codex.toolbar.move();\r\n        codex.toolbar.open();\r\n\r\n    };\r\n\r\n    callbacks.backspacePressed = function (block) {\r\n\r\n        var currentInputIndex = codex.caret.getCurrentInputIndex(),\r\n            range,\r\n            selectionLength,\r\n            firstLevelBlocksCount;\r\n\r\n        if (block.textContent.trim()) {\r\n\r\n            range           = codex.content.getRange();\r\n            selectionLength = range.endOffset - range.startOffset;\r\n\r\n\r\n            if (codex.caret.position.atStart() && !selectionLength && codex.state.inputs[currentInputIndex - 1]) {\r\n\r\n                codex.content.mergeBlocks(currentInputIndex);\r\n\r\n            } else {\r\n\r\n                return;\r\n\r\n            }\r\n        }\r\n\r\n        if (!selectionLength) {\r\n            block.remove();\r\n        }\r\n\r\n\r\n        firstLevelBlocksCount = codex.nodes.redactor.childNodes.length;\r\n\r\n        /**\r\n         * If all blocks are removed\r\n         */\r\n        if (firstLevelBlocksCount === 0) {\r\n\r\n            /** update currentNode variable */\r\n            codex.content.currentNode = null;\r\n\r\n            /** Inserting new empty initial block */\r\n            codex.ui.addInitialBlock();\r\n\r\n            /** Updating inputs state after deleting last block */\r\n            codex.ui.saveInputs();\r\n\r\n            /** Set to current appended block */\r\n            setTimeout(function () {\r\n\r\n                codex.caret.setToPreviousBlock(1);\r\n\r\n            }, 10);\r\n\r\n        } else {\r\n\r\n            if (codex.caret.inputIndex !== 0) {\r\n\r\n                /** Target block is not first */\r\n                codex.caret.setToPreviousBlock(codex.caret.inputIndex);\r\n\r\n            } else {\r\n\r\n                /** If we try to delete first block */\r\n                codex.caret.setToNextBlock(codex.caret.inputIndex);\r\n\r\n            }\r\n        }\r\n\r\n        codex.toolbar.move();\r\n\r\n        if (!codex.toolbar.opened) {\r\n            codex.toolbar.open();\r\n        }\r\n\r\n        /** Updating inputs state */\r\n        codex.ui.saveInputs();\r\n\r\n        /** Prevent default browser behaviour */\r\n        event.preventDefault();\r\n\r\n    };\r\n\r\n    /**\r\n     * @deprecated\r\n     *\r\n     * @param event\r\n     */\r\n    callbacks.blockPaste = function(event) {\r\n\r\n        var currentInputIndex = codex.caret.getCurrentInputIndex(),\r\n            node = codex.state.inputs[currentInputIndex];\r\n\r\n        setTimeout(function() {\r\n\r\n            codex.content.sanitize(node);\r\n\r\n            event.preventDefault();\r\n\r\n        }, 10);\r\n\r\n        event.stopImmediatePropagation();\r\n\r\n    };\r\n\r\n    /**\r\n     * This method is used to observe pasted dirty data.\r\n     *\r\n     * Mutation handlers send to separate observers each mutation (added, changed and so on), which will be\r\n     * passed from handler that sanitizes and replaces data.\r\n     *\r\n     * Probably won't be used\r\n     *\r\n     * @deprecated\r\n     *\r\n     * @param event\r\n     * @private\r\n     */\r\n    callbacks._blockPasteCallback = function(event) {\r\n\r\n        var currentInputIndex = codex.caret.getCurrentInputIndex();\r\n\r\n        /**\r\n         * create an observer instance\r\n         */\r\n        var observer = new MutationObserver(codex.callback.handleMutationsOnPaste);\r\n\r\n        /**\r\n         * configuration of the observer:\r\n         */\r\n        var config = {\r\n            attributes: true,\r\n            childList: false,\r\n            characterData: false,\r\n            subtree : true\r\n        };\r\n\r\n        // pass in the target node, as well as the observer options\r\n        observer.observe(codex.state.inputs[currentInputIndex], config);\r\n    };\r\n\r\n    /**\r\n     * This method prevents default behaviour.\r\n     *\r\n     * We get from clipboard pasted data, sanitize, make a fragment that contains of this sanitized nodes.\r\n     * Firstly, we need to memorize the caret position. We can do that by getting the range of selection.\r\n     * After all, we insert clear fragment into caret placed position. Then, we should move the caret to the last node\r\n     *\r\n     * @param event\r\n     */\r\n    callbacks.blockPasteCallback = function(event) {\r\n\r\n        /** Prevent default behaviour */\r\n        event.preventDefault();\r\n\r\n        /** get html pasted data - dirty data */\r\n        var data = event.clipboardData.getData('text/html');\r\n\r\n        /** Temporary DIV that is used to work with childs as arrays item */\r\n        var div     = codex.draw.node('DIV', '', {}),\r\n            cleaner = new codex.sanitizer.init(codex.sanitizer.Config.BASIC),\r\n            cleanData,\r\n            fragment;\r\n\r\n        /** Create fragment, that we paste to range after proccesing */\r\n        fragment = document.createDocumentFragment();\r\n\r\n        cleanData = cleaner.clean(data);\r\n\r\n        div.innerHTML = cleanData;\r\n\r\n        var node, lastNode;\r\n\r\n        /**\r\n         * and fill in fragment\r\n         */\r\n        while (( node = div.firstChild) ) {\r\n            lastNode = fragment.appendChild(node);\r\n        }\r\n\r\n        /**\r\n         * work with selection and range\r\n         */\r\n        var selection, range;\r\n        selection = window.getSelection();\r\n\r\n        range = selection.getRangeAt(0);\r\n        range.deleteContents();\r\n\r\n        range.insertNode(fragment);\r\n        // document.execCommand('insertParagraph', false, \"<p>\");\r\n\r\n        /** Preserve the selection */\r\n        if (lastNode) {\r\n            range = range.cloneRange();\r\n            range.setStartAfter(lastNode);\r\n            range.collapse(true);\r\n            selection.removeAllRanges();\r\n            selection.addRange(range);\r\n        }\r\n\r\n    };\r\n\r\n    /**\r\n     * Sends all mutations to paste handler\r\n     */\r\n    callbacks.handleMutationsOnPaste = function(mutations) {\r\n\r\n        var self = this;\r\n\r\n        /**\r\n         * Calling function with context of this function.\r\n         * Also, we should sanitize pasted or changed data one time and ignore\r\n         * changings which makes sanitize method.\r\n         * For that, we need to send Context, MutationObserver.__proto__ that contains\r\n         * observer disconnect method.\r\n         */\r\n        mutations.forEach(function(mutation) {\r\n            codex.content.paste.call(self, mutation);\r\n        });\r\n    };\r\n\r\n    /**\r\n     * Clicks on block settings button\r\n     */\r\n    callbacks.showSettingsButtonClicked = function(){\r\n\r\n        /**\r\n         * Get type of current block\r\n         * It uses to append settings from tool.settings property.\r\n         * ...\r\n         * Type is stored in data-type attribute on block\r\n         */\r\n        var currentToolType = codex.content.currentNode.dataset.tool;\r\n\r\n        codex.toolbar.settings.toggle(currentToolType);\r\n\r\n        /** Close toolbox when settings button is active */\r\n        codex.toolbar.toolbox.close();\r\n        codex.toolbar.settings.hideRemoveActions();\r\n\r\n    };\r\n\r\n    return callbacks;\r\n\r\n})({});\r\n\r\nmodule.exports  = callbacks;\r\n\n\n\n// WEBPACK FOOTER //\n// ./modules/callbacks.js","/**\r\n * Codex Editor Draw module\r\n *\r\n * @author Codex Team\r\n * @version 1.0.\r\n */\r\n\r\nvar draw = (function(draw) {\r\n\r\n    /**\r\n     * Base editor wrapper\r\n     */\r\n    draw.wrapper = function () {\r\n\r\n        var wrapper = document.createElement('div');\r\n\r\n        wrapper.className += 'codex-editor';\r\n\r\n        return wrapper;\r\n\r\n    };\r\n\r\n    /**\r\n     * Content-editable holder\r\n     */\r\n    draw.redactor = function () {\r\n\r\n        var redactor = document.createElement('div');\r\n\r\n        redactor.className += 'ce-redactor';\r\n\r\n        return redactor;\r\n\r\n    };\r\n\r\n    draw.ceBlock = function() {\r\n\r\n        var block = document.createElement('DIV');\r\n\r\n        block.className += 'ce_block';\r\n\r\n        return block;\r\n\r\n    };\r\n\r\n    /**\r\n     * Empty toolbar with toggler\r\n     */\r\n    draw.toolbar = function () {\r\n\r\n        var bar = document.createElement('div');\r\n\r\n        bar.className += 'ce-toolbar';\r\n\r\n        return bar;\r\n    };\r\n\r\n    draw.toolbarContent = function() {\r\n\r\n        var wrapper = document.createElement('DIV');\r\n        wrapper.classList.add('ce-toolbar__content');\r\n\r\n        return wrapper;\r\n    };\r\n\r\n    /**\r\n     * Inline toolbar\r\n     */\r\n    draw.inlineToolbar = function() {\r\n\r\n        var bar = document.createElement('DIV');\r\n\r\n        bar.className += 'ce-toolbar-inline';\r\n\r\n        return bar;\r\n\r\n    };\r\n\r\n    /**\r\n     * Wrapper for inline toobar buttons\r\n     */\r\n    draw.inlineToolbarButtons = function() {\r\n\r\n        var wrapper = document.createElement('DIV');\r\n\r\n        wrapper.className += 'ce-toolbar-inline__buttons';\r\n\r\n        return wrapper;\r\n    };\r\n\r\n    /**\r\n     * For some actions\r\n     */\r\n    draw.inlineToolbarActions = function() {\r\n\r\n        var wrapper = document.createElement('DIV');\r\n\r\n        wrapper.className += 'ce-toolbar-inline__actions';\r\n\r\n        return wrapper;\r\n\r\n    };\r\n\r\n    draw.inputForLink = function() {\r\n\r\n        var input = document.createElement('INPUT');\r\n\r\n        input.type        = 'input';\r\n        input.className  += 'inputForLink';\r\n        input.placeholder = 'Вставьте ссылку ...';\r\n        input.setAttribute('form', 'defaultForm');\r\n\r\n        input.setAttribute('autofocus', 'autofocus');\r\n\r\n        return input;\r\n\r\n    };\r\n\r\n    /**\r\n     * Block with notifications\r\n     */\r\n    draw.alertsHolder = function() {\r\n\r\n        var block = document.createElement('div');\r\n\r\n        block.classList.add('ce_notifications-block');\r\n\r\n        return block;\r\n\r\n    };\r\n\r\n    /**\r\n     * @todo Desc\r\n     */\r\n    draw.blockButtons = function() {\r\n\r\n        var block = document.createElement('div');\r\n\r\n        block.className += 'ce-toolbar__actions';\r\n\r\n        return block;\r\n    };\r\n\r\n    /**\r\n     * Block settings panel\r\n     */\r\n    draw.blockSettings = function () {\r\n\r\n        var settings = document.createElement('div');\r\n\r\n        settings.className += 'ce-settings';\r\n\r\n        return settings;\r\n    };\r\n\r\n    draw.defaultSettings = function() {\r\n\r\n        var div = document.createElement('div');\r\n\r\n        div.classList.add('ce-settings_default');\r\n\r\n        return div;\r\n    };\r\n\r\n    draw.pluginsSettings = function() {\r\n\r\n        var div = document.createElement('div');\r\n\r\n        div.classList.add('ce-settings_plugin');\r\n\r\n        return div;\r\n\r\n    };\r\n\r\n    draw.plusButton = function() {\r\n\r\n        var button = document.createElement('span');\r\n\r\n        button.className = 'ce-toolbar__plus';\r\n        // button.innerHTML = '<i class=\"ce-icon-plus\"></i>';\r\n\r\n        return button;\r\n    };\r\n\r\n    /**\r\n     * Settings button in toolbar\r\n     */\r\n    draw.settingsButton = function () {\r\n\r\n        var toggler = document.createElement('span');\r\n\r\n        toggler.className = 'ce-toolbar__settings-btn';\r\n\r\n        /** Toggler button*/\r\n        toggler.innerHTML = '<i class=\"ce-icon-cog\"></i>';\r\n\r\n        return toggler;\r\n    };\r\n\r\n    /**\r\n     * Redactor tools wrapper\r\n     */\r\n\r\n    draw.toolbox = function() {\r\n\r\n        var wrapper = document.createElement('div');\r\n\r\n        wrapper.className = 'ce-toolbar__tools';\r\n\r\n        return wrapper;\r\n    };\r\n\r\n    /**\r\n     * @protected\r\n     *\r\n     * Draws tool buttons for toolbox\r\n     *\r\n     * @param {String} type\r\n     * @param {String} classname\r\n     * @returns {Element}\r\n     */\r\n    draw.toolbarButton = function (type, classname) {\r\n\r\n        var button     = document.createElement(\"li\"),\r\n            tool_icon  = document.createElement(\"i\"),\r\n            tool_title = document.createElement(\"span\");\r\n\r\n        button.dataset.type = type;\r\n        button.setAttribute('title', type);\r\n\r\n        tool_icon.classList.add(classname);\r\n        tool_title.classList.add('ce_toolbar_tools--title');\r\n\r\n\r\n        button.appendChild(tool_icon);\r\n        button.appendChild(tool_title);\r\n\r\n        return button;\r\n\r\n    };\r\n\r\n    /**\r\n     * @protected\r\n     *\r\n     * Draws tools for inline toolbar\r\n     *\r\n     * @param {String} type\r\n     * @param {String} classname\r\n     */\r\n    draw.toolbarButtonInline = function(type, classname) {\r\n        var button     = document.createElement(\"BUTTON\"),\r\n            tool_icon  = document.createElement(\"I\");\r\n\r\n        button.type = \"button\";\r\n        button.dataset.type = type;\r\n        tool_icon.classList.add(classname);\r\n\r\n        button.appendChild(tool_icon);\r\n\r\n        return button;\r\n    };\r\n\r\n    /**\r\n     * Redactor block\r\n     */\r\n    draw.block = function (tagName, content) {\r\n\r\n        var node = document.createElement(tagName);\r\n\r\n        node.innerHTML = content || '';\r\n\r\n        return node;\r\n\r\n    };\r\n\r\n    /**\r\n     * Creates Node with passed tagName and className\r\n     * @param {string}  tagName\r\n     * @param {string} className\r\n     * @param {object} properties - allow to assign properties\r\n     */\r\n    draw.node = function( tagName , className , properties ){\r\n\r\n        var el = document.createElement( tagName );\r\n\r\n        if ( className ) el.className = className;\r\n\r\n        if ( properties ) {\r\n\r\n            for (var name in properties){\r\n                el[name] = properties[name];\r\n            }\r\n        }\r\n\r\n        return el;\r\n    };\r\n\r\n    draw.pluginsRender = function(type, content) {\r\n\r\n        return {\r\n            type  : type,\r\n            block : cEditor.tools[type].render({\r\n                text : content\r\n            })\r\n        };\r\n    };\r\n\r\n    return draw;\r\n\r\n})({});\r\n\r\nmodule.exports = draw;\r\n\r\n\r\n\n\n\n// WEBPACK FOOTER //\n// ./modules/draw.js","/**\r\n * Codex Editor Caret Module\r\n *\r\n * @author Codex Team\r\n * @version 1.0\r\n */\r\n\r\nvar caret = (function(caret) {\r\n\r\n    /**\r\n     * @var {int} InputIndex - editable element in DOM\r\n     */\r\n    caret.inputIndex = null;\r\n\r\n    /**\r\n     * @var {int} offset - caret position in a text node.\r\n     */\r\n    caret.offset = null;\r\n\r\n    /**\r\n     * @var {int} focusedNodeIndex - we get index of child node from first-level block\r\n     */\r\n    caret.focusedNodeIndex = null;\r\n\r\n    /**\r\n     * Creates Document Range and sets caret to the element.\r\n     * @protected\r\n     * @uses caret.save — if you need to save caret position\r\n     * @param {Element} el - Changed Node.\r\n     */\r\n    caret.set = function( el , index, offset) {\r\n\r\n        offset = offset || this.offset || 0;\r\n        index  = index  || this.focusedNodeIndex || 0;\r\n\r\n        var childs = el.childNodes,\r\n            nodeToSet;\r\n\r\n        if ( childs.length === 0 ) {\r\n\r\n            nodeToSet = el;\r\n\r\n        } else {\r\n\r\n            nodeToSet = childs[index];\r\n\r\n        }\r\n\r\n        /** If Element is INPUT */\r\n        if (el.tagName == 'INPUT') {\r\n            el.focus();\r\n            return;\r\n        }\r\n\r\n        if (codex.core.isDomNode(nodeToSet)) {\r\n\r\n            nodeToSet = codex.content.getDeepestTextNodeFromPosition(nodeToSet, nodeToSet.childNodes.length);\r\n        }\r\n\r\n        var range     = document.createRange(),\r\n            selection = window.getSelection();\r\n\r\n        setTimeout(function() {\r\n\r\n            range.setStart(nodeToSet, offset);\r\n            range.setEnd(nodeToSet, offset);\r\n\r\n            selection.removeAllRanges();\r\n            selection.addRange(range);\r\n\r\n            codex.caret.saveCurrentInputIndex();\r\n\r\n        }, 20);\r\n    };\r\n\r\n    /**\r\n     * @protected\r\n     * Updates index of input and saves it in caret object\r\n     */\r\n    caret.saveCurrentInputIndex = function () {\r\n\r\n        /** Index of Input that we paste sanitized content */\r\n        var selection   = window.getSelection(),\r\n            inputs      = codex.state.inputs,\r\n            focusedNode = selection.anchorNode,\r\n            focusedNodeHolder;\r\n\r\n        if (!focusedNode){\r\n            return;\r\n        }\r\n\r\n        /** Looking for parent contentEditable block */\r\n        while (focusedNode.contentEditable != 'true') {\r\n            focusedNodeHolder = focusedNode.parentNode;\r\n            focusedNode       = focusedNodeHolder;\r\n        }\r\n\r\n        /** Input index in DOM level */\r\n        var editableElementIndex = 0;\r\n\r\n        while (focusedNode != inputs[editableElementIndex]) {\r\n            editableElementIndex ++;\r\n        }\r\n\r\n        this.inputIndex = editableElementIndex;\r\n    };\r\n\r\n    /**\r\n     * Returns current input index (caret object)\r\n     */\r\n    caret.getCurrentInputIndex = function() {\r\n        return this.inputIndex;\r\n    };\r\n\r\n    /**\r\n     * @param {int} index - index of first-level block after that we set caret into next input\r\n     */\r\n    caret.setToNextBlock = function(index) {\r\n\r\n        var inputs = codex.state.inputs,\r\n            nextInput = inputs[index + 1];\r\n\r\n        if (!nextInput) {\r\n            codex.core.log('We are reached the end');\r\n            return;\r\n        }\r\n\r\n        /**\r\n         * When new Block created or deleted content of input\r\n         * We should add some text node to set caret\r\n         */\r\n        if (!nextInput.childNodes.length) {\r\n            var emptyTextElement = document.createTextNode('');\r\n            nextInput.appendChild(emptyTextElement);\r\n        }\r\n\r\n        codex.caret.inputIndex = index + 1;\r\n        codex.caret.set(nextInput, 0, 0);\r\n        codex.content.workingNodeChanged(nextInput);\r\n\r\n    };\r\n\r\n    /**\r\n     * @param {int} index - index of target input.\r\n     * Sets caret to input with this index\r\n     */\r\n    caret.setToBlock = function(index) {\r\n\r\n        var inputs = codex.state.inputs,\r\n            targetInput = inputs[index];\r\n\r\n        console.assert( targetInput , 'caret.setToBlock: target input does not exists');\r\n\r\n        if ( !targetInput ) {\r\n            return;\r\n        }\r\n\r\n        /**\r\n         * When new Block created or deleted content of input\r\n         * We should add some text node to set caret\r\n         */\r\n        if (!targetInput.childNodes.length) {\r\n            var emptyTextElement = document.createTextNode('');\r\n            targetInput.appendChild(emptyTextElement);\r\n        }\r\n\r\n        codex.caret.inputIndex = index;\r\n        codex.caret.set(targetInput, 0, 0);\r\n        codex.content.workingNodeChanged(targetInput);\r\n\r\n    };\r\n\r\n    /**\r\n     * @param {int} index - index of input\r\n     */\r\n    caret.setToPreviousBlock = function(index) {\r\n\r\n        index = index || 0;\r\n\r\n        var inputs = codex.state.inputs,\r\n            previousInput = inputs[index - 1],\r\n            lastChildNode,\r\n            lengthOfLastChildNode,\r\n            emptyTextElement;\r\n\r\n\r\n        if (!previousInput) {\r\n            codex.core.log('We are reached first node');\r\n            return;\r\n        }\r\n\r\n        lastChildNode = codex.content.getDeepestTextNodeFromPosition(previousInput, previousInput.childNodes.length);\r\n        lengthOfLastChildNode = lastChildNode.length;\r\n\r\n        /**\r\n         * When new Block created or deleted content of input\r\n         * We should add some text node to set caret\r\n         */\r\n        if (!previousInput.childNodes.length) {\r\n\r\n            emptyTextElement = document.createTextNode('');\r\n            previousInput.appendChild(emptyTextElement);\r\n        }\r\n        codex.caret.inputIndex = index - 1;\r\n        codex.caret.set(previousInput, previousInput.childNodes.length - 1, lengthOfLastChildNode);\r\n        codex.content.workingNodeChanged(inputs[index - 1]);\r\n    };\r\n\r\n    caret.position = {\r\n\r\n        atStart : function() {\r\n\r\n            var selection       = window.getSelection(),\r\n                anchorOffset    = selection.anchorOffset,\r\n                anchorNode      = selection.anchorNode,\r\n                firstLevelBlock = codex.content.getFirstLevelBlock(anchorNode),\r\n                pluginsRender   = firstLevelBlock.childNodes[0];\r\n\r\n            if (!codex.core.isDomNode(anchorNode)) {\r\n                anchorNode = anchorNode.parentNode;\r\n            }\r\n\r\n            var isFirstNode  = anchorNode === pluginsRender.childNodes[0],\r\n                isOffsetZero = anchorOffset === 0;\r\n\r\n            return isFirstNode && isOffsetZero;\r\n\r\n        },\r\n\r\n        atTheEnd : function() {\r\n\r\n            var selection    = window.getSelection(),\r\n                anchorOffset = selection.anchorOffset,\r\n                anchorNode   = selection.anchorNode;\r\n\r\n            /** Caret is at the end of input */\r\n            return !anchorNode || !anchorNode.length || anchorOffset === anchorNode.length;\r\n        }\r\n    };\r\n\r\n    return caret;\r\n\r\n})({});\r\n\r\nmodule.exports = caret;\n\n\n// WEBPACK FOOTER //\n// ./modules/caret.js","/**\r\n * Codex Editor Notification Module\r\n *\r\n * @author Codex Team\r\n * @version 1.0\r\n */\r\n\r\nvar notifications = (function(notifications) {\r\n\r\n    /**\r\n     * Error notificator. Shows block with message\r\n     * @protected\r\n     */\r\n    notifications.errorThrown = function(errorMsg, event) {\r\n\r\n        codex.notifications.send('This action is not available currently', event.type, false);\r\n\r\n    };\r\n\r\n    /**\r\n     * Appends notification with different types\r\n     * @param message {string} - Error or alert message\r\n     * @param type {string} - Type of message notification. Ex: Error, Warning, Danger ...\r\n     * @param append {boolean} - can be True or False when notification should be inserted after\r\n     */\r\n    notifications.send = function(message, type, append) {\r\n\r\n        var notification = codex.draw.block('div');\r\n\r\n        notification.textContent = message;\r\n        notification.classList.add('ce_notification-item', 'ce_notification-' + type, 'flipInX');\r\n\r\n        if (!append) {\r\n            codex.nodes.notifications.innerHTML = '';\r\n        }\r\n\r\n        codex.nodes.notifications.appendChild(notification);\r\n\r\n        setTimeout(function () {\r\n            notification.remove();\r\n        }, 3000);\r\n\r\n    };\r\n\r\n    return notifications;\r\n\r\n})({});\r\n\r\nmodule.exports = notifications;\n\n\n// WEBPACK FOOTER //\n// ./modules/notifications.js","/**\r\n * Codex Editor Parser Module\r\n *\r\n * @author Codex Team\r\n * @version 1.1\r\n */\r\n\r\nvar parser = (function(parser) {\r\n\r\n    /** inserting text */\r\n    parser.insertPastedContent = function(blockType, tag) {\r\n\r\n        codex.content.insertBlock({\r\n            type :  blockType.type,\r\n            block : blockType.render({\r\n                text : tag.innerHTML\r\n            })\r\n        });\r\n\r\n    };\r\n\r\n    /**\r\n     * Check DOM node for display style: separated block or child-view\r\n     */\r\n    parser.isFirstLevelBlock = function (node) {\r\n\r\n        return node.nodeType == cEditor.core.nodeTypes.TAG &&\r\n            node.classList.contains(cEditor.ui.className.BLOCK_CLASSNAME);\r\n\r\n    };\r\n\r\n    return parser;\r\n\r\n})({});\r\n\r\nmodule.exports = parser;\r\n\n\n\n// WEBPACK FOOTER //\n// ./modules/parser.js","/**\r\n * Codex Sanitizer\r\n */\r\n\r\nvar janitor = require('html-janitor');\r\n\r\nvar sanitizer = (function(sanitizer) {\r\n\r\n    /**\r\n     * Basic config\r\n     */\r\n    var Config = {\r\n\r\n        BASIC : {\r\n\r\n            tags: {\r\n                p: {},\r\n                a: {\r\n                    href: true,\r\n                    target: '_blank',\r\n                    rel: 'nofollow'\r\n                },\r\n                ul: {},\r\n                i: {},\r\n                b: {},\r\n                strong: {},\r\n                em: {},\r\n                span: {}\r\n            }\r\n        }\r\n    };\r\n\r\n    sanitizer.Config = Config;\r\n\r\n    sanitizer.init = janitor;\r\n\r\n    return sanitizer;\r\n\r\n})({});\r\n\r\nmodule.exports = sanitizer;\r\n\r\n\r\n\n\n\n// WEBPACK FOOTER //\n// ./modules/sanitizer.js","(function (root, factory) {\n  if (typeof define === 'function' && define.amd) {\n    define('html-janitor', factory);\n  } else if (typeof exports === 'object') {\n    module.exports = factory();\n  } else {\n    root.HTMLJanitor = factory();\n  }\n}(this, function () {\n\n  /**\n   * @param {Object} config.tags Dictionary of allowed tags.\n   * @param {boolean} config.keepNestedBlockElements Default false.\n   */\n  function HTMLJanitor(config) {\n\n    var tagDefinitions = config['tags'];\n    var tags = Object.keys(tagDefinitions);\n\n    var validConfigValues = tags\n      .map(function(k) { return typeof tagDefinitions[k]; })\n      .every(function(type) { return type === 'object' || type === 'boolean' || type === 'function'; });\n\n    if(!validConfigValues) {\n      throw new Error(\"The configuration was invalid\");\n    }\n\n    this.config = config;\n  }\n\n  // TODO: not exhaustive?\n  var blockElementNames = ['P', 'LI', 'TD', 'TH', 'DIV', 'H1', 'H2', 'H3', 'H4', 'H5', 'H6', 'PRE'];\n  function isBlockElement(node) {\n    return blockElementNames.indexOf(node.nodeName) !== -1;\n  }\n\n  var inlineElementNames = ['A', 'B', 'STRONG', 'I', 'EM', 'SUB', 'SUP', 'U', 'STRIKE'];\n  function isInlineElement(node) {\n    return inlineElementNames.indexOf(node.nodeName) !== -1;\n  }\n\n  HTMLJanitor.prototype.clean = function (html) {\n    var sandbox = document.createElement('div');\n    sandbox.innerHTML = html;\n\n    this._sanitize(sandbox);\n\n    return sandbox.innerHTML;\n  };\n\n  HTMLJanitor.prototype._sanitize = function (parentNode) {\n    var treeWalker = createTreeWalker(parentNode);\n    var node = treeWalker.firstChild();\n    if (!node) { return; }\n\n    do {\n      // Ignore nodes that have already been sanitized\n      if (node._sanitized) {\n        continue;\n      }\n\n      if (node.nodeType === Node.TEXT_NODE) {\n        // If this text node is just whitespace and the previous or next element\n        // sibling is a block element, remove it\n        // N.B.: This heuristic could change. Very specific to a bug with\n        // `contenteditable` in Firefox: http://jsbin.com/EyuKase/1/edit?js,output\n        // FIXME: make this an option?\n        if (node.data.trim() === ''\n            && ((node.previousElementSibling && isBlockElement(node.previousElementSibling))\n                 || (node.nextElementSibling && isBlockElement(node.nextElementSibling)))) {\n          parentNode.removeChild(node);\n          this._sanitize(parentNode);\n          break;\n        } else {\n          continue;\n        }\n      }\n\n      // Remove all comments\n      if (node.nodeType === Node.COMMENT_NODE) {\n        parentNode.removeChild(node);\n        this._sanitize(parentNode);\n        break;\n      }\n\n      var isInline = isInlineElement(node);\n      var containsBlockElement;\n      if (isInline) {\n        containsBlockElement = Array.prototype.some.call(node.childNodes, isBlockElement);\n      }\n\n      // Block elements should not be nested (e.g. <li><p>...); if\n      // they are, we want to unwrap the inner block element.\n      var isNotTopContainer = !! parentNode.parentNode;\n      var isNestedBlockElement =\n            isBlockElement(parentNode) &&\n            isBlockElement(node) &&\n            isNotTopContainer;\n\n      var nodeName = node.nodeName.toLowerCase();\n\n      var allowedAttrs = getAllowedAttrs(this.config, nodeName, node);\n\n      var isInvalid = isInline && containsBlockElement;\n\n      // Drop tag entirely according to the whitelist *and* if the markup\n      // is invalid.\n      if (isInvalid || shouldRejectNode(node, allowedAttrs)\n          || (!this.config.keepNestedBlockElements && isNestedBlockElement)) {\n        // Do not keep the inner text of SCRIPT/STYLE elements.\n        if (! (node.nodeName === 'SCRIPT' || node.nodeName === 'STYLE')) {\n          while (node.childNodes.length > 0) {\n            parentNode.insertBefore(node.childNodes[0], node);\n          }\n        }\n        parentNode.removeChild(node);\n\n        this._sanitize(parentNode);\n        break;\n      }\n\n      // Sanitize attributes\n      for (var a = 0; a < node.attributes.length; a += 1) {\n        var attr = node.attributes[a];\n\n        if (shouldRejectAttr(attr, allowedAttrs, node)) {\n          node.removeAttribute(attr.name);\n          // Shift the array to continue looping.\n          a = a - 1;\n        }\n      }\n\n      // Sanitize children\n      this._sanitize(node);\n\n      // Mark node as sanitized so it's ignored in future runs\n      node._sanitized = true;\n    } while ((node = treeWalker.nextSibling()));\n  };\n\n  function createTreeWalker(node) {\n    return document.createTreeWalker(node,\n                                     NodeFilter.SHOW_TEXT | NodeFilter.SHOW_ELEMENT | NodeFilter.SHOW_COMMENT,\n                                     null, false);\n  }\n\n  function getAllowedAttrs(config, nodeName, node){\n    if (typeof config.tags[nodeName] === 'function') {\n      return config.tags[nodeName](node);\n    } else {\n      return config.tags[nodeName];\n    }\n  }\n\n  function shouldRejectNode(node, allowedAttrs){\n    if (typeof allowedAttrs === 'undefined') {\n      return true;\n    } else if (typeof allowedAttrs === 'boolean') {\n      return !allowedAttrs;\n    }\n\n    return false;\n  }\n\n  function shouldRejectAttr(attr, allowedAttrs, node){\n    var attrName = attr.name.toLowerCase();\n\n    if (allowedAttrs === true){\n      return false;\n    } else if (typeof allowedAttrs[attrName] === 'function'){\n      return !allowedAttrs[attrName](attr.value, node);\n    } else if (typeof allowedAttrs[attrName] === 'undefined'){\n      return true;\n    } else if (allowedAttrs[attrName] === false) {\n      return true;\n    } else if (typeof allowedAttrs[attrName] === 'string') {\n      return (allowedAttrs[attrName] !== attr.value);\n    }\n\n    return false;\n  }\n\n  return HTMLJanitor;\n\n}));\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/html-janitor/src/html-janitor.js\n// module id = 19\n// module chunks = 0"],"sourceRoot":""}